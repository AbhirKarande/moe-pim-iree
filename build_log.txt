[625/1615] Building CXX object compiler/src/iree/...jects.dir/TileAndDistributeToWorkgroupsPass.cpp.
In file included from /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/../mlir/include/mlir/IR/AttrTypeSubElements.h:20,
                 from /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/../mlir/include/mlir/IR/StorageUniquerSupport.h:16,
                 from /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/../mlir/include/mlir/IR/TypeSupport.h:17,
                 from /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/../mlir/include/mlir/IR/Types.h:12,
                 from /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/../mlir/include/mlir/IR/Value.h:16,
                 from /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/../mlir/include/mlir/IR/BlockSupport.h:16,
                 from /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/../mlir/include/mlir/IR/OperationSupport.h:17,
                 from /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/../mlir/include/mlir/IR/Dialect.h:17,
                 from /scratch1/akarande/moe-pim-iree/llvm-external-projects/iree-dialects/include/iree-dialects/Dialect/LinalgExt/IR/LinalgExtDialect.h:10,
                 from /scratch1/akarande/moe-pim-iree/compiler/src/iree/compiler/Codegen/Common/TileAndDistributeToWorkgroupsPass.cpp:17:
In member function ‘unsigned int llvm::SmallDenseMap<KeyT, ValueT, InlineBuckets, KeyInfoT, BucketT>::getNumBuckets() const [with KeyT = unsigned int; ValueT = llvm::detail::DenseSetEmpty; unsigned int InlineBuckets = 4; KeyInfoT = llvm::DenseMapInfo<unsigned int>; BucketT = llvm::detail::DenseSetPair<unsigned int>]’,
    inlined from ‘unsigned int llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::getNumBuckets() const [with DerivedT = llvm::SmallDenseMap<unsigned int, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<unsigned int>, llvm::detail::DenseSetPair<unsigned int> >; KeyT = unsigned int; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<unsigned int>; BucketT = llvm::detail::DenseSetPair<unsigned int>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:525:62,
    inlined from ‘BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::getBucketsEnd() [with DerivedT = llvm::SmallDenseMap<unsigned int, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<unsigned int>, llvm::detail::DenseSetPair<unsigned int> >; KeyT = unsigned int; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<unsigned int>; BucketT = llvm::detail::DenseSetPair<unsigned int>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:529:40,
    inlined from ‘void llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::initEmpty() [with DerivedT = llvm::SmallDenseMap<unsigned int, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<unsigned int>, llvm::detail::DenseSetPair<unsigned int> >; KeyT = unsigned int; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<unsigned int>; BucketT = llvm::detail::DenseSetPair<unsigned int>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:380:55,
    inlined from ‘void llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::moveFromOldBuckets(BucketT*, BucketT*) [with DerivedT = llvm::SmallDenseMap<unsigned int, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<unsigned int>, llvm::detail::DenseSetPair<unsigned int> >; KeyT = unsigned int; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<unsigned int>; BucketT = llvm::detail::DenseSetPair<unsigned int>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:396:14,
    inlined from ‘void llvm::SmallDenseMap<KeyT, ValueT, InlineBuckets, KeyInfoT, BucketT>::grow(unsigned int) [with KeyT = unsigned int; ValueT = llvm::detail::DenseSetEmpty; unsigned int InlineBuckets = 4; KeyInfoT = llvm::DenseMapInfo<unsigned int>; BucketT = llvm::detail::DenseSetPair<unsigned int>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:1077:31,
    inlined from ‘void llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::grow(unsigned int) [with DerivedT = llvm::SmallDenseMap<unsigned int, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<unsigned int>, llvm::detail::DenseSetPair<unsigned int> >; KeyT = unsigned int; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<unsigned int>; BucketT = llvm::detail::DenseSetPair<unsigned int>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:537:40,
    inlined from ‘BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = unsigned int; DerivedT = llvm::SmallDenseMap<unsigned int, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<unsigned int>, llvm::detail::DenseSetPair<unsigned int> >; KeyT = unsigned int; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<unsigned int>; BucketT = llvm::detail::DenseSetPair<unsigned int>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:586:17,
    inlined from ‘BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = const unsigned int&; ValueArgs = {llvm::detail::DenseSetEmpty&}; DerivedT = llvm::SmallDenseMap<unsigned int, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<unsigned int>, llvm::detail::DenseSetPair<unsigned int> >; KeyT = unsigned int; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<unsigned int>; BucketT = llvm::detail::DenseSetPair<unsigned int>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:37,
    inlined from ‘std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::try_emplace(const KeyT&, Ts&& ...) [with Ts = {llvm::detail::DenseSetEmpty&}; DerivedT = llvm::SmallDenseMap<unsigned int, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<unsigned int>, llvm::detail::DenseSetPair<unsigned int> >; KeyT = unsigned int; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<unsigned int>; BucketT = llvm::detail::DenseSetPair<unsigned int>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:258:33,
    inlined from ‘std::pair<llvm::detail::DenseSetImpl<ValueT, MapTy, ValueInfoT>::Iterator, bool> llvm::detail::DenseSetImpl<ValueT, MapTy, ValueInfoT>::insert(const ValueT&) [with ValueT = unsigned int; MapTy = llvm::SmallDenseMap<unsigned int, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<unsigned int>, llvm::detail::DenseSetPair<unsigned int> >; ValueInfoT = llvm::DenseMapInfo<unsigned int>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseSet.h:208:30,
    inlined from ‘void llvm::detail::DenseSetImpl<ValueT, MapTy, ValueInfoT>::insert(InputIt, InputIt) [with InputIt = unsigned int*; ValueT = unsigned int; MapTy = llvm::SmallDenseMap<unsigned int, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<unsigned int>, llvm::detail::DenseSetPair<unsigned int> >; ValueInfoT = llvm::DenseMapInfo<unsigned int>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseSet.h:232:13,
    inlined from ‘mlir::LogicalResult mlir::iree_compiler::getTileAndDistributeConfig.constprop(llvm::ArrayRef<mlir::Operation*>, mlir::Operation*&, llvm::SmallVectorImpl<long int>&, llvm::SmallVectorImpl<long int>&, llvm::SmallVectorImpl<long int>&, llvm::SmallVectorImpl<unsigned int>&)’ at /scratch1/akarande/moe-pim-iree/compiler/src/iree/compiler/Codegen/Common/TileAndDistributeToWorkgroupsPass.cpp:100:31:
/scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:1170:18: warning: ‘*(const llvm::SmallDenseMap<unsigned int, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<unsigned int, void>, llvm::detail::DenseSetPair<unsigned int> >::LargeRep*)((char*)&partitionableLoopsSet + offsetof(llvm::SmallDenseSet<unsigned int, 4, llvm::DenseMapInfo<unsigned int, void> >,llvm::SmallDenseSet<unsigned int, 4, llvm::DenseMapInfo<unsigned int, void> >::<unnamed>.llvm::detail::DenseSetImpl<unsigned int, llvm::SmallDenseMap<unsigned int, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<unsigned int, void>, llvm::detail::DenseSetPair<unsigned int> >, llvm::DenseMapInfo<unsigned int, void> >::TheMap.llvm::SmallDenseMap<unsigned int, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<unsigned int, void>, llvm::detail::DenseSetPair<unsigned int> >::storage.llvm::AlignedCharArrayUnion<llvm::detail::DenseSetPair<unsigned int>[4], llvm::SmallDenseMap<unsigned int, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<unsigned int, void>, llvm::detail::DenseSetPair<unsigned int> >::LargeRep>::buffer[0])).llvm::SmallDenseMap<unsigned int, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<unsigned int>, llvm::detail::DenseSetPair<unsigned int> >::LargeRep::NumBuckets’ may be used uninitialized [-Wmaybe-uninitialized]
 1170 |     return Small ? InlineBuckets : getLargeRep()->NumBuckets;
      |            ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/scratch1/akarande/moe-pim-iree/compiler/src/iree/compiler/Codegen/Common/TileAndDistributeToWorkgroupsPass.cpp: In function ‘mlir::LogicalResult mlir::iree_compiler::getTileAndDistributeConfig.constprop(llvm::ArrayRef<mlir::Operation*>, mlir::Operation*&, llvm::SmallVectorImpl<long int>&, llvm::SmallVectorImpl<long int>&, llvm::SmallVectorImpl<long int>&, llvm::SmallVectorImpl<unsigned int>&)’:
/scratch1/akarande/moe-pim-iree/compiler/src/iree/compiler/Codegen/Common/TileAndDistributeToWorkgroupsPass.cpp:99:33: note: ‘partitionableLoopsSet’ declared here
   99 |   llvm::SmallDenseSet<unsigned> partitionableLoopsSet;
      |                                 ^~~~~~~~~~~~~~~~~~~~~
[628/1615] Building CXX object compiler/src/iree/...mon_Common.objects.dir/VectorReductionToGPU.cpp.
In file included from /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/../mlir/include/mlir/IR/AttrTypeSubElements.h:20,
                 from /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/../mlir/include/mlir/IR/StorageUniquerSupport.h:16,
                 from /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/../mlir/include/mlir/IR/TypeSupport.h:17,
                 from /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/../mlir/include/mlir/IR/Types.h:12,
                 from /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/../mlir/include/mlir/IR/Value.h:16,
                 from /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/../mlir/include/mlir/IR/BlockSupport.h:16,
                 from /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/../mlir/include/mlir/IR/OperationSupport.h:17,
                 from /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/../mlir/include/mlir/IR/Dialect.h:17,
                 from /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/../mlir/include/mlir/IR/OpDefinition.h:22,
                 from /scratch1/akarande/moe-pim-iree/compiler/src/iree/compiler/Dialect/HAL/IR/HALTraits.h:10,
                 from /scratch1/akarande/moe-pim-iree/compiler/src/iree/compiler/Dialect/HAL/IR/HALOps.h:12,
                 from /scratch1/akarande/moe-pim-iree/compiler/src/iree/compiler/Codegen/PassDetail.h:10,
                 from /scratch1/akarande/moe-pim-iree/compiler/src/iree/compiler/Codegen/Common/VectorReductionToGPU.cpp:7:
In member function ‘const BucketT* llvm::SmallDenseMap<KeyT, ValueT, InlineBuckets, KeyInfoT, BucketT>::getBuckets() const [with KeyT = mlir::Operation*; ValueT = llvm::detail::DenseSetEmpty; unsigned int InlineBuckets = 8; KeyInfoT = llvm::DenseMapInfo<mlir::Operation*, void>; BucketT = llvm::detail::DenseSetPair<mlir::Operation*>]’,
    inlined from ‘BucketT* llvm::SmallDenseMap<KeyT, ValueT, InlineBuckets, KeyInfoT, BucketT>::getBuckets() [with KeyT = mlir::Operation*; ValueT = llvm::detail::DenseSetEmpty; unsigned int InlineBuckets = 8; KeyInfoT = llvm::DenseMapInfo<mlir::Operation*, void>; BucketT = llvm::detail::DenseSetPair<mlir::Operation*>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:1166:58,
    inlined from ‘BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::getBuckets() [with DerivedT = llvm::SmallDenseMap<mlir::Operation*, llvm::detail::DenseSetEmpty, 8, llvm::DenseMapInfo<mlir::Operation*, void>, llvm::detail::DenseSetPair<mlir::Operation*> >; KeyT = mlir::Operation*; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<mlir::Operation*, void>; BucketT = llvm::detail::DenseSetPair<mlir::Operation*>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:521:53,
    inlined from ‘void llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::initEmpty() [with DerivedT = llvm::SmallDenseMap<mlir::Operation*, llvm::detail::DenseSetEmpty, 8, llvm::DenseMapInfo<mlir::Operation*, void>, llvm::detail::DenseSetPair<mlir::Operation*> >; KeyT = mlir::Operation*; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<mlir::Operation*, void>; BucketT = llvm::detail::DenseSetPair<mlir::Operation*>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:380:33,
    inlined from ‘void llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::moveFromOldBuckets(BucketT*, BucketT*) [with DerivedT = llvm::SmallDenseMap<mlir::Operation*, llvm::detail::DenseSetEmpty, 8, llvm::DenseMapInfo<mlir::Operation*, void>, llvm::detail::DenseSetPair<mlir::Operation*> >; KeyT = mlir::Operation*; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<mlir::Operation*, void>; BucketT = llvm::detail::DenseSetPair<mlir::Operation*>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:396:14,
    inlined from ‘void llvm::SmallDenseMap<KeyT, ValueT, InlineBuckets, KeyInfoT, BucketT>::grow(unsigned int) [with KeyT = mlir::Operation*; ValueT = llvm::detail::DenseSetEmpty; unsigned int InlineBuckets = 8; KeyInfoT = llvm::DenseMapInfo<mlir::Operation*, void>; BucketT = llvm::detail::DenseSetPair<mlir::Operation*>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:1077:31,
    inlined from ‘void llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::grow(unsigned int) [with DerivedT = llvm::SmallDenseMap<mlir::Operation*, llvm::detail::DenseSetEmpty, 8, llvm::DenseMapInfo<mlir::Operation*, void>, llvm::detail::DenseSetPair<mlir::Operation*> >; KeyT = mlir::Operation*; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<mlir::Operation*, void>; BucketT = llvm::detail::DenseSetPair<mlir::Operation*>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:537:40,
    inlined from ‘BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = mlir::Operation*; DerivedT = llvm::SmallDenseMap<mlir::Operation*, llvm::detail::DenseSetEmpty, 8, llvm::DenseMapInfo<mlir::Operation*, void>, llvm::detail::DenseSetPair<mlir::Operation*> >; KeyT = mlir::Operation*; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<mlir::Operation*, void>; BucketT = llvm::detail::DenseSetPair<mlir::Operation*>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:586:17,
    inlined from ‘BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = mlir::Operation* const&; ValueArgs = {llvm::detail::DenseSetEmpty&}; DerivedT = llvm::SmallDenseMap<mlir::Operation*, llvm::detail::DenseSetEmpty, 8, llvm::DenseMapInfo<mlir::Operation*, void>, llvm::detail::DenseSetPair<mlir::Operation*> >; KeyT = mlir::Operation*; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<mlir::Operation*, void>; BucketT = llvm::detail::DenseSetPair<mlir::Operation*>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:37,
    inlined from ‘std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::try_emplace(const KeyT&, Ts&& ...) [with Ts = {llvm::detail::DenseSetEmpty&}; DerivedT = llvm::SmallDenseMap<mlir::Operation*, llvm::detail::DenseSetEmpty, 8, llvm::DenseMapInfo<mlir::Operation*, void>, llvm::detail::DenseSetPair<mlir::Operation*> >; KeyT = mlir::Operation*; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<mlir::Operation*, void>; BucketT = llvm::detail::DenseSetPair<mlir::Operation*>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:258:33,
    inlined from ‘std::pair<llvm::detail::DenseSetImpl<ValueT, MapTy, ValueInfoT>::Iterator, bool> llvm::detail::DenseSetImpl<ValueT, MapTy, ValueInfoT>::insert(const ValueT&) [with ValueT = mlir::Operation*; MapTy = llvm::SmallDenseMap<mlir::Operation*, llvm::detail::DenseSetEmpty, 8, llvm::DenseMapInfo<mlir::Operation*, void>, llvm::detail::DenseSetPair<mlir::Operation*> >; ValueInfoT = llvm::DenseMapInfo<mlir::Operation*, void>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseSet.h:208:30,
    inlined from ‘bool llvm::SetVector<T, Vector, Set>::insert(const value_type&) [with T = mlir::Operation*; Vector = llvm::SmallVector<mlir::Operation*, 8>; Set = llvm::SmallDenseSet<mlir::Operation*, 8, llvm::DenseMapInfo<mlir::Operation*, void> >]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/SetVector.h:142:30,
    inlined from ‘void mlir::iree_compiler::moveScalarAndBindingUniformCode(mlir::vector::WarpExecuteOnLane0Op)’ at /scratch1/akarande/moe-pim-iree/compiler/src/iree/compiler/Codegen/Common/VectorReductionToGPU.cpp:79:23,
    inlined from ‘virtual void mlir::iree_compiler::{anonymous}::VectorReduceToGPUPass::runOnOperation()’ at /scratch1/akarande/moe-pim-iree/compiler/src/iree/compiler/Codegen/Common/VectorReductionToGPU.cpp:186:36:
/scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:1161:18: warning: ‘*(const llvm::SmallDenseMap<mlir::Operation*, llvm::detail::DenseSetEmpty, 8, llvm::DenseMapInfo<mlir::Operation*, void>, llvm::detail::DenseSetPair<mlir::Operation*> >::LargeRep*)((char*)&opsToMove + offsetof(llvm::SmallSetVector<mlir::Operation*, 8>,llvm::SmallSetVector<mlir::Operation*, 8>::<unnamed>.llvm::SetVector<mlir::Operation*, llvm::SmallVector<mlir::Operation*, 8>, llvm::SmallDenseSet<mlir::Operation*, 8, llvm::DenseMapInfo<mlir::Operation*, void> > >::set_.llvm::SmallDenseSet<mlir::Operation*, 8, llvm::DenseMapInfo<mlir::Operation*, void> >::<unnamed>.llvm::detail::DenseSetImpl<mlir::Operation*, llvm::SmallDenseMap<mlir::Operation*, llvm::detail::DenseSetEmpty, 8, llvm::DenseMapInfo<mlir::Operation*, void>, llvm::detail::DenseSetPair<mlir::Operation*> >, llvm::DenseMapInfo<mlir::Operation*, void> >::TheMap.llvm::SmallDenseMap<mlir::Operation*, llvm::detail::DenseSetEmpty, 8, llvm::DenseMapInfo<mlir::Operation*, void>, llvm::detail::DenseSetPair<mlir::Operation*> >::storage.llvm::AlignedCharArrayUnion<llvm::detail::DenseSetPair<mlir::Operation*>[8], llvm::SmallDenseMap<mlir::Operation*, llvm::detail::DenseSetEmpty, 8, llvm::DenseMapInfo<mlir::Operation*, void>, llvm::detail::DenseSetPair<mlir::Operation*> >::LargeRep>::buffer[0])).llvm::SmallDenseMap<mlir::Operation*, llvm::detail::DenseSetEmpty, 8, llvm::DenseMapInfo<mlir::Operation*, void>, llvm::detail::DenseSetPair<mlir::Operation*> >::LargeRep::Buckets’ may be used uninitialized [-Wmaybe-uninitialized]
 1161 |     return Small ? getInlineBuckets() : getLargeRep()->Buckets;
      |            ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/scratch1/akarande/moe-pim-iree/compiler/src/iree/compiler/Codegen/Common/VectorReductionToGPU.cpp: In member function ‘virtual void mlir::iree_compiler::{anonymous}::VectorReduceToGPUPass::runOnOperation()’:
/scratch1/akarande/moe-pim-iree/compiler/src/iree/compiler/Codegen/Common/VectorReductionToGPU.cpp:63:40: note: ‘opsToMove’ declared here
   63 |   llvm::SmallSetVector<Operation *, 8> opsToMove;
      |                                        ^~~~~~~~~
In member function ‘unsigned int llvm::SmallDenseMap<KeyT, ValueT, InlineBuckets, KeyInfoT, BucketT>::getNumBuckets() const [with KeyT = mlir::Operation*; ValueT = llvm::detail::DenseSetEmpty; unsigned int InlineBuckets = 8; KeyInfoT = llvm::DenseMapInfo<mlir::Operation*, void>; BucketT = llvm::detail::DenseSetPair<mlir::Operation*>]’,
    inlined from ‘unsigned int llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::getNumBuckets() const [with DerivedT = llvm::SmallDenseMap<mlir::Operation*, llvm::detail::DenseSetEmpty, 8, llvm::DenseMapInfo<mlir::Operation*, void>, llvm::detail::DenseSetPair<mlir::Operation*> >; KeyT = mlir::Operation*; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<mlir::Operation*, void>; BucketT = llvm::detail::DenseSetPair<mlir::Operation*>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:525:62,
    inlined from ‘BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::getBucketsEnd() [with DerivedT = llvm::SmallDenseMap<mlir::Operation*, llvm::detail::DenseSetEmpty, 8, llvm::DenseMapInfo<mlir::Operation*, void>, llvm::detail::DenseSetPair<mlir::Operation*> >; KeyT = mlir::Operation*; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<mlir::Operation*, void>; BucketT = llvm::detail::DenseSetPair<mlir::Operation*>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:529:40,
    inlined from ‘void llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::initEmpty() [with DerivedT = llvm::SmallDenseMap<mlir::Operation*, llvm::detail::DenseSetEmpty, 8, llvm::DenseMapInfo<mlir::Operation*, void>, llvm::detail::DenseSetPair<mlir::Operation*> >; KeyT = mlir::Operation*; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<mlir::Operation*, void>; BucketT = llvm::detail::DenseSetPair<mlir::Operation*>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:380:55,
    inlined from ‘void llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::moveFromOldBuckets(BucketT*, BucketT*) [with DerivedT = llvm::SmallDenseMap<mlir::Operation*, llvm::detail::DenseSetEmpty, 8, llvm::DenseMapInfo<mlir::Operation*, void>, llvm::detail::DenseSetPair<mlir::Operation*> >; KeyT = mlir::Operation*; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<mlir::Operation*, void>; BucketT = llvm::detail::DenseSetPair<mlir::Operation*>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:396:14,
    inlined from ‘void llvm::SmallDenseMap<KeyT, ValueT, InlineBuckets, KeyInfoT, BucketT>::grow(unsigned int) [with KeyT = mlir::Operation*; ValueT = llvm::detail::DenseSetEmpty; unsigned int InlineBuckets = 8; KeyInfoT = llvm::DenseMapInfo<mlir::Operation*, void>; BucketT = llvm::detail::DenseSetPair<mlir::Operation*>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:1077:31,
    inlined from ‘void llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::grow(unsigned int) [with DerivedT = llvm::SmallDenseMap<mlir::Operation*, llvm::detail::DenseSetEmpty, 8, llvm::DenseMapInfo<mlir::Operation*, void>, llvm::detail::DenseSetPair<mlir::Operation*> >; KeyT = mlir::Operation*; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<mlir::Operation*, void>; BucketT = llvm::detail::DenseSetPair<mlir::Operation*>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:537:40,
    inlined from ‘BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = mlir::Operation*; DerivedT = llvm::SmallDenseMap<mlir::Operation*, llvm::detail::DenseSetEmpty, 8, llvm::DenseMapInfo<mlir::Operation*, void>, llvm::detail::DenseSetPair<mlir::Operation*> >; KeyT = mlir::Operation*; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<mlir::Operation*, void>; BucketT = llvm::detail::DenseSetPair<mlir::Operation*>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:586:17,
    inlined from ‘BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = mlir::Operation* const&; ValueArgs = {llvm::detail::DenseSetEmpty&}; DerivedT = llvm::SmallDenseMap<mlir::Operation*, llvm::detail::DenseSetEmpty, 8, llvm::DenseMapInfo<mlir::Operation*, void>, llvm::detail::DenseSetPair<mlir::Operation*> >; KeyT = mlir::Operation*; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<mlir::Operation*, void>; BucketT = llvm::detail::DenseSetPair<mlir::Operation*>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:37,
    inlined from ‘std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::try_emplace(const KeyT&, Ts&& ...) [with Ts = {llvm::detail::DenseSetEmpty&}; DerivedT = llvm::SmallDenseMap<mlir::Operation*, llvm::detail::DenseSetEmpty, 8, llvm::DenseMapInfo<mlir::Operation*, void>, llvm::detail::DenseSetPair<mlir::Operation*> >; KeyT = mlir::Operation*; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<mlir::Operation*, void>; BucketT = llvm::detail::DenseSetPair<mlir::Operation*>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:258:33,
    inlined from ‘std::pair<llvm::detail::DenseSetImpl<ValueT, MapTy, ValueInfoT>::Iterator, bool> llvm::detail::DenseSetImpl<ValueT, MapTy, ValueInfoT>::insert(const ValueT&) [with ValueT = mlir::Operation*; MapTy = llvm::SmallDenseMap<mlir::Operation*, llvm::detail::DenseSetEmpty, 8, llvm::DenseMapInfo<mlir::Operation*, void>, llvm::detail::DenseSetPair<mlir::Operation*> >; ValueInfoT = llvm::DenseMapInfo<mlir::Operation*, void>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseSet.h:208:30,
    inlined from ‘bool llvm::SetVector<T, Vector, Set>::insert(const value_type&) [with T = mlir::Operation*; Vector = llvm::SmallVector<mlir::Operation*, 8>; Set = llvm::SmallDenseSet<mlir::Operation*, 8, llvm::DenseMapInfo<mlir::Operation*, void> >]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/SetVector.h:142:30,
    inlined from ‘void mlir::iree_compiler::moveScalarAndBindingUniformCode(mlir::vector::WarpExecuteOnLane0Op)’ at /scratch1/akarande/moe-pim-iree/compiler/src/iree/compiler/Codegen/Common/VectorReductionToGPU.cpp:79:23,
    inlined from ‘virtual void mlir::iree_compiler::{anonymous}::VectorReduceToGPUPass::runOnOperation()’ at /scratch1/akarande/moe-pim-iree/compiler/src/iree/compiler/Codegen/Common/VectorReductionToGPU.cpp:186:36:
/scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:1170:18: warning: ‘*(const llvm::SmallDenseMap<mlir::Operation*, llvm::detail::DenseSetEmpty, 8, llvm::DenseMapInfo<mlir::Operation*, void>, llvm::detail::DenseSetPair<mlir::Operation*> >::LargeRep*)((char*)&opsToMove + offsetof(llvm::SmallSetVector<mlir::Operation*, 8>,llvm::SmallSetVector<mlir::Operation*, 8>::<unnamed>.llvm::SetVector<mlir::Operation*, llvm::SmallVector<mlir::Operation*, 8>, llvm::SmallDenseSet<mlir::Operation*, 8, llvm::DenseMapInfo<mlir::Operation*, void> > >::set_.llvm::SmallDenseSet<mlir::Operation*, 8, llvm::DenseMapInfo<mlir::Operation*, void> >::<unnamed>.llvm::detail::DenseSetImpl<mlir::Operation*, llvm::SmallDenseMap<mlir::Operation*, llvm::detail::DenseSetEmpty, 8, llvm::DenseMapInfo<mlir::Operation*, void>, llvm::detail::DenseSetPair<mlir::Operation*> >, llvm::DenseMapInfo<mlir::Operation*, void> >::TheMap.llvm::SmallDenseMap<mlir::Operation*, llvm::detail::DenseSetEmpty, 8, llvm::DenseMapInfo<mlir::Operation*, void>, llvm::detail::DenseSetPair<mlir::Operation*> >::storage.llvm::AlignedCharArrayUnion<llvm::detail::DenseSetPair<mlir::Operation*>[8], llvm::SmallDenseMap<mlir::Operation*, llvm::detail::DenseSetEmpty, 8, llvm::DenseMapInfo<mlir::Operation*, void>, llvm::detail::DenseSetPair<mlir::Operation*> >::LargeRep>::buffer[0])).llvm::SmallDenseMap<mlir::Operation*, llvm::detail::DenseSetEmpty, 8, llvm::DenseMapInfo<mlir::Operation*, void>, llvm::detail::DenseSetPair<mlir::Operation*> >::LargeRep::NumBuckets’ may be used uninitialized [-Wmaybe-uninitialized]
 1170 |     return Small ? InlineBuckets : getLargeRep()->NumBuckets;
      |            ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/scratch1/akarande/moe-pim-iree/compiler/src/iree/compiler/Codegen/Common/VectorReductionToGPU.cpp: In member function ‘virtual void mlir::iree_compiler::{anonymous}::VectorReduceToGPUPass::runOnOperation()’:
/scratch1/akarande/moe-pim-iree/compiler/src/iree/compiler/Codegen/Common/VectorReductionToGPU.cpp:63:40: note: ‘opsToMove’ declared here
   63 |   llvm::SmallSetVector<Operation *, 8> opsToMove;
      |                                        ^~~~~~~~~
In member function ‘const BucketT* llvm::SmallDenseMap<KeyT, ValueT, InlineBuckets, KeyInfoT, BucketT>::getBuckets() const [with KeyT = mlir::Operation*; ValueT = llvm::detail::DenseSetEmpty; unsigned int InlineBuckets = 8; KeyInfoT = llvm::DenseMapInfo<mlir::Operation*, void>; BucketT = llvm::detail::DenseSetPair<mlir::Operation*>]’,
    inlined from ‘const BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::getBuckets() const [with DerivedT = llvm::SmallDenseMap<mlir::Operation*, llvm::detail::DenseSetEmpty, 8, llvm::DenseMapInfo<mlir::Operation*, void>, llvm::detail::DenseSetPair<mlir::Operation*> >; KeyT = mlir::Operation*; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<mlir::Operation*, void>; BucketT = llvm::detail::DenseSetPair<mlir::Operation*>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:517:59,
    inlined from ‘bool llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::LookupBucketFor(const LookupKeyT&, const BucketT*&) const [with LookupKeyT = mlir::Operation*; DerivedT = llvm::SmallDenseMap<mlir::Operation*, llvm::detail::DenseSetEmpty, 8, llvm::DenseMapInfo<mlir::Operation*, void>, llvm::detail::DenseSetPair<mlir::Operation*> >; KeyT = mlir::Operation*; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<mlir::Operation*, void>; BucketT = llvm::detail::DenseSetPair<mlir::Operation*>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:610:43,
    inlined from ‘bool llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::LookupBucketFor(const LookupKeyT&, BucketT*&) [with LookupKeyT = mlir::Operation*; DerivedT = llvm::SmallDenseMap<mlir::Operation*, llvm::detail::DenseSetEmpty, 8, llvm::DenseMapInfo<mlir::Operation*, void>, llvm::detail::DenseSetPair<mlir::Operation*> >; KeyT = mlir::Operation*; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<mlir::Operation*, void>; BucketT = llvm::detail::DenseSetPair<mlir::Operation*>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:662:24,
    inlined from ‘void llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::moveFromOldBuckets(BucketT*, BucketT*) [with DerivedT = llvm::SmallDenseMap<mlir::Operation*, llvm::detail::DenseSetEmpty, 8, llvm::DenseMapInfo<mlir::Operation*, void>, llvm::detail::DenseSetPair<mlir::Operation*> >; KeyT = mlir::Operation*; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<mlir::Operation*, void>; BucketT = llvm::detail::DenseSetPair<mlir::Operation*>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:406:40,
    inlined from ‘void llvm::SmallDenseMap<KeyT, ValueT, InlineBuckets, KeyInfoT, BucketT>::grow(unsigned int) [with KeyT = mlir::Operation*; ValueT = llvm::detail::DenseSetEmpty; unsigned int InlineBuckets = 8; KeyInfoT = llvm::DenseMapInfo<mlir::Operation*, void>; BucketT = llvm::detail::DenseSetPair<mlir::Operation*>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:1077:31,
    inlined from ‘void llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::grow(unsigned int) [with DerivedT = llvm::SmallDenseMap<mlir::Operation*, llvm::detail::DenseSetEmpty, 8, llvm::DenseMapInfo<mlir::Operation*, void>, llvm::detail::DenseSetPair<mlir::Operation*> >; KeyT = mlir::Operation*; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<mlir::Operation*, void>; BucketT = llvm::detail::DenseSetPair<mlir::Operation*>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:537:40,
    inlined from ‘BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = mlir::Operation*; DerivedT = llvm::SmallDenseMap<mlir::Operation*, llvm::detail::DenseSetEmpty, 8, llvm::DenseMapInfo<mlir::Operation*, void>, llvm::detail::DenseSetPair<mlir::Operation*> >; KeyT = mlir::Operation*; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<mlir::Operation*, void>; BucketT = llvm::detail::DenseSetPair<mlir::Operation*>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:586:17,
    inlined from ‘BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = mlir::Operation* const&; ValueArgs = {llvm::detail::DenseSetEmpty&}; DerivedT = llvm::SmallDenseMap<mlir::Operation*, llvm::detail::DenseSetEmpty, 8, llvm::DenseMapInfo<mlir::Operation*, void>, llvm::detail::DenseSetPair<mlir::Operation*> >; KeyT = mlir::Operation*; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<mlir::Operation*, void>; BucketT = llvm::detail::DenseSetPair<mlir::Operation*>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:37,
    inlined from ‘std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::try_emplace(const KeyT&, Ts&& ...) [with Ts = {llvm::detail::DenseSetEmpty&}; DerivedT = llvm::SmallDenseMap<mlir::Operation*, llvm::detail::DenseSetEmpty, 8, llvm::DenseMapInfo<mlir::Operation*, void>, llvm::detail::DenseSetPair<mlir::Operation*> >; KeyT = mlir::Operation*; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<mlir::Operation*, void>; BucketT = llvm::detail::DenseSetPair<mlir::Operation*>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:258:33,
    inlined from ‘std::pair<llvm::detail::DenseSetImpl<ValueT, MapTy, ValueInfoT>::Iterator, bool> llvm::detail::DenseSetImpl<ValueT, MapTy, ValueInfoT>::insert(const ValueT&) [with ValueT = mlir::Operation*; MapTy = llvm::SmallDenseMap<mlir::Operation*, llvm::detail::DenseSetEmpty, 8, llvm::DenseMapInfo<mlir::Operation*, void>, llvm::detail::DenseSetPair<mlir::Operation*> >; ValueInfoT = llvm::DenseMapInfo<mlir::Operation*, void>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseSet.h:208:30,
    inlined from ‘bool llvm::SetVector<T, Vector, Set>::insert(const value_type&) [with T = mlir::Operation*; Vector = llvm::SmallVector<mlir::Operation*, 8>; Set = llvm::SmallDenseSet<mlir::Operation*, 8, llvm::DenseMapInfo<mlir::Operation*, void> >]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/SetVector.h:142:30,
    inlined from ‘void mlir::iree_compiler::moveScalarAndBindingUniformCode(mlir::vector::WarpExecuteOnLane0Op)’ at /scratch1/akarande/moe-pim-iree/compiler/src/iree/compiler/Codegen/Common/VectorReductionToGPU.cpp:79:23,
    inlined from ‘virtual void mlir::iree_compiler::{anonymous}::VectorReduceToGPUPass::runOnOperation()’ at /scratch1/akarande/moe-pim-iree/compiler/src/iree/compiler/Codegen/Common/VectorReductionToGPU.cpp:186:36:
/scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:1161:18: warning: ‘*(const llvm::SmallDenseMap<mlir::Operation*, llvm::detail::DenseSetEmpty, 8, llvm::DenseMapInfo<mlir::Operation*, void>, llvm::detail::DenseSetPair<mlir::Operation*> >::LargeRep*)((char*)&opsToMove + offsetof(llvm::SmallSetVector<mlir::Operation*, 8>,llvm::SmallSetVector<mlir::Operation*, 8>::<unnamed>.llvm::SetVector<mlir::Operation*, llvm::SmallVector<mlir::Operation*, 8>, llvm::SmallDenseSet<mlir::Operation*, 8, llvm::DenseMapInfo<mlir::Operation*, void> > >::set_.llvm::SmallDenseSet<mlir::Operation*, 8, llvm::DenseMapInfo<mlir::Operation*, void> >::<unnamed>.llvm::detail::DenseSetImpl<mlir::Operation*, llvm::SmallDenseMap<mlir::Operation*, llvm::detail::DenseSetEmpty, 8, llvm::DenseMapInfo<mlir::Operation*, void>, llvm::detail::DenseSetPair<mlir::Operation*> >, llvm::DenseMapInfo<mlir::Operation*, void> >::TheMap.llvm::SmallDenseMap<mlir::Operation*, llvm::detail::DenseSetEmpty, 8, llvm::DenseMapInfo<mlir::Operation*, void>, llvm::detail::DenseSetPair<mlir::Operation*> >::storage.llvm::AlignedCharArrayUnion<llvm::detail::DenseSetPair<mlir::Operation*>[8], llvm::SmallDenseMap<mlir::Operation*, llvm::detail::DenseSetEmpty, 8, llvm::DenseMapInfo<mlir::Operation*, void>, llvm::detail::DenseSetPair<mlir::Operation*> >::LargeRep>::buffer[0])).llvm::SmallDenseMap<mlir::Operation*, llvm::detail::DenseSetEmpty, 8, llvm::DenseMapInfo<mlir::Operation*, void>, llvm::detail::DenseSetPair<mlir::Operation*> >::LargeRep::Buckets’ may be used uninitialized [-Wmaybe-uninitialized]
 1161 |     return Small ? getInlineBuckets() : getLargeRep()->Buckets;
      |            ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/scratch1/akarande/moe-pim-iree/compiler/src/iree/compiler/Codegen/Common/VectorReductionToGPU.cpp: In member function ‘virtual void mlir::iree_compiler::{anonymous}::VectorReduceToGPUPass::runOnOperation()’:
/scratch1/akarande/moe-pim-iree/compiler/src/iree/compiler/Codegen/Common/VectorReductionToGPU.cpp:63:40: note: ‘opsToMove’ declared here
   63 |   llvm::SmallSetVector<Operation *, 8> opsToMove;
      |                                        ^~~~~~~~~
In member function ‘unsigned int llvm::SmallDenseMap<KeyT, ValueT, InlineBuckets, KeyInfoT, BucketT>::getNumBuckets() const [with KeyT = mlir::Operation*; ValueT = llvm::detail::DenseSetEmpty; unsigned int InlineBuckets = 8; KeyInfoT = llvm::DenseMapInfo<mlir::Operation*, void>; BucketT = llvm::detail::DenseSetPair<mlir::Operation*>]’,
    inlined from ‘unsigned int llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::getNumBuckets() const [with DerivedT = llvm::SmallDenseMap<mlir::Operation*, llvm::detail::DenseSetEmpty, 8, llvm::DenseMapInfo<mlir::Operation*, void>, llvm::detail::DenseSetPair<mlir::Operation*> >; KeyT = mlir::Operation*; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<mlir::Operation*, void>; BucketT = llvm::detail::DenseSetPair<mlir::Operation*>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:525:62,
    inlined from ‘bool llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::LookupBucketFor(const LookupKeyT&, const BucketT*&) const [with LookupKeyT = mlir::Operation*; DerivedT = llvm::SmallDenseMap<mlir::Operation*, llvm::detail::DenseSetEmpty, 8, llvm::DenseMapInfo<mlir::Operation*, void>, llvm::detail::DenseSetPair<mlir::Operation*> >; KeyT = mlir::Operation*; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<mlir::Operation*, void>; BucketT = llvm::detail::DenseSetPair<mlir::Operation*>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:611:46,
    inlined from ‘bool llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::LookupBucketFor(const LookupKeyT&, BucketT*&) [with LookupKeyT = mlir::Operation*; DerivedT = llvm::SmallDenseMap<mlir::Operation*, llvm::detail::DenseSetEmpty, 8, llvm::DenseMapInfo<mlir::Operation*, void>, llvm::detail::DenseSetPair<mlir::Operation*> >; KeyT = mlir::Operation*; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<mlir::Operation*, void>; BucketT = llvm::detail::DenseSetPair<mlir::Operation*>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:662:24,
    inlined from ‘void llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::moveFromOldBuckets(BucketT*, BucketT*) [with DerivedT = llvm::SmallDenseMap<mlir::Operation*, llvm::detail::DenseSetEmpty, 8, llvm::DenseMapInfo<mlir::Operation*, void>, llvm::detail::DenseSetPair<mlir::Operation*> >; KeyT = mlir::Operation*; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<mlir::Operation*, void>; BucketT = llvm::detail::DenseSetPair<mlir::Operation*>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:406:40,
    inlined from ‘void llvm::SmallDenseMap<KeyT, ValueT, InlineBuckets, KeyInfoT, BucketT>::grow(unsigned int) [with KeyT = mlir::Operation*; ValueT = llvm::detail::DenseSetEmpty; unsigned int InlineBuckets = 8; KeyInfoT = llvm::DenseMapInfo<mlir::Operation*, void>; BucketT = llvm::detail::DenseSetPair<mlir::Operation*>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:1077:31,
    inlined from ‘void llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::grow(unsigned int) [with DerivedT = llvm::SmallDenseMap<mlir::Operation*, llvm::detail::DenseSetEmpty, 8, llvm::DenseMapInfo<mlir::Operation*, void>, llvm::detail::DenseSetPair<mlir::Operation*> >; KeyT = mlir::Operation*; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<mlir::Operation*, void>; BucketT = llvm::detail::DenseSetPair<mlir::Operation*>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:537:40,
    inlined from ‘BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = mlir::Operation*; DerivedT = llvm::SmallDenseMap<mlir::Operation*, llvm::detail::DenseSetEmpty, 8, llvm::DenseMapInfo<mlir::Operation*, void>, llvm::detail::DenseSetPair<mlir::Operation*> >; KeyT = mlir::Operation*; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<mlir::Operation*, void>; BucketT = llvm::detail::DenseSetPair<mlir::Operation*>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:586:17,
    inlined from ‘BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = mlir::Operation* const&; ValueArgs = {llvm::detail::DenseSetEmpty&}; DerivedT = llvm::SmallDenseMap<mlir::Operation*, llvm::detail::DenseSetEmpty, 8, llvm::DenseMapInfo<mlir::Operation*, void>, llvm::detail::DenseSetPair<mlir::Operation*> >; KeyT = mlir::Operation*; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<mlir::Operation*, void>; BucketT = llvm::detail::DenseSetPair<mlir::Operation*>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:37,
    inlined from ‘std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::try_emplace(const KeyT&, Ts&& ...) [with Ts = {llvm::detail::DenseSetEmpty&}; DerivedT = llvm::SmallDenseMap<mlir::Operation*, llvm::detail::DenseSetEmpty, 8, llvm::DenseMapInfo<mlir::Operation*, void>, llvm::detail::DenseSetPair<mlir::Operation*> >; KeyT = mlir::Operation*; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<mlir::Operation*, void>; BucketT = llvm::detail::DenseSetPair<mlir::Operation*>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:258:33,
    inlined from ‘std::pair<llvm::detail::DenseSetImpl<ValueT, MapTy, ValueInfoT>::Iterator, bool> llvm::detail::DenseSetImpl<ValueT, MapTy, ValueInfoT>::insert(const ValueT&) [with ValueT = mlir::Operation*; MapTy = llvm::SmallDenseMap<mlir::Operation*, llvm::detail::DenseSetEmpty, 8, llvm::DenseMapInfo<mlir::Operation*, void>, llvm::detail::DenseSetPair<mlir::Operation*> >; ValueInfoT = llvm::DenseMapInfo<mlir::Operation*, void>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseSet.h:208:30,
    inlined from ‘bool llvm::SetVector<T, Vector, Set>::insert(const value_type&) [with T = mlir::Operation*; Vector = llvm::SmallVector<mlir::Operation*, 8>; Set = llvm::SmallDenseSet<mlir::Operation*, 8, llvm::DenseMapInfo<mlir::Operation*, void> >]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/SetVector.h:142:30,
    inlined from ‘void mlir::iree_compiler::moveScalarAndBindingUniformCode(mlir::vector::WarpExecuteOnLane0Op)’ at /scratch1/akarande/moe-pim-iree/compiler/src/iree/compiler/Codegen/Common/VectorReductionToGPU.cpp:79:23,
    inlined from ‘virtual void mlir::iree_compiler::{anonymous}::VectorReduceToGPUPass::runOnOperation()’ at /scratch1/akarande/moe-pim-iree/compiler/src/iree/compiler/Codegen/Common/VectorReductionToGPU.cpp:186:36:
/scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:1170:18: warning: ‘*(const llvm::SmallDenseMap<mlir::Operation*, llvm::detail::DenseSetEmpty, 8, llvm::DenseMapInfo<mlir::Operation*, void>, llvm::detail::DenseSetPair<mlir::Operation*> >::LargeRep*)((char*)&opsToMove + offsetof(llvm::SmallSetVector<mlir::Operation*, 8>,llvm::SmallSetVector<mlir::Operation*, 8>::<unnamed>.llvm::SetVector<mlir::Operation*, llvm::SmallVector<mlir::Operation*, 8>, llvm::SmallDenseSet<mlir::Operation*, 8, llvm::DenseMapInfo<mlir::Operation*, void> > >::set_.llvm::SmallDenseSet<mlir::Operation*, 8, llvm::DenseMapInfo<mlir::Operation*, void> >::<unnamed>.llvm::detail::DenseSetImpl<mlir::Operation*, llvm::SmallDenseMap<mlir::Operation*, llvm::detail::DenseSetEmpty, 8, llvm::DenseMapInfo<mlir::Operation*, void>, llvm::detail::DenseSetPair<mlir::Operation*> >, llvm::DenseMapInfo<mlir::Operation*, void> >::TheMap.llvm::SmallDenseMap<mlir::Operation*, llvm::detail::DenseSetEmpty, 8, llvm::DenseMapInfo<mlir::Operation*, void>, llvm::detail::DenseSetPair<mlir::Operation*> >::storage.llvm::AlignedCharArrayUnion<llvm::detail::DenseSetPair<mlir::Operation*>[8], llvm::SmallDenseMap<mlir::Operation*, llvm::detail::DenseSetEmpty, 8, llvm::DenseMapInfo<mlir::Operation*, void>, llvm::detail::DenseSetPair<mlir::Operation*> >::LargeRep>::buffer[0])).llvm::SmallDenseMap<mlir::Operation*, llvm::detail::DenseSetEmpty, 8, llvm::DenseMapInfo<mlir::Operation*, void>, llvm::detail::DenseSetPair<mlir::Operation*> >::LargeRep::NumBuckets’ may be used uninitialized [-Wmaybe-uninitialized]
 1170 |     return Small ? InlineBuckets : getLargeRep()->NumBuckets;
      |            ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/scratch1/akarande/moe-pim-iree/compiler/src/iree/compiler/Codegen/Common/VectorReductionToGPU.cpp: In member function ‘virtual void mlir::iree_compiler::{anonymous}::VectorReduceToGPUPass::runOnOperation()’:
/scratch1/akarande/moe-pim-iree/compiler/src/iree/compiler/Codegen/Common/VectorReductionToGPU.cpp:63:40: note: ‘opsToMove’ declared here
   63 |   llvm::SmallSetVector<Operation *, 8> opsToMove;
      |                                        ^~~~~~~~~
[646/1615] Building CXX object compiler/src/iree/..._Codegen_LLVMCPU_LLVMCPU.objects.dir/Passes.cpp.
In file included from /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/../mlir/include/mlir/IR/AttrTypeSubElements.h:20,
                 from /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/../mlir/include/mlir/IR/StorageUniquerSupport.h:16,
                 from /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/../mlir/include/mlir/IR/AttributeSupport.h:17,
                 from /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/../mlir/include/mlir/IR/Attributes.h:12,
                 from /scratch1/akarande/moe-pim-iree/llvm-external-projects/iree-dialects/include/iree-dialects/Dialect/LinalgExt/Utils/Utils.h:10,
                 from /scratch1/akarande/moe-pim-iree/compiler/src/iree/compiler/Codegen/Passes.h:12,
                 from /scratch1/akarande/moe-pim-iree/compiler/src/iree/compiler/Codegen/LLVMCPU/Passes.cpp:7:
In member function ‘unsigned int llvm::SmallDenseMap<KeyT, ValueT, InlineBuckets, KeyInfoT, BucketT>::getNumBuckets() const [with KeyT = unsigned int; ValueT = llvm::detail::DenseSetEmpty; unsigned int InlineBuckets = 4; KeyInfoT = llvm::DenseMapInfo<unsigned int>; BucketT = llvm::detail::DenseSetPair<unsigned int>]’,
    inlined from ‘unsigned int llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::getNumBuckets() const [with DerivedT = llvm::SmallDenseMap<unsigned int, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<unsigned int>, llvm::detail::DenseSetPair<unsigned int> >; KeyT = unsigned int; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<unsigned int>; BucketT = llvm::detail::DenseSetPair<unsigned int>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:525:62,
    inlined from ‘BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::getBucketsEnd() [with DerivedT = llvm::SmallDenseMap<unsigned int, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<unsigned int>, llvm::detail::DenseSetPair<unsigned int> >; KeyT = unsigned int; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<unsigned int>; BucketT = llvm::detail::DenseSetPair<unsigned int>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:529:40,
    inlined from ‘void llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::initEmpty() [with DerivedT = llvm::SmallDenseMap<unsigned int, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<unsigned int>, llvm::detail::DenseSetPair<unsigned int> >; KeyT = unsigned int; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<unsigned int>; BucketT = llvm::detail::DenseSetPair<unsigned int>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:380:55,
    inlined from ‘void llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::moveFromOldBuckets(BucketT*, BucketT*) [with DerivedT = llvm::SmallDenseMap<unsigned int, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<unsigned int>, llvm::detail::DenseSetPair<unsigned int> >; KeyT = unsigned int; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<unsigned int>; BucketT = llvm::detail::DenseSetPair<unsigned int>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:396:14,
    inlined from ‘void llvm::SmallDenseMap<KeyT, ValueT, InlineBuckets, KeyInfoT, BucketT>::grow(unsigned int) [with KeyT = unsigned int; ValueT = llvm::detail::DenseSetEmpty; unsigned int InlineBuckets = 4; KeyInfoT = llvm::DenseMapInfo<unsigned int>; BucketT = llvm::detail::DenseSetPair<unsigned int>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:1077:31,
    inlined from ‘void llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::grow(unsigned int) [with DerivedT = llvm::SmallDenseMap<unsigned int, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<unsigned int>, llvm::detail::DenseSetPair<unsigned int> >; KeyT = unsigned int; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<unsigned int>; BucketT = llvm::detail::DenseSetPair<unsigned int>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:537:40,
    inlined from ‘BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = unsigned int; DerivedT = llvm::SmallDenseMap<unsigned int, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<unsigned int>, llvm::detail::DenseSetPair<unsigned int> >; KeyT = unsigned int; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<unsigned int>; BucketT = llvm::detail::DenseSetPair<unsigned int>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:586:17,
    inlined from ‘BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = unsigned int; ValueArgs = {llvm::detail::DenseSetEmpty&}; DerivedT = llvm::SmallDenseMap<unsigned int, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<unsigned int>, llvm::detail::DenseSetPair<unsigned int> >; KeyT = unsigned int; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<unsigned int>; BucketT = llvm::detail::DenseSetPair<unsigned int>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:37,
    inlined from ‘std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::try_emplace(KeyT&&, Ts&& ...) [with Ts = {llvm::detail::DenseSetEmpty&}; DerivedT = llvm::SmallDenseMap<unsigned int, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<unsigned int>, llvm::detail::DenseSetPair<unsigned int> >; KeyT = unsigned int; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<unsigned int>; BucketT = llvm::detail::DenseSetPair<unsigned int>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:234:25,
    inlined from ‘std::pair<llvm::detail::DenseSetImpl<ValueT, MapTy, ValueInfoT>::Iterator, bool> llvm::detail::DenseSetImpl<ValueT, MapTy, ValueInfoT>::insert(ValueT&&) [with ValueT = unsigned int; MapTy = llvm::SmallDenseMap<unsigned int, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<unsigned int>, llvm::detail::DenseSetPair<unsigned int> >; ValueInfoT = llvm::DenseMapInfo<unsigned int>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseSet.h:213:30,
    inlined from ‘mlir::LogicalResult mlir::iree_compiler::verifyDoubleTilingExpertPassPipelineConfig(mlir::Operation*, IREE::Codegen::LoweringConfigAttr, IREE::Codegen::TranslationInfoAttr, llvm::ArrayRef<long int>)’ at /scratch1/akarande/moe-pim-iree/compiler/src/iree/compiler/Codegen/LLVMCPU/Passes.cpp:205:25:
/scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:1170:18: warning: ‘*(const llvm::SmallDenseMap<unsigned int, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<unsigned int, void>, llvm::detail::DenseSetPair<unsigned int> >::LargeRep*)((char*)&pLoopsSet + offsetof(llvm::SmallDenseSet<unsigned int, 4, llvm::DenseMapInfo<unsigned int, void> >,llvm::SmallDenseSet<unsigned int, 4, llvm::DenseMapInfo<unsigned int, void> >::<unnamed>.llvm::detail::DenseSetImpl<unsigned int, llvm::SmallDenseMap<unsigned int, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<unsigned int, void>, llvm::detail::DenseSetPair<unsigned int> >, llvm::DenseMapInfo<unsigned int, void> >::TheMap.llvm::SmallDenseMap<unsigned int, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<unsigned int, void>, llvm::detail::DenseSetPair<unsigned int> >::storage.llvm::AlignedCharArrayUnion<llvm::detail::DenseSetPair<unsigned int>[4], llvm::SmallDenseMap<unsigned int, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<unsigned int, void>, llvm::detail::DenseSetPair<unsigned int> >::LargeRep>::buffer[0])).llvm::SmallDenseMap<unsigned int, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<unsigned int>, llvm::detail::DenseSetPair<unsigned int> >::LargeRep::NumBuckets’ may be used uninitialized [-Wmaybe-uninitialized]
 1170 |     return Small ? InlineBuckets : getLargeRep()->NumBuckets;
      |            ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/scratch1/akarande/moe-pim-iree/compiler/src/iree/compiler/Codegen/LLVMCPU/Passes.cpp: In function ‘mlir::LogicalResult mlir::iree_compiler::verifyDoubleTilingExpertPassPipelineConfig(mlir::Operation*, IREE::Codegen::LoweringConfigAttr, IREE::Codegen::TranslationInfoAttr, llvm::ArrayRef<long int>)’:
/scratch1/akarande/moe-pim-iree/compiler/src/iree/compiler/Codegen/LLVMCPU/Passes.cpp:201:35: note: ‘pLoopsSet’ declared here
  201 |     llvm::SmallDenseSet<unsigned> pLoopsSet;
      |                                   ^~~~~~~~~
In member function ‘const BucketT* llvm::SmallDenseMap<KeyT, ValueT, InlineBuckets, KeyInfoT, BucketT>::getBuckets() const [with KeyT = long int; ValueT = llvm::detail::DenseSetEmpty; unsigned int InlineBuckets = 4; KeyInfoT = llvm::DenseMapInfo<long int>; BucketT = llvm::detail::DenseSetPair<long int>]’,
    inlined from ‘BucketT* llvm::SmallDenseMap<KeyT, ValueT, InlineBuckets, KeyInfoT, BucketT>::getBuckets() [with KeyT = long int; ValueT = llvm::detail::DenseSetEmpty; unsigned int InlineBuckets = 4; KeyInfoT = llvm::DenseMapInfo<long int>; BucketT = llvm::detail::DenseSetPair<long int>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:1166:58,
    inlined from ‘BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::getBuckets() [with DerivedT = llvm::SmallDenseMap<long int, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<long int>, llvm::detail::DenseSetPair<long int> >; KeyT = long int; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<long int>; BucketT = llvm::detail::DenseSetPair<long int>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:521:53,
    inlined from ‘void llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::initEmpty() [with DerivedT = llvm::SmallDenseMap<long int, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<long int>, llvm::detail::DenseSetPair<long int> >; KeyT = long int; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<long int>; BucketT = llvm::detail::DenseSetPair<long int>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:380:33,
    inlined from ‘void llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::moveFromOldBuckets(BucketT*, BucketT*) [with DerivedT = llvm::SmallDenseMap<long int, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<long int>, llvm::detail::DenseSetPair<long int> >; KeyT = long int; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<long int>; BucketT = llvm::detail::DenseSetPair<long int>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:396:14,
    inlined from ‘void llvm::SmallDenseMap<KeyT, ValueT, InlineBuckets, KeyInfoT, BucketT>::grow(unsigned int) [with KeyT = long int; ValueT = llvm::detail::DenseSetEmpty; unsigned int InlineBuckets = 4; KeyInfoT = llvm::DenseMapInfo<long int>; BucketT = llvm::detail::DenseSetPair<long int>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:1077:31,
    inlined from ‘void llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::grow(unsigned int) [with DerivedT = llvm::SmallDenseMap<long int, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<long int>, llvm::detail::DenseSetPair<long int> >; KeyT = long int; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<long int>; BucketT = llvm::detail::DenseSetPair<long int>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:537:40,
    inlined from ‘BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = long int; DerivedT = llvm::SmallDenseMap<long int, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<long int>, llvm::detail::DenseSetPair<long int> >; KeyT = long int; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<long int>; BucketT = llvm::detail::DenseSetPair<long int>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:586:17,
    inlined from ‘BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = const long int&; ValueArgs = {llvm::detail::DenseSetEmpty&}; DerivedT = llvm::SmallDenseMap<long int, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<long int>, llvm::detail::DenseSetPair<long int> >; KeyT = long int; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<long int>; BucketT = llvm::detail::DenseSetPair<long int>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:37,
    inlined from ‘std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::try_emplace(const KeyT&, Ts&& ...) [with Ts = {llvm::detail::DenseSetEmpty&}; DerivedT = llvm::SmallDenseMap<long int, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<long int>, llvm::detail::DenseSetPair<long int> >; KeyT = long int; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<long int>; BucketT = llvm::detail::DenseSetPair<long int>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:258:33,
    inlined from ‘std::pair<llvm::detail::DenseSetImpl<ValueT, MapTy, ValueInfoT>::Iterator, bool> llvm::detail::DenseSetImpl<ValueT, MapTy, ValueInfoT>::insert(const ValueT&) [with ValueT = long int; MapTy = llvm::SmallDenseMap<long int, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<long int>, llvm::detail::DenseSetPair<long int> >; ValueInfoT = llvm::DenseMapInfo<long int>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseSet.h:208:30,
    inlined from ‘void llvm::detail::DenseSetImpl<ValueT, MapTy, ValueInfoT>::insert(InputIt, InputIt) [with InputIt = const long int*; ValueT = long int; MapTy = llvm::SmallDenseMap<long int, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<long int>, llvm::detail::DenseSetPair<long int> >; ValueInfoT = llvm::DenseMapInfo<long int>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseSet.h:232:13,
    inlined from ‘bool mlir::iree_compiler::isValidInterchange(llvm::ArrayRef<long int>, int)’ at /scratch1/akarande/moe-pim-iree/compiler/src/iree/compiler/Codegen/LLVMCPU/Passes.cpp:163:11,
    inlined from ‘mlir::LogicalResult mlir::iree_compiler::verifyDoubleTilingExpertPassPipelineConfig(mlir::Operation*, IREE::Codegen::LoweringConfigAttr, IREE::Codegen::TranslationInfoAttr, llvm::ArrayRef<long int>)’ at /scratch1/akarande/moe-pim-iree/compiler/src/iree/compiler/Codegen/LLVMCPU/Passes.cpp:239:30:
/scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:1161:18: warning: ‘*(const llvm::SmallDenseMap<long int, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<long int, void>, llvm::detail::DenseSetPair<long int> >::LargeRep*)((char*)&s + offsetof(llvm::SmallDenseSet<long int, 4, llvm::DenseMapInfo<long int, void> >,llvm::SmallDenseSet<long int, 4, llvm::DenseMapInfo<long int, void> >::<unnamed>.llvm::detail::DenseSetImpl<long int, llvm::SmallDenseMap<long int, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<long int, void>, llvm::detail::DenseSetPair<long int> >, llvm::DenseMapInfo<long int, void> >::TheMap.llvm::SmallDenseMap<long int, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<long int, void>, llvm::detail::DenseSetPair<long int> >::storage.llvm::AlignedCharArrayUnion<llvm::detail::DenseSetPair<long int>[4], llvm::SmallDenseMap<long int, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<long int, void>, llvm::detail::DenseSetPair<long int> >::LargeRep>::buffer[0])).llvm::SmallDenseMap<long int, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<long int>, llvm::detail::DenseSetPair<long int> >::LargeRep::Buckets’ may be used uninitialized [-Wmaybe-uninitialized]
 1161 |     return Small ? getInlineBuckets() : getLargeRep()->Buckets;
      |            ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/scratch1/akarande/moe-pim-iree/compiler/src/iree/compiler/Codegen/LLVMCPU/Passes.cpp: In function ‘mlir::LogicalResult mlir::iree_compiler::verifyDoubleTilingExpertPassPipelineConfig(mlir::Operation*, IREE::Codegen::LoweringConfigAttr, IREE::Codegen::TranslationInfoAttr, llvm::ArrayRef<long int>)’:
/scratch1/akarande/moe-pim-iree/compiler/src/iree/compiler/Codegen/LLVMCPU/Passes.cpp:162:32: note: ‘s’ declared here
  162 |   llvm::SmallDenseSet<int64_t> s;
      |                                ^
In member function ‘unsigned int llvm::SmallDenseMap<KeyT, ValueT, InlineBuckets, KeyInfoT, BucketT>::getNumBuckets() const [with KeyT = long int; ValueT = llvm::detail::DenseSetEmpty; unsigned int InlineBuckets = 4; KeyInfoT = llvm::DenseMapInfo<long int>; BucketT = llvm::detail::DenseSetPair<long int>]’,
    inlined from ‘unsigned int llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::getNumBuckets() const [with DerivedT = llvm::SmallDenseMap<long int, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<long int>, llvm::detail::DenseSetPair<long int> >; KeyT = long int; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<long int>; BucketT = llvm::detail::DenseSetPair<long int>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:525:62,
    inlined from ‘BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::getBucketsEnd() [with DerivedT = llvm::SmallDenseMap<long int, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<long int>, llvm::detail::DenseSetPair<long int> >; KeyT = long int; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<long int>; BucketT = llvm::detail::DenseSetPair<long int>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:529:40,
    inlined from ‘void llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::initEmpty() [with DerivedT = llvm::SmallDenseMap<long int, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<long int>, llvm::detail::DenseSetPair<long int> >; KeyT = long int; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<long int>; BucketT = llvm::detail::DenseSetPair<long int>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:380:55,
    inlined from ‘void llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::moveFromOldBuckets(BucketT*, BucketT*) [with DerivedT = llvm::SmallDenseMap<long int, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<long int>, llvm::detail::DenseSetPair<long int> >; KeyT = long int; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<long int>; BucketT = llvm::detail::DenseSetPair<long int>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:396:14,
    inlined from ‘void llvm::SmallDenseMap<KeyT, ValueT, InlineBuckets, KeyInfoT, BucketT>::grow(unsigned int) [with KeyT = long int; ValueT = llvm::detail::DenseSetEmpty; unsigned int InlineBuckets = 4; KeyInfoT = llvm::DenseMapInfo<long int>; BucketT = llvm::detail::DenseSetPair<long int>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:1077:31,
    inlined from ‘void llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::grow(unsigned int) [with DerivedT = llvm::SmallDenseMap<long int, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<long int>, llvm::detail::DenseSetPair<long int> >; KeyT = long int; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<long int>; BucketT = llvm::detail::DenseSetPair<long int>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:537:40,
    inlined from ‘BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = long int; DerivedT = llvm::SmallDenseMap<long int, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<long int>, llvm::detail::DenseSetPair<long int> >; KeyT = long int; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<long int>; BucketT = llvm::detail::DenseSetPair<long int>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:586:17,
    inlined from ‘BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = const long int&; ValueArgs = {llvm::detail::DenseSetEmpty&}; DerivedT = llvm::SmallDenseMap<long int, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<long int>, llvm::detail::DenseSetPair<long int> >; KeyT = long int; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<long int>; BucketT = llvm::detail::DenseSetPair<long int>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:37,
    inlined from ‘std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::try_emplace(const KeyT&, Ts&& ...) [with Ts = {llvm::detail::DenseSetEmpty&}; DerivedT = llvm::SmallDenseMap<long int, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<long int>, llvm::detail::DenseSetPair<long int> >; KeyT = long int; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<long int>; BucketT = llvm::detail::DenseSetPair<long int>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:258:33,
    inlined from ‘std::pair<llvm::detail::DenseSetImpl<ValueT, MapTy, ValueInfoT>::Iterator, bool> llvm::detail::DenseSetImpl<ValueT, MapTy, ValueInfoT>::insert(const ValueT&) [with ValueT = long int; MapTy = llvm::SmallDenseMap<long int, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<long int>, llvm::detail::DenseSetPair<long int> >; ValueInfoT = llvm::DenseMapInfo<long int>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseSet.h:208:30,
    inlined from ‘void llvm::detail::DenseSetImpl<ValueT, MapTy, ValueInfoT>::insert(InputIt, InputIt) [with InputIt = const long int*; ValueT = long int; MapTy = llvm::SmallDenseMap<long int, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<long int>, llvm::detail::DenseSetPair<long int> >; ValueInfoT = llvm::DenseMapInfo<long int>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseSet.h:232:13,
    inlined from ‘bool mlir::iree_compiler::isValidInterchange(llvm::ArrayRef<long int>, int)’ at /scratch1/akarande/moe-pim-iree/compiler/src/iree/compiler/Codegen/LLVMCPU/Passes.cpp:163:11,
    inlined from ‘mlir::LogicalResult mlir::iree_compiler::verifyDoubleTilingExpertPassPipelineConfig(mlir::Operation*, IREE::Codegen::LoweringConfigAttr, IREE::Codegen::TranslationInfoAttr, llvm::ArrayRef<long int>)’ at /scratch1/akarande/moe-pim-iree/compiler/src/iree/compiler/Codegen/LLVMCPU/Passes.cpp:239:30:
/scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:1170:18: warning: ‘*(const llvm::SmallDenseMap<long int, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<long int, void>, llvm::detail::DenseSetPair<long int> >::LargeRep*)((char*)&s + offsetof(llvm::SmallDenseSet<long int, 4, llvm::DenseMapInfo<long int, void> >,llvm::SmallDenseSet<long int, 4, llvm::DenseMapInfo<long int, void> >::<unnamed>.llvm::detail::DenseSetImpl<long int, llvm::SmallDenseMap<long int, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<long int, void>, llvm::detail::DenseSetPair<long int> >, llvm::DenseMapInfo<long int, void> >::TheMap.llvm::SmallDenseMap<long int, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<long int, void>, llvm::detail::DenseSetPair<long int> >::storage.llvm::AlignedCharArrayUnion<llvm::detail::DenseSetPair<long int>[4], llvm::SmallDenseMap<long int, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<long int, void>, llvm::detail::DenseSetPair<long int> >::LargeRep>::buffer[0])).llvm::SmallDenseMap<long int, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<long int>, llvm::detail::DenseSetPair<long int> >::LargeRep::NumBuckets’ may be used uninitialized [-Wmaybe-uninitialized]
 1170 |     return Small ? InlineBuckets : getLargeRep()->NumBuckets;
      |            ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/scratch1/akarande/moe-pim-iree/compiler/src/iree/compiler/Codegen/LLVMCPU/Passes.cpp: In function ‘mlir::LogicalResult mlir::iree_compiler::verifyDoubleTilingExpertPassPipelineConfig(mlir::Operation*, IREE::Codegen::LoweringConfigAttr, IREE::Codegen::TranslationInfoAttr, llvm::ArrayRef<long int>)’:
/scratch1/akarande/moe-pim-iree/compiler/src/iree/compiler/Codegen/LLVMCPU/Passes.cpp:162:32: note: ‘s’ declared here
  162 |   llvm::SmallDenseSet<int64_t> s;
      |                                ^
In member function ‘const BucketT* llvm::SmallDenseMap<KeyT, ValueT, InlineBuckets, KeyInfoT, BucketT>::getBuckets() const [with KeyT = long int; ValueT = llvm::detail::DenseSetEmpty; unsigned int InlineBuckets = 4; KeyInfoT = llvm::DenseMapInfo<long int>; BucketT = llvm::detail::DenseSetPair<long int>]’,
    inlined from ‘const BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::getBuckets() const [with DerivedT = llvm::SmallDenseMap<long int, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<long int>, llvm::detail::DenseSetPair<long int> >; KeyT = long int; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<long int>; BucketT = llvm::detail::DenseSetPair<long int>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:517:59,
    inlined from ‘bool llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::LookupBucketFor(const LookupKeyT&, const BucketT*&) const [with LookupKeyT = long int; DerivedT = llvm::SmallDenseMap<long int, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<long int>, llvm::detail::DenseSetPair<long int> >; KeyT = long int; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<long int>; BucketT = llvm::detail::DenseSetPair<long int>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:610:43,
    inlined from ‘bool llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::LookupBucketFor(const LookupKeyT&, BucketT*&) [with LookupKeyT = long int; DerivedT = llvm::SmallDenseMap<long int, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<long int>, llvm::detail::DenseSetPair<long int> >; KeyT = long int; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<long int>; BucketT = llvm::detail::DenseSetPair<long int>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:662:24,
    inlined from ‘void llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::moveFromOldBuckets(BucketT*, BucketT*) [with DerivedT = llvm::SmallDenseMap<long int, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<long int>, llvm::detail::DenseSetPair<long int> >; KeyT = long int; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<long int>; BucketT = llvm::detail::DenseSetPair<long int>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:406:40,
    inlined from ‘void llvm::SmallDenseMap<KeyT, ValueT, InlineBuckets, KeyInfoT, BucketT>::grow(unsigned int) [with KeyT = long int; ValueT = llvm::detail::DenseSetEmpty; unsigned int InlineBuckets = 4; KeyInfoT = llvm::DenseMapInfo<long int>; BucketT = llvm::detail::DenseSetPair<long int>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:1077:31,
    inlined from ‘void llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::grow(unsigned int) [with DerivedT = llvm::SmallDenseMap<long int, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<long int>, llvm::detail::DenseSetPair<long int> >; KeyT = long int; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<long int>; BucketT = llvm::detail::DenseSetPair<long int>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:537:40,
    inlined from ‘BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = long int; DerivedT = llvm::SmallDenseMap<long int, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<long int>, llvm::detail::DenseSetPair<long int> >; KeyT = long int; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<long int>; BucketT = llvm::detail::DenseSetPair<long int>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:586:17,
    inlined from ‘BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = const long int&; ValueArgs = {llvm::detail::DenseSetEmpty&}; DerivedT = llvm::SmallDenseMap<long int, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<long int>, llvm::detail::DenseSetPair<long int> >; KeyT = long int; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<long int>; BucketT = llvm::detail::DenseSetPair<long int>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:37,
    inlined from ‘std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::try_emplace(const KeyT&, Ts&& ...) [with Ts = {llvm::detail::DenseSetEmpty&}; DerivedT = llvm::SmallDenseMap<long int, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<long int>, llvm::detail::DenseSetPair<long int> >; KeyT = long int; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<long int>; BucketT = llvm::detail::DenseSetPair<long int>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:258:33,
    inlined from ‘std::pair<llvm::detail::DenseSetImpl<ValueT, MapTy, ValueInfoT>::Iterator, bool> llvm::detail::DenseSetImpl<ValueT, MapTy, ValueInfoT>::insert(const ValueT&) [with ValueT = long int; MapTy = llvm::SmallDenseMap<long int, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<long int>, llvm::detail::DenseSetPair<long int> >; ValueInfoT = llvm::DenseMapInfo<long int>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseSet.h:208:30,
    inlined from ‘void llvm::detail::DenseSetImpl<ValueT, MapTy, ValueInfoT>::insert(InputIt, InputIt) [with InputIt = const long int*; ValueT = long int; MapTy = llvm::SmallDenseMap<long int, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<long int>, llvm::detail::DenseSetPair<long int> >; ValueInfoT = llvm::DenseMapInfo<long int>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseSet.h:232:13,
    inlined from ‘bool mlir::iree_compiler::isValidInterchange(llvm::ArrayRef<long int>, int)’ at /scratch1/akarande/moe-pim-iree/compiler/src/iree/compiler/Codegen/LLVMCPU/Passes.cpp:163:11,
    inlined from ‘mlir::LogicalResult mlir::iree_compiler::verifyDoubleTilingExpertPassPipelineConfig(mlir::Operation*, IREE::Codegen::LoweringConfigAttr, IREE::Codegen::TranslationInfoAttr, llvm::ArrayRef<long int>)’ at /scratch1/akarande/moe-pim-iree/compiler/src/iree/compiler/Codegen/LLVMCPU/Passes.cpp:239:30:
/scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:1161:18: warning: ‘*(const llvm::SmallDenseMap<long int, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<long int, void>, llvm::detail::DenseSetPair<long int> >::LargeRep*)((char*)&s + offsetof(llvm::SmallDenseSet<long int, 4, llvm::DenseMapInfo<long int, void> >,llvm::SmallDenseSet<long int, 4, llvm::DenseMapInfo<long int, void> >::<unnamed>.llvm::detail::DenseSetImpl<long int, llvm::SmallDenseMap<long int, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<long int, void>, llvm::detail::DenseSetPair<long int> >, llvm::DenseMapInfo<long int, void> >::TheMap.llvm::SmallDenseMap<long int, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<long int, void>, llvm::detail::DenseSetPair<long int> >::storage.llvm::AlignedCharArrayUnion<llvm::detail::DenseSetPair<long int>[4], llvm::SmallDenseMap<long int, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<long int, void>, llvm::detail::DenseSetPair<long int> >::LargeRep>::buffer[0])).llvm::SmallDenseMap<long int, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<long int>, llvm::detail::DenseSetPair<long int> >::LargeRep::Buckets’ may be used uninitialized [-Wmaybe-uninitialized]
 1161 |     return Small ? getInlineBuckets() : getLargeRep()->Buckets;
      |            ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/scratch1/akarande/moe-pim-iree/compiler/src/iree/compiler/Codegen/LLVMCPU/Passes.cpp: In function ‘mlir::LogicalResult mlir::iree_compiler::verifyDoubleTilingExpertPassPipelineConfig(mlir::Operation*, IREE::Codegen::LoweringConfigAttr, IREE::Codegen::TranslationInfoAttr, llvm::ArrayRef<long int>)’:
/scratch1/akarande/moe-pim-iree/compiler/src/iree/compiler/Codegen/LLVMCPU/Passes.cpp:162:32: note: ‘s’ declared here
  162 |   llvm::SmallDenseSet<int64_t> s;
      |                                ^
In member function ‘unsigned int llvm::SmallDenseMap<KeyT, ValueT, InlineBuckets, KeyInfoT, BucketT>::getNumBuckets() const [with KeyT = long int; ValueT = llvm::detail::DenseSetEmpty; unsigned int InlineBuckets = 4; KeyInfoT = llvm::DenseMapInfo<long int>; BucketT = llvm::detail::DenseSetPair<long int>]’,
    inlined from ‘unsigned int llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::getNumBuckets() const [with DerivedT = llvm::SmallDenseMap<long int, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<long int>, llvm::detail::DenseSetPair<long int> >; KeyT = long int; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<long int>; BucketT = llvm::detail::DenseSetPair<long int>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:525:62,
    inlined from ‘bool llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::LookupBucketFor(const LookupKeyT&, const BucketT*&) const [with LookupKeyT = long int; DerivedT = llvm::SmallDenseMap<long int, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<long int>, llvm::detail::DenseSetPair<long int> >; KeyT = long int; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<long int>; BucketT = llvm::detail::DenseSetPair<long int>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:611:46,
    inlined from ‘bool llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::LookupBucketFor(const LookupKeyT&, BucketT*&) [with LookupKeyT = long int; DerivedT = llvm::SmallDenseMap<long int, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<long int>, llvm::detail::DenseSetPair<long int> >; KeyT = long int; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<long int>; BucketT = llvm::detail::DenseSetPair<long int>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:662:24,
    inlined from ‘void llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::moveFromOldBuckets(BucketT*, BucketT*) [with DerivedT = llvm::SmallDenseMap<long int, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<long int>, llvm::detail::DenseSetPair<long int> >; KeyT = long int; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<long int>; BucketT = llvm::detail::DenseSetPair<long int>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:406:40,
    inlined from ‘void llvm::SmallDenseMap<KeyT, ValueT, InlineBuckets, KeyInfoT, BucketT>::grow(unsigned int) [with KeyT = long int; ValueT = llvm::detail::DenseSetEmpty; unsigned int InlineBuckets = 4; KeyInfoT = llvm::DenseMapInfo<long int>; BucketT = llvm::detail::DenseSetPair<long int>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:1077:31,
    inlined from ‘void llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::grow(unsigned int) [with DerivedT = llvm::SmallDenseMap<long int, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<long int>, llvm::detail::DenseSetPair<long int> >; KeyT = long int; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<long int>; BucketT = llvm::detail::DenseSetPair<long int>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:537:40,
    inlined from ‘BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = long int; DerivedT = llvm::SmallDenseMap<long int, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<long int>, llvm::detail::DenseSetPair<long int> >; KeyT = long int; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<long int>; BucketT = llvm::detail::DenseSetPair<long int>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:586:17,
    inlined from ‘BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = const long int&; ValueArgs = {llvm::detail::DenseSetEmpty&}; DerivedT = llvm::SmallDenseMap<long int, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<long int>, llvm::detail::DenseSetPair<long int> >; KeyT = long int; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<long int>; BucketT = llvm::detail::DenseSetPair<long int>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:37,
    inlined from ‘std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::try_emplace(const KeyT&, Ts&& ...) [with Ts = {llvm::detail::DenseSetEmpty&}; DerivedT = llvm::SmallDenseMap<long int, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<long int>, llvm::detail::DenseSetPair<long int> >; KeyT = long int; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<long int>; BucketT = llvm::detail::DenseSetPair<long int>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:258:33,
    inlined from ‘std::pair<llvm::detail::DenseSetImpl<ValueT, MapTy, ValueInfoT>::Iterator, bool> llvm::detail::DenseSetImpl<ValueT, MapTy, ValueInfoT>::insert(const ValueT&) [with ValueT = long int; MapTy = llvm::SmallDenseMap<long int, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<long int>, llvm::detail::DenseSetPair<long int> >; ValueInfoT = llvm::DenseMapInfo<long int>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseSet.h:208:30,
    inlined from ‘void llvm::detail::DenseSetImpl<ValueT, MapTy, ValueInfoT>::insert(InputIt, InputIt) [with InputIt = const long int*; ValueT = long int; MapTy = llvm::SmallDenseMap<long int, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<long int>, llvm::detail::DenseSetPair<long int> >; ValueInfoT = llvm::DenseMapInfo<long int>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseSet.h:232:13,
    inlined from ‘bool mlir::iree_compiler::isValidInterchange(llvm::ArrayRef<long int>, int)’ at /scratch1/akarande/moe-pim-iree/compiler/src/iree/compiler/Codegen/LLVMCPU/Passes.cpp:163:11,
    inlined from ‘mlir::LogicalResult mlir::iree_compiler::verifyDoubleTilingExpertPassPipelineConfig(mlir::Operation*, IREE::Codegen::LoweringConfigAttr, IREE::Codegen::TranslationInfoAttr, llvm::ArrayRef<long int>)’ at /scratch1/akarande/moe-pim-iree/compiler/src/iree/compiler/Codegen/LLVMCPU/Passes.cpp:239:30:
/scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:1170:18: warning: ‘*(const llvm::SmallDenseMap<long int, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<long int, void>, llvm::detail::DenseSetPair<long int> >::LargeRep*)((char*)&s + offsetof(llvm::SmallDenseSet<long int, 4, llvm::DenseMapInfo<long int, void> >,llvm::SmallDenseSet<long int, 4, llvm::DenseMapInfo<long int, void> >::<unnamed>.llvm::detail::DenseSetImpl<long int, llvm::SmallDenseMap<long int, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<long int, void>, llvm::detail::DenseSetPair<long int> >, llvm::DenseMapInfo<long int, void> >::TheMap.llvm::SmallDenseMap<long int, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<long int, void>, llvm::detail::DenseSetPair<long int> >::storage.llvm::AlignedCharArrayUnion<llvm::detail::DenseSetPair<long int>[4], llvm::SmallDenseMap<long int, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<long int, void>, llvm::detail::DenseSetPair<long int> >::LargeRep>::buffer[0])).llvm::SmallDenseMap<long int, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<long int>, llvm::detail::DenseSetPair<long int> >::LargeRep::NumBuckets’ may be used uninitialized [-Wmaybe-uninitialized]
 1170 |     return Small ? InlineBuckets : getLargeRep()->NumBuckets;
      |            ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/scratch1/akarande/moe-pim-iree/compiler/src/iree/compiler/Codegen/LLVMCPU/Passes.cpp: In function ‘mlir::LogicalResult mlir::iree_compiler::verifyDoubleTilingExpertPassPipelineConfig(mlir::Operation*, IREE::Codegen::LoweringConfigAttr, IREE::Codegen::TranslationInfoAttr, llvm::ArrayRef<long int>)’:
/scratch1/akarande/moe-pim-iree/compiler/src/iree/compiler/Codegen/LLVMCPU/Passes.cpp:162:32: note: ‘s’ declared here
  162 |   llvm::SmallDenseSet<int64_t> s;
      |                                ^
[648/1615] Building CXX object compiler/src/iree/...CPU.objects.dir/VectorContractCustomKernels.cpp.
In file included from /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/Support/FormatVariadic.h:34,
                 from /scratch1/akarande/moe-pim-iree/compiler/src/iree/compiler/Codegen/LLVMCPU/VectorContractCustomKernels.cpp:14:
In static member function ‘static size_t llvm::detail::HelperFunctions::consumeNumHexDigits(llvm::StringRef&, llvm::HexPrintStyle, size_t)’,
    inlined from ‘static void llvm::format_provider<T, typename std::enable_if<llvm::detail::use_integral_formatter<T>::value, void>::type>::format(const T&, llvm::raw_ostream&, llvm::StringRef) [with T = int]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/Support/FormatProviders.h:135:35,
    inlined from ‘void llvm::detail::provider_format_adapter<T>::format(llvm::raw_ostream&, llvm::StringRef) [with T = int&]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/Support/FormatVariadicDetails.h:40:45:
/scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/Support/FormatProviders.h:95:27: warning: ‘HS’ may be used uninitialized [-Wmaybe-uninitialized]
   95 |     if (isPrefixedHexStyle(Style))
      |         ~~~~~~~~~~~~~~~~~~^~~~~~~
/scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/Support/FormatProviders.h: In member function ‘void llvm::detail::provider_format_adapter<T>::format(llvm::raw_ostream&, llvm::StringRef) [with T = int&]’:
/scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/Support/FormatProviders.h:132:19: note: ‘HS’ was declared here
  132 |     HexPrintStyle HS;
      |                   ^~
[652/1615] Building CXX object compiler/src/iree/...en_LLVMGPU_LLVMGPU.objects.dir/KernelConfig.cpp.
In file included from /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/../mlir/include/mlir/IR/AttrTypeSubElements.h:20,
                 from /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/../mlir/include/mlir/IR/StorageUniquerSupport.h:16,
                 from /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/../mlir/include/mlir/IR/AttributeSupport.h:17,
                 from /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/../mlir/include/mlir/IR/Attributes.h:12,
                 from /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/../mlir/include/mlir/IR/BuiltinAttributeInterfaces.h:13,
                 from /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/../mlir/include/mlir/IR/BuiltinTypes.h:12,
                 from /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/../mlir/include/mlir/IR/OpImplementation.h:16,
                 from /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/../mlir/include/mlir/IR/BuiltinOps.h:16,
                 from /scratch1/akarande/moe-pim-iree/compiler/src/iree/compiler/Codegen/LLVMGPU/KernelConfig.h:10,
                 from /scratch1/akarande/moe-pim-iree/compiler/src/iree/compiler/Codegen/LLVMGPU/KernelConfig.cpp:7:
In member function ‘unsigned int llvm::SmallDenseMap<KeyT, ValueT, InlineBuckets, KeyInfoT, BucketT>::getNumBuckets() const [with KeyT = unsigned int; ValueT = llvm::detail::DenseSetEmpty; unsigned int InlineBuckets = 4; KeyInfoT = llvm::DenseMapInfo<unsigned int>; BucketT = llvm::detail::DenseSetPair<unsigned int>]’,
    inlined from ‘unsigned int llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::getNumBuckets() const [with DerivedT = llvm::SmallDenseMap<unsigned int, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<unsigned int>, llvm::detail::DenseSetPair<unsigned int> >; KeyT = unsigned int; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<unsigned int>; BucketT = llvm::detail::DenseSetPair<unsigned int>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:525:62,
    inlined from ‘BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::getBucketsEnd() [with DerivedT = llvm::SmallDenseMap<unsigned int, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<unsigned int>, llvm::detail::DenseSetPair<unsigned int> >; KeyT = unsigned int; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<unsigned int>; BucketT = llvm::detail::DenseSetPair<unsigned int>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:529:40,
    inlined from ‘void llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::initEmpty() [with DerivedT = llvm::SmallDenseMap<unsigned int, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<unsigned int>, llvm::detail::DenseSetPair<unsigned int> >; KeyT = unsigned int; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<unsigned int>; BucketT = llvm::detail::DenseSetPair<unsigned int>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:380:55,
    inlined from ‘void llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::moveFromOldBuckets(BucketT*, BucketT*) [with DerivedT = llvm::SmallDenseMap<unsigned int, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<unsigned int>, llvm::detail::DenseSetPair<unsigned int> >; KeyT = unsigned int; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<unsigned int>; BucketT = llvm::detail::DenseSetPair<unsigned int>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:396:14,
    inlined from ‘void llvm::SmallDenseMap<KeyT, ValueT, InlineBuckets, KeyInfoT, BucketT>::grow(unsigned int) [with KeyT = unsigned int; ValueT = llvm::detail::DenseSetEmpty; unsigned int InlineBuckets = 4; KeyInfoT = llvm::DenseMapInfo<unsigned int>; BucketT = llvm::detail::DenseSetPair<unsigned int>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:1077:31,
    inlined from ‘void llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::grow(unsigned int) [with DerivedT = llvm::SmallDenseMap<unsigned int, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<unsigned int>, llvm::detail::DenseSetPair<unsigned int> >; KeyT = unsigned int; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<unsigned int>; BucketT = llvm::detail::DenseSetPair<unsigned int>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:537:40,
    inlined from ‘BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = unsigned int; DerivedT = llvm::SmallDenseMap<unsigned int, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<unsigned int>, llvm::detail::DenseSetPair<unsigned int> >; KeyT = unsigned int; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<unsigned int>; BucketT = llvm::detail::DenseSetPair<unsigned int>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:586:17,
    inlined from ‘BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = const unsigned int&; ValueArgs = {llvm::detail::DenseSetEmpty&}; DerivedT = llvm::SmallDenseMap<unsigned int, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<unsigned int>, llvm::detail::DenseSetPair<unsigned int> >; KeyT = unsigned int; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<unsigned int>; BucketT = llvm::detail::DenseSetPair<unsigned int>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:37,
    inlined from ‘std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::try_emplace(const KeyT&, Ts&& ...) [with Ts = {llvm::detail::DenseSetEmpty&}; DerivedT = llvm::SmallDenseMap<unsigned int, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<unsigned int>, llvm::detail::DenseSetPair<unsigned int> >; KeyT = unsigned int; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<unsigned int>; BucketT = llvm::detail::DenseSetPair<unsigned int>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:258:33,
    inlined from ‘std::pair<llvm::detail::DenseSetImpl<ValueT, MapTy, ValueInfoT>::Iterator, bool> llvm::detail::DenseSetImpl<ValueT, MapTy, ValueInfoT>::insert(const ValueT&) [with ValueT = unsigned int; MapTy = llvm::SmallDenseMap<unsigned int, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<unsigned int>, llvm::detail::DenseSetPair<unsigned int> >; ValueInfoT = llvm::DenseMapInfo<unsigned int>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseSet.h:208:30,
    inlined from ‘void llvm::detail::DenseSetImpl<ValueT, MapTy, ValueInfoT>::insert(InputIt, InputIt) [with InputIt = unsigned int*; ValueT = unsigned int; MapTy = llvm::SmallDenseMap<unsigned int, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<unsigned int>, llvm::detail::DenseSetPair<unsigned int> >; ValueInfoT = llvm::DenseMapInfo<unsigned int>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseSet.h:232:13,
    inlined from ‘auto setContractConfig(mlir::func::FuncOp, mlir::linalg::LinalgOp, const {anonymous}::TargetInfo&)::<lambda(int64_t, int64_t, int64_t, llvm::ArrayRef<long int>, unsigned int, mlir::iree_compiler::IREE::Codegen::DispatchLoweringPassPipeline)>::operator().constprop(int64_t, int64_t, int64_t, llvm::ArrayRef<long int>, unsigned int, mlir::iree_compiler::IREE::Codegen::DispatchLoweringPassPipeline) const’ at /scratch1/akarande/moe-pim-iree/compiler/src/iree/compiler/Codegen/LLVMGPU/KernelConfig.cpp:212:35:
/scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:1170:18: warning: ‘*(const llvm::SmallDenseMap<unsigned int, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<unsigned int, void>, llvm::detail::DenseSetPair<unsigned int> >::LargeRep*)((char*)&partitionedLoopsSet + offsetof(llvm::SmallDenseSet<unsigned int, 4, llvm::DenseMapInfo<unsigned int, void> >,llvm::SmallDenseSet<unsigned int, 4, llvm::DenseMapInfo<unsigned int, void> >::<unnamed>.llvm::detail::DenseSetImpl<unsigned int, llvm::SmallDenseMap<unsigned int, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<unsigned int, void>, llvm::detail::DenseSetPair<unsigned int> >, llvm::DenseMapInfo<unsigned int, void> >::TheMap.llvm::SmallDenseMap<unsigned int, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<unsigned int, void>, llvm::detail::DenseSetPair<unsigned int> >::storage.llvm::AlignedCharArrayUnion<llvm::detail::DenseSetPair<unsigned int>[4], llvm::SmallDenseMap<unsigned int, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<unsigned int, void>, llvm::detail::DenseSetPair<unsigned int> >::LargeRep>::buffer[0])).llvm::SmallDenseMap<unsigned int, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<unsigned int>, llvm::detail::DenseSetPair<unsigned int> >::LargeRep::NumBuckets’ may be used uninitialized [-Wmaybe-uninitialized]
 1170 |     return Small ? InlineBuckets : getLargeRep()->NumBuckets;
      |            ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/scratch1/akarande/moe-pim-iree/compiler/src/iree/compiler/Codegen/LLVMGPU/KernelConfig.cpp: In member function ‘auto setContractConfig(mlir::func::FuncOp, mlir::linalg::LinalgOp, const {anonymous}::TargetInfo&)::<lambda(int64_t, int64_t, int64_t, llvm::ArrayRef<long int>, unsigned int, mlir::iree_compiler::IREE::Codegen::DispatchLoweringPassPipeline)>::operator().constprop(int64_t, int64_t, int64_t, llvm::ArrayRef<long int>, unsigned int, mlir::iree_compiler::IREE::Codegen::DispatchLoweringPassPipeline) const’:
/scratch1/akarande/moe-pim-iree/compiler/src/iree/compiler/Codegen/LLVMGPU/KernelConfig.cpp:211:42: note: ‘partitionedLoopsSet’ declared here
  211 |         llvm::SmallDenseSet<unsigned, 4> partitionedLoopsSet;
      |                                          ^~~~~~~~~~~~~~~~~~~
[668/1615] Building CXX object compiler/src/iree/...er_Codegen_PIM_PIM.objects.dir/KernelConfig.cpp.
/scratch1/akarande/moe-pim-iree/compiler/src/iree/compiler/Codegen/PIM/KernelConfig.cpp: In function ‘mlir::LogicalResult setMatmulTileConfig(mlir::func::FuncOp, mlir::linalg::LinalgOp, const {anonymous}::TargetInfo&)’:
/scratch1/akarande/moe-pim-iree/compiler/src/iree/compiler/Codegen/PIM/KernelConfig.cpp:195:8: warning: unused variable ‘isStaticSize’ [-Wunused-variable]
  195 |   bool isStaticSize = sizeM != ShapedType::kDynamic &&
      |        ^~~~~~~~~~~~
/scratch1/akarande/moe-pim-iree/compiler/src/iree/compiler/Codegen/PIM/KernelConfig.cpp: In function ‘mlir::LogicalResult setBatchMatmulTileConfig(mlir::func::FuncOp, mlir::linalg::LinalgOp, const {anonymous}::TargetInfo&)’:
/scratch1/akarande/moe-pim-iree/compiler/src/iree/compiler/Codegen/PIM/KernelConfig.cpp:374:8: warning: unused variable ‘isStaticSize’ [-Wunused-variable]
  374 |   bool isStaticSize = sizeM != ShapedType::kDynamic &&
      |        ^~~~~~~~~~~~
/scratch1/akarande/moe-pim-iree/compiler/src/iree/compiler/Codegen/PIM/KernelConfig.cpp: In function ‘mlir::LogicalResult mlir::iree_compiler::initPIMLaunchConfig(mlir::ModuleOp)’:
/scratch1/akarande/moe-pim-iree/compiler/src/iree/compiler/Codegen/PIM/KernelConfig.cpp:621:7: warning: unused variable ‘serial_mm_cnt’ [-Wunused-variable]
  621 |   int serial_mm_cnt = 0;
      |       ^~~~~~~~~~~~~
/scratch1/akarande/moe-pim-iree/compiler/src/iree/compiler/Codegen/PIM/KernelConfig.cpp:622:8: warning: unused variable ‘is_matmul’ [-Wunused-variable]
  622 |   bool is_matmul = false;
      |        ^~~~~~~~~
In file included from /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/../mlir/include/mlir/IR/AttrTypeSubElements.h:20,
                 from /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/../mlir/include/mlir/IR/StorageUniquerSupport.h:16,
                 from /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/../mlir/include/mlir/IR/AttributeSupport.h:17,
                 from /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/../mlir/include/mlir/IR/Attributes.h:12,
                 from /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/../mlir/include/mlir/IR/BuiltinAttributeInterfaces.h:13,
                 from /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/../mlir/include/mlir/IR/BuiltinTypes.h:12,
                 from /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/../mlir/include/mlir/IR/OpImplementation.h:16,
                 from /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/../mlir/include/mlir/IR/BuiltinOps.h:16,
                 from /scratch1/akarande/moe-pim-iree/compiler/src/iree/compiler/Codegen/PIM/KernelConfig.h:10,
                 from /scratch1/akarande/moe-pim-iree/compiler/src/iree/compiler/Codegen/PIM/KernelConfig.cpp:7:
In member function ‘unsigned int llvm::SmallDenseMap<KeyT, ValueT, InlineBuckets, KeyInfoT, BucketT>::getNumBuckets() const [with KeyT = unsigned int; ValueT = llvm::detail::DenseSetEmpty; unsigned int InlineBuckets = 4; KeyInfoT = llvm::DenseMapInfo<unsigned int>; BucketT = llvm::detail::DenseSetPair<unsigned int>]’,
    inlined from ‘unsigned int llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::getNumBuckets() const [with DerivedT = llvm::SmallDenseMap<unsigned int, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<unsigned int>, llvm::detail::DenseSetPair<unsigned int> >; KeyT = unsigned int; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<unsigned int>; BucketT = llvm::detail::DenseSetPair<unsigned int>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:525:62,
    inlined from ‘BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::getBucketsEnd() [with DerivedT = llvm::SmallDenseMap<unsigned int, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<unsigned int>, llvm::detail::DenseSetPair<unsigned int> >; KeyT = unsigned int; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<unsigned int>; BucketT = llvm::detail::DenseSetPair<unsigned int>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:529:40,
    inlined from ‘void llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::initEmpty() [with DerivedT = llvm::SmallDenseMap<unsigned int, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<unsigned int>, llvm::detail::DenseSetPair<unsigned int> >; KeyT = unsigned int; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<unsigned int>; BucketT = llvm::detail::DenseSetPair<unsigned int>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:380:55,
    inlined from ‘void llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::moveFromOldBuckets(BucketT*, BucketT*) [with DerivedT = llvm::SmallDenseMap<unsigned int, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<unsigned int>, llvm::detail::DenseSetPair<unsigned int> >; KeyT = unsigned int; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<unsigned int>; BucketT = llvm::detail::DenseSetPair<unsigned int>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:396:14,
    inlined from ‘void llvm::SmallDenseMap<KeyT, ValueT, InlineBuckets, KeyInfoT, BucketT>::grow(unsigned int) [with KeyT = unsigned int; ValueT = llvm::detail::DenseSetEmpty; unsigned int InlineBuckets = 4; KeyInfoT = llvm::DenseMapInfo<unsigned int>; BucketT = llvm::detail::DenseSetPair<unsigned int>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:1077:31,
    inlined from ‘void llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::grow(unsigned int) [with DerivedT = llvm::SmallDenseMap<unsigned int, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<unsigned int>, llvm::detail::DenseSetPair<unsigned int> >; KeyT = unsigned int; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<unsigned int>; BucketT = llvm::detail::DenseSetPair<unsigned int>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:537:40,
    inlined from ‘BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = unsigned int; DerivedT = llvm::SmallDenseMap<unsigned int, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<unsigned int>, llvm::detail::DenseSetPair<unsigned int> >; KeyT = unsigned int; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<unsigned int>; BucketT = llvm::detail::DenseSetPair<unsigned int>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:586:17,
    inlined from ‘BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = const unsigned int&; ValueArgs = {llvm::detail::DenseSetEmpty&}; DerivedT = llvm::SmallDenseMap<unsigned int, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<unsigned int>, llvm::detail::DenseSetPair<unsigned int> >; KeyT = unsigned int; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<unsigned int>; BucketT = llvm::detail::DenseSetPair<unsigned int>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:37,
    inlined from ‘std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::try_emplace(const KeyT&, Ts&& ...) [with Ts = {llvm::detail::DenseSetEmpty&}; DerivedT = llvm::SmallDenseMap<unsigned int, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<unsigned int>, llvm::detail::DenseSetPair<unsigned int> >; KeyT = unsigned int; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<unsigned int>; BucketT = llvm::detail::DenseSetPair<unsigned int>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:258:33,
    inlined from ‘std::pair<llvm::detail::DenseSetImpl<ValueT, MapTy, ValueInfoT>::Iterator, bool> llvm::detail::DenseSetImpl<ValueT, MapTy, ValueInfoT>::insert(const ValueT&) [with ValueT = unsigned int; MapTy = llvm::SmallDenseMap<unsigned int, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<unsigned int>, llvm::detail::DenseSetPair<unsigned int> >; ValueInfoT = llvm::DenseMapInfo<unsigned int>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseSet.h:208:30,
    inlined from ‘void llvm::detail::DenseSetImpl<ValueT, MapTy, ValueInfoT>::insert(InputIt, InputIt) [with InputIt = unsigned int*; ValueT = unsigned int; MapTy = llvm::SmallDenseMap<unsigned int, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<unsigned int>, llvm::detail::DenseSetPair<unsigned int> >; ValueInfoT = llvm::DenseMapInfo<unsigned int>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseSet.h:232:13,
    inlined from ‘setBatchMatmulTileConfig(mlir::func::FuncOp, mlir::linalg::LinalgOp, const {anonymous}::TargetInfo&)::<lambda(int64_t, int64_t, int64_t, int64_t, llvm::ArrayRef<long int>, unsigned int, mlir::iree_compiler::IREE::Codegen::DispatchLoweringPassPipeline)>’ at /scratch1/akarande/moe-pim-iree/compiler/src/iree/compiler/Codegen/PIM/KernelConfig.cpp:319:35,
    inlined from ‘mlir::LogicalResult setBatchMatmulTileConfig(mlir::func::FuncOp, mlir::linalg::LinalgOp, const {anonymous}::TargetInfo&)’ at /scratch1/akarande/moe-pim-iree/compiler/src/iree/compiler/Codegen/PIM/KernelConfig.cpp:424:30:
/scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:1170:18: warning: ‘*(const llvm::SmallDenseMap<unsigned int, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<unsigned int, void>, llvm::detail::DenseSetPair<unsigned int> >::LargeRep*)((char*)&partitionedLoopsSet + offsetof(llvm::SmallDenseSet<unsigned int, 4, llvm::DenseMapInfo<unsigned int, void> >,llvm::SmallDenseSet<unsigned int, 4, llvm::DenseMapInfo<unsigned int, void> >::<unnamed>.llvm::detail::DenseSetImpl<unsigned int, llvm::SmallDenseMap<unsigned int, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<unsigned int, void>, llvm::detail::DenseSetPair<unsigned int> >, llvm::DenseMapInfo<unsigned int, void> >::TheMap.llvm::SmallDenseMap<unsigned int, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<unsigned int, void>, llvm::detail::DenseSetPair<unsigned int> >::storage.llvm::AlignedCharArrayUnion<llvm::detail::DenseSetPair<unsigned int>[4], llvm::SmallDenseMap<unsigned int, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<unsigned int, void>, llvm::detail::DenseSetPair<unsigned int> >::LargeRep>::buffer[0])).llvm::SmallDenseMap<unsigned int, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<unsigned int>, llvm::detail::DenseSetPair<unsigned int> >::LargeRep::NumBuckets’ may be used uninitialized [-Wmaybe-uninitialized]
 1170 |     return Small ? InlineBuckets : getLargeRep()->NumBuckets;
      |            ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/scratch1/akarande/moe-pim-iree/compiler/src/iree/compiler/Codegen/PIM/KernelConfig.cpp: In function ‘mlir::LogicalResult setBatchMatmulTileConfig(mlir::func::FuncOp, mlir::linalg::LinalgOp, const {anonymous}::TargetInfo&)’:
/scratch1/akarande/moe-pim-iree/compiler/src/iree/compiler/Codegen/PIM/KernelConfig.cpp:318:42: note: ‘partitionedLoopsSet’ declared here
  318 |         llvm::SmallDenseSet<unsigned, 4> partitionedLoopsSet;
      |                                          ^~~~~~~~~~~~~~~~~~~
In member function ‘unsigned int llvm::SmallDenseMap<KeyT, ValueT, InlineBuckets, KeyInfoT, BucketT>::getNumBuckets() const [with KeyT = unsigned int; ValueT = llvm::detail::DenseSetEmpty; unsigned int InlineBuckets = 4; KeyInfoT = llvm::DenseMapInfo<unsigned int>; BucketT = llvm::detail::DenseSetPair<unsigned int>]’,
    inlined from ‘unsigned int llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::getNumBuckets() const [with DerivedT = llvm::SmallDenseMap<unsigned int, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<unsigned int>, llvm::detail::DenseSetPair<unsigned int> >; KeyT = unsigned int; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<unsigned int>; BucketT = llvm::detail::DenseSetPair<unsigned int>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:525:62,
    inlined from ‘BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::getBucketsEnd() [with DerivedT = llvm::SmallDenseMap<unsigned int, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<unsigned int>, llvm::detail::DenseSetPair<unsigned int> >; KeyT = unsigned int; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<unsigned int>; BucketT = llvm::detail::DenseSetPair<unsigned int>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:529:40,
    inlined from ‘void llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::initEmpty() [with DerivedT = llvm::SmallDenseMap<unsigned int, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<unsigned int>, llvm::detail::DenseSetPair<unsigned int> >; KeyT = unsigned int; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<unsigned int>; BucketT = llvm::detail::DenseSetPair<unsigned int>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:380:55,
    inlined from ‘void llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::moveFromOldBuckets(BucketT*, BucketT*) [with DerivedT = llvm::SmallDenseMap<unsigned int, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<unsigned int>, llvm::detail::DenseSetPair<unsigned int> >; KeyT = unsigned int; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<unsigned int>; BucketT = llvm::detail::DenseSetPair<unsigned int>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:396:14,
    inlined from ‘void llvm::SmallDenseMap<KeyT, ValueT, InlineBuckets, KeyInfoT, BucketT>::grow(unsigned int) [with KeyT = unsigned int; ValueT = llvm::detail::DenseSetEmpty; unsigned int InlineBuckets = 4; KeyInfoT = llvm::DenseMapInfo<unsigned int>; BucketT = llvm::detail::DenseSetPair<unsigned int>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:1077:31,
    inlined from ‘void llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::grow(unsigned int) [with DerivedT = llvm::SmallDenseMap<unsigned int, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<unsigned int>, llvm::detail::DenseSetPair<unsigned int> >; KeyT = unsigned int; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<unsigned int>; BucketT = llvm::detail::DenseSetPair<unsigned int>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:537:40,
    inlined from ‘BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = unsigned int; DerivedT = llvm::SmallDenseMap<unsigned int, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<unsigned int>, llvm::detail::DenseSetPair<unsigned int> >; KeyT = unsigned int; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<unsigned int>; BucketT = llvm::detail::DenseSetPair<unsigned int>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:586:17,
    inlined from ‘BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = const unsigned int&; ValueArgs = {llvm::detail::DenseSetEmpty&}; DerivedT = llvm::SmallDenseMap<unsigned int, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<unsigned int>, llvm::detail::DenseSetPair<unsigned int> >; KeyT = unsigned int; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<unsigned int>; BucketT = llvm::detail::DenseSetPair<unsigned int>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:37,
    inlined from ‘std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::try_emplace(const KeyT&, Ts&& ...) [with Ts = {llvm::detail::DenseSetEmpty&}; DerivedT = llvm::SmallDenseMap<unsigned int, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<unsigned int>, llvm::detail::DenseSetPair<unsigned int> >; KeyT = unsigned int; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<unsigned int>; BucketT = llvm::detail::DenseSetPair<unsigned int>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:258:33,
    inlined from ‘std::pair<llvm::detail::DenseSetImpl<ValueT, MapTy, ValueInfoT>::Iterator, bool> llvm::detail::DenseSetImpl<ValueT, MapTy, ValueInfoT>::insert(const ValueT&) [with ValueT = unsigned int; MapTy = llvm::SmallDenseMap<unsigned int, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<unsigned int>, llvm::detail::DenseSetPair<unsigned int> >; ValueInfoT = llvm::DenseMapInfo<unsigned int>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseSet.h:208:30,
    inlined from ‘void llvm::detail::DenseSetImpl<ValueT, MapTy, ValueInfoT>::insert(InputIt, InputIt) [with InputIt = unsigned int*; ValueT = unsigned int; MapTy = llvm::SmallDenseMap<unsigned int, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<unsigned int>, llvm::detail::DenseSetPair<unsigned int> >; ValueInfoT = llvm::DenseMapInfo<unsigned int>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseSet.h:232:13,
    inlined from ‘setMatmulTileConfig(mlir::func::FuncOp, mlir::linalg::LinalgOp, const {anonymous}::TargetInfo&)::<lambda(int64_t, int64_t, int64_t, llvm::ArrayRef<long int>, unsigned int, mlir::iree_compiler::IREE::Codegen::DispatchLoweringPassPipeline)>’ at /scratch1/akarande/moe-pim-iree/compiler/src/iree/compiler/Codegen/PIM/KernelConfig.cpp:147:35,
    inlined from ‘mlir::LogicalResult setMatmulTileConfig(mlir::func::FuncOp, mlir::linalg::LinalgOp, const {anonymous}::TargetInfo&)’ at /scratch1/akarande/moe-pim-iree/compiler/src/iree/compiler/Codegen/PIM/KernelConfig.cpp:278:25:
/scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:1170:18: warning: ‘*(const llvm::SmallDenseMap<unsigned int, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<unsigned int, void>, llvm::detail::DenseSetPair<unsigned int> >::LargeRep*)((char*)&partitionedLoopsSet + offsetof(llvm::SmallDenseSet<unsigned int, 4, llvm::DenseMapInfo<unsigned int, void> >,llvm::SmallDenseSet<unsigned int, 4, llvm::DenseMapInfo<unsigned int, void> >::<unnamed>.llvm::detail::DenseSetImpl<unsigned int, llvm::SmallDenseMap<unsigned int, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<unsigned int, void>, llvm::detail::DenseSetPair<unsigned int> >, llvm::DenseMapInfo<unsigned int, void> >::TheMap.llvm::SmallDenseMap<unsigned int, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<unsigned int, void>, llvm::detail::DenseSetPair<unsigned int> >::storage.llvm::AlignedCharArrayUnion<llvm::detail::DenseSetPair<unsigned int>[4], llvm::SmallDenseMap<unsigned int, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<unsigned int, void>, llvm::detail::DenseSetPair<unsigned int> >::LargeRep>::buffer[0])).llvm::SmallDenseMap<unsigned int, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<unsigned int>, llvm::detail::DenseSetPair<unsigned int> >::LargeRep::NumBuckets’ may be used uninitialized [-Wmaybe-uninitialized]
 1170 |     return Small ? InlineBuckets : getLargeRep()->NumBuckets;
      |            ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/scratch1/akarande/moe-pim-iree/compiler/src/iree/compiler/Codegen/PIM/KernelConfig.cpp: In function ‘mlir::LogicalResult setMatmulTileConfig(mlir::func::FuncOp, mlir::linalg::LinalgOp, const {anonymous}::TargetInfo&)’:
/scratch1/akarande/moe-pim-iree/compiler/src/iree/compiler/Codegen/PIM/KernelConfig.cpp:146:42: note: ‘partitionedLoopsSet’ declared here
  146 |         llvm::SmallDenseSet<unsigned, 4> partitionedLoopsSet;
      |                                          ^~~~~~~~~~~~~~~~~~~
[678/1615] Building CXX object compiler/src/iree/..._SPIRV_SPIRV.objects.dir/ConvertToSPIRVPass.cpp.
In file included from /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/Support/FormatVariadic.h:34,
                 from /scratch1/akarande/moe-pim-iree/compiler/src/iree/compiler/Codegen/SPIRV/ConvertToSPIRVPass.cpp:28:
In static member function ‘static size_t llvm::detail::HelperFunctions::consumeNumHexDigits(llvm::StringRef&, llvm::HexPrintStyle, size_t)’,
    inlined from ‘static void llvm::format_provider<T, typename std::enable_if<llvm::detail::use_integral_formatter<T>::value, void>::type>::format(const T&, llvm::raw_ostream&, llvm::StringRef) [with T = unsigned int]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/Support/FormatProviders.h:135:35,
    inlined from ‘void llvm::detail::provider_format_adapter<T>::format(llvm::raw_ostream&, llvm::StringRef) [with T = unsigned int&]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/Support/FormatVariadicDetails.h:40:45:
/scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/Support/FormatProviders.h:95:27: warning: ‘HS’ may be used uninitialized [-Wmaybe-uninitialized]
   95 |     if (isPrefixedHexStyle(Style))
      |         ~~~~~~~~~~~~~~~~~~^~~~~~~
/scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/Support/FormatProviders.h: In member function ‘void llvm::detail::provider_format_adapter<T>::format(llvm::raw_ostream&, llvm::StringRef) [with T = unsigned int&]’:
/scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/Support/FormatProviders.h:132:19: note: ‘HS’ was declared here
  132 |     HexPrintStyle HS;
      |                   ^~
[740/1615] Building CXX object compiler/src/iree/...sis_Analysis.objects.dir/RegisterAllocation.cpp.
In file included from /scratch1/akarande/moe-pim-iree/third_party/llvm-project/mlir/include/mlir/IR/AttrTypeSubElements.h:20,
                 from /scratch1/akarande/moe-pim-iree/third_party/llvm-project/mlir/include/mlir/IR/StorageUniquerSupport.h:16,
                 from /scratch1/akarande/moe-pim-iree/third_party/llvm-project/mlir/include/mlir/IR/TypeSupport.h:17,
                 from /scratch1/akarande/moe-pim-iree/third_party/llvm-project/mlir/include/mlir/IR/Types.h:12,
                 from /scratch1/akarande/moe-pim-iree/third_party/llvm-project/mlir/include/mlir/IR/Value.h:16,
                 from /scratch1/akarande/moe-pim-iree/third_party/llvm-project/mlir/include/mlir/IR/BlockSupport.h:16,
                 from /scratch1/akarande/moe-pim-iree/third_party/llvm-project/mlir/include/mlir/IR/OperationSupport.h:17,
                 from /scratch1/akarande/moe-pim-iree/third_party/llvm-project/mlir/include/mlir/IR/Dialect.h:17,
                 from /scratch1/akarande/moe-pim-iree/third_party/llvm-project/mlir/include/mlir/IR/OpDefinition.h:22,
                 from /scratch1/akarande/moe-pim-iree/compiler/src/iree/compiler/Dialect/Util/IR/UtilTraits.h:10,
                 from /scratch1/akarande/moe-pim-iree/compiler/src/iree/compiler/Dialect/VM/IR/VMOps.h:12,
                 from /scratch1/akarande/moe-pim-iree/compiler/src/iree/compiler/Dialect/VM/Analysis/ValueLiveness.h:10,
                 from /scratch1/akarande/moe-pim-iree/compiler/src/iree/compiler/Dialect/VM/Analysis/RegisterAllocation.h:10,
                 from /scratch1/akarande/moe-pim-iree/compiler/src/iree/compiler/Dialect/VM/Analysis/RegisterAllocation.cpp:7:
In member function ‘const BucketT* llvm::SmallDenseMap<KeyT, ValueT, InlineBuckets, KeyInfoT, BucketT>::getBuckets() const [with KeyT = mlir::Block*; ValueT = llvm::detail::DenseSetEmpty; unsigned int InlineBuckets = 8; KeyInfoT = llvm::DenseMapInfo<mlir::Block*, void>; BucketT = llvm::detail::DenseSetPair<mlir::Block*>]’,
    inlined from ‘BucketT* llvm::SmallDenseMap<KeyT, ValueT, InlineBuckets, KeyInfoT, BucketT>::getBuckets() [with KeyT = mlir::Block*; ValueT = llvm::detail::DenseSetEmpty; unsigned int InlineBuckets = 8; KeyInfoT = llvm::DenseMapInfo<mlir::Block*, void>; BucketT = llvm::detail::DenseSetPair<mlir::Block*>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:1166:58,
    inlined from ‘BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::getBuckets() [with DerivedT = llvm::SmallDenseMap<mlir::Block*, llvm::detail::DenseSetEmpty, 8, llvm::DenseMapInfo<mlir::Block*, void>, llvm::detail::DenseSetPair<mlir::Block*> >; KeyT = mlir::Block*; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<mlir::Block*, void>; BucketT = llvm::detail::DenseSetPair<mlir::Block*>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:521:53,
    inlined from ‘void llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::initEmpty() [with DerivedT = llvm::SmallDenseMap<mlir::Block*, llvm::detail::DenseSetEmpty, 8, llvm::DenseMapInfo<mlir::Block*, void>, llvm::detail::DenseSetPair<mlir::Block*> >; KeyT = mlir::Block*; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<mlir::Block*, void>; BucketT = llvm::detail::DenseSetPair<mlir::Block*>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:380:33,
    inlined from ‘void llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::moveFromOldBuckets(BucketT*, BucketT*) [with DerivedT = llvm::SmallDenseMap<mlir::Block*, llvm::detail::DenseSetEmpty, 8, llvm::DenseMapInfo<mlir::Block*, void>, llvm::detail::DenseSetPair<mlir::Block*> >; KeyT = mlir::Block*; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<mlir::Block*, void>; BucketT = llvm::detail::DenseSetPair<mlir::Block*>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:396:14,
    inlined from ‘void llvm::SmallDenseMap<KeyT, ValueT, InlineBuckets, KeyInfoT, BucketT>::grow(unsigned int) [with KeyT = mlir::Block*; ValueT = llvm::detail::DenseSetEmpty; unsigned int InlineBuckets = 8; KeyInfoT = llvm::DenseMapInfo<mlir::Block*, void>; BucketT = llvm::detail::DenseSetPair<mlir::Block*>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:1077:31,
    inlined from ‘void llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::grow(unsigned int) [with DerivedT = llvm::SmallDenseMap<mlir::Block*, llvm::detail::DenseSetEmpty, 8, llvm::DenseMapInfo<mlir::Block*, void>, llvm::detail::DenseSetPair<mlir::Block*> >; KeyT = mlir::Block*; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<mlir::Block*, void>; BucketT = llvm::detail::DenseSetPair<mlir::Block*>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:537:40,
    inlined from ‘BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = mlir::Block*; DerivedT = llvm::SmallDenseMap<mlir::Block*, llvm::detail::DenseSetEmpty, 8, llvm::DenseMapInfo<mlir::Block*, void>, llvm::detail::DenseSetPair<mlir::Block*> >; KeyT = mlir::Block*; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<mlir::Block*, void>; BucketT = llvm::detail::DenseSetPair<mlir::Block*>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:586:17,
    inlined from ‘BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = mlir::Block* const&; ValueArgs = {llvm::detail::DenseSetEmpty&}; DerivedT = llvm::SmallDenseMap<mlir::Block*, llvm::detail::DenseSetEmpty, 8, llvm::DenseMapInfo<mlir::Block*, void>, llvm::detail::DenseSetPair<mlir::Block*> >; KeyT = mlir::Block*; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<mlir::Block*, void>; BucketT = llvm::detail::DenseSetPair<mlir::Block*>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:37,
    inlined from ‘std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::try_emplace(const KeyT&, Ts&& ...) [with Ts = {llvm::detail::DenseSetEmpty&}; DerivedT = llvm::SmallDenseMap<mlir::Block*, llvm::detail::DenseSetEmpty, 8, llvm::DenseMapInfo<mlir::Block*, void>, llvm::detail::DenseSetPair<mlir::Block*> >; KeyT = mlir::Block*; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<mlir::Block*, void>; BucketT = llvm::detail::DenseSetPair<mlir::Block*>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:258:33,
    inlined from ‘std::pair<llvm::detail::DenseSetImpl<ValueT, MapTy, ValueInfoT>::Iterator, bool> llvm::detail::DenseSetImpl<ValueT, MapTy, ValueInfoT>::insert(const ValueT&) [with ValueT = mlir::Block*; MapTy = llvm::SmallDenseMap<mlir::Block*, llvm::detail::DenseSetEmpty, 8, llvm::DenseMapInfo<mlir::Block*, void>, llvm::detail::DenseSetPair<mlir::Block*> >; ValueInfoT = llvm::DenseMapInfo<mlir::Block*, void>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseSet.h:208:30,
    inlined from ‘bool llvm::SetVector<T, Vector, Set>::insert(const value_type&) [with T = mlir::Block*; Vector = llvm::SmallVector<mlir::Block*, 8>; Set = llvm::SmallDenseSet<mlir::Block*, 8, llvm::DenseMapInfo<mlir::Block*, void> >]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/SetVector.h:142:30,
    inlined from ‘llvm::SmallVector<mlir::Block*, 8> mlir::iree_compiler::sortBlocksInDominanceOrder(IREE::VM::FuncOp)’ at /scratch1/akarande/moe-pim-iree/compiler/src/iree/compiler/Dialect/VM/Analysis/RegisterAllocation.cpp:187:26:
/scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:1161:18: warning: ‘*(const llvm::SmallDenseMap<mlir::Block*, llvm::detail::DenseSetEmpty, 8, llvm::DenseMapInfo<mlir::Block*, void>, llvm::detail::DenseSetPair<mlir::Block*> >::LargeRep*)((char*)&unmarkedBlocks + offsetof(llvm::SmallSetVector<mlir::Block*, 8>,llvm::SmallSetVector<mlir::Block*, 8>::<unnamed>.llvm::SetVector<mlir::Block*, llvm::SmallVector<mlir::Block*, 8>, llvm::SmallDenseSet<mlir::Block*, 8, llvm::DenseMapInfo<mlir::Block*, void> > >::set_.llvm::SmallDenseSet<mlir::Block*, 8, llvm::DenseMapInfo<mlir::Block*, void> >::<unnamed>.llvm::detail::DenseSetImpl<mlir::Block*, llvm::SmallDenseMap<mlir::Block*, llvm::detail::DenseSetEmpty, 8, llvm::DenseMapInfo<mlir::Block*, void>, llvm::detail::DenseSetPair<mlir::Block*> >, llvm::DenseMapInfo<mlir::Block*, void> >::TheMap.llvm::SmallDenseMap<mlir::Block*, llvm::detail::DenseSetEmpty, 8, llvm::DenseMapInfo<mlir::Block*, void>, llvm::detail::DenseSetPair<mlir::Block*> >::storage.llvm::AlignedCharArrayUnion<llvm::detail::DenseSetPair<mlir::Block*>[8], llvm::SmallDenseMap<mlir::Block*, llvm::detail::DenseSetEmpty, 8, llvm::DenseMapInfo<mlir::Block*, void>, llvm::detail::DenseSetPair<mlir::Block*> >::LargeRep>::buffer[0])).llvm::SmallDenseMap<mlir::Block*, llvm::detail::DenseSetEmpty, 8, llvm::DenseMapInfo<mlir::Block*, void>, llvm::detail::DenseSetPair<mlir::Block*> >::LargeRep::Buckets’ may be used uninitialized [-Wmaybe-uninitialized]
 1161 |     return Small ? getInlineBuckets() : getLargeRep()->Buckets;
      |            ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/scratch1/akarande/moe-pim-iree/compiler/src/iree/compiler/Dialect/VM/Analysis/RegisterAllocation.cpp: In function ‘llvm::SmallVector<mlir::Block*, 8> mlir::iree_compiler::sortBlocksInDominanceOrder(IREE::VM::FuncOp)’:
/scratch1/akarande/moe-pim-iree/compiler/src/iree/compiler/Dialect/VM/Analysis/RegisterAllocation.cpp:185:36: note: ‘unmarkedBlocks’ declared here
  185 |   llvm::SmallSetVector<Block *, 8> unmarkedBlocks;
      |                                    ^~~~~~~~~~~~~~
In member function ‘unsigned int llvm::SmallDenseMap<KeyT, ValueT, InlineBuckets, KeyInfoT, BucketT>::getNumBuckets() const [with KeyT = mlir::Block*; ValueT = llvm::detail::DenseSetEmpty; unsigned int InlineBuckets = 8; KeyInfoT = llvm::DenseMapInfo<mlir::Block*, void>; BucketT = llvm::detail::DenseSetPair<mlir::Block*>]’,
    inlined from ‘unsigned int llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::getNumBuckets() const [with DerivedT = llvm::SmallDenseMap<mlir::Block*, llvm::detail::DenseSetEmpty, 8, llvm::DenseMapInfo<mlir::Block*, void>, llvm::detail::DenseSetPair<mlir::Block*> >; KeyT = mlir::Block*; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<mlir::Block*, void>; BucketT = llvm::detail::DenseSetPair<mlir::Block*>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:525:62,
    inlined from ‘BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::getBucketsEnd() [with DerivedT = llvm::SmallDenseMap<mlir::Block*, llvm::detail::DenseSetEmpty, 8, llvm::DenseMapInfo<mlir::Block*, void>, llvm::detail::DenseSetPair<mlir::Block*> >; KeyT = mlir::Block*; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<mlir::Block*, void>; BucketT = llvm::detail::DenseSetPair<mlir::Block*>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:529:40,
    inlined from ‘void llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::initEmpty() [with DerivedT = llvm::SmallDenseMap<mlir::Block*, llvm::detail::DenseSetEmpty, 8, llvm::DenseMapInfo<mlir::Block*, void>, llvm::detail::DenseSetPair<mlir::Block*> >; KeyT = mlir::Block*; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<mlir::Block*, void>; BucketT = llvm::detail::DenseSetPair<mlir::Block*>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:380:55,
    inlined from ‘void llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::moveFromOldBuckets(BucketT*, BucketT*) [with DerivedT = llvm::SmallDenseMap<mlir::Block*, llvm::detail::DenseSetEmpty, 8, llvm::DenseMapInfo<mlir::Block*, void>, llvm::detail::DenseSetPair<mlir::Block*> >; KeyT = mlir::Block*; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<mlir::Block*, void>; BucketT = llvm::detail::DenseSetPair<mlir::Block*>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:396:14,
    inlined from ‘void llvm::SmallDenseMap<KeyT, ValueT, InlineBuckets, KeyInfoT, BucketT>::grow(unsigned int) [with KeyT = mlir::Block*; ValueT = llvm::detail::DenseSetEmpty; unsigned int InlineBuckets = 8; KeyInfoT = llvm::DenseMapInfo<mlir::Block*, void>; BucketT = llvm::detail::DenseSetPair<mlir::Block*>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:1077:31,
    inlined from ‘void llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::grow(unsigned int) [with DerivedT = llvm::SmallDenseMap<mlir::Block*, llvm::detail::DenseSetEmpty, 8, llvm::DenseMapInfo<mlir::Block*, void>, llvm::detail::DenseSetPair<mlir::Block*> >; KeyT = mlir::Block*; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<mlir::Block*, void>; BucketT = llvm::detail::DenseSetPair<mlir::Block*>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:537:40,
    inlined from ‘BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = mlir::Block*; DerivedT = llvm::SmallDenseMap<mlir::Block*, llvm::detail::DenseSetEmpty, 8, llvm::DenseMapInfo<mlir::Block*, void>, llvm::detail::DenseSetPair<mlir::Block*> >; KeyT = mlir::Block*; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<mlir::Block*, void>; BucketT = llvm::detail::DenseSetPair<mlir::Block*>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:586:17,
    inlined from ‘BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = mlir::Block* const&; ValueArgs = {llvm::detail::DenseSetEmpty&}; DerivedT = llvm::SmallDenseMap<mlir::Block*, llvm::detail::DenseSetEmpty, 8, llvm::DenseMapInfo<mlir::Block*, void>, llvm::detail::DenseSetPair<mlir::Block*> >; KeyT = mlir::Block*; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<mlir::Block*, void>; BucketT = llvm::detail::DenseSetPair<mlir::Block*>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:37,
    inlined from ‘std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::try_emplace(const KeyT&, Ts&& ...) [with Ts = {llvm::detail::DenseSetEmpty&}; DerivedT = llvm::SmallDenseMap<mlir::Block*, llvm::detail::DenseSetEmpty, 8, llvm::DenseMapInfo<mlir::Block*, void>, llvm::detail::DenseSetPair<mlir::Block*> >; KeyT = mlir::Block*; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<mlir::Block*, void>; BucketT = llvm::detail::DenseSetPair<mlir::Block*>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:258:33,
    inlined from ‘std::pair<llvm::detail::DenseSetImpl<ValueT, MapTy, ValueInfoT>::Iterator, bool> llvm::detail::DenseSetImpl<ValueT, MapTy, ValueInfoT>::insert(const ValueT&) [with ValueT = mlir::Block*; MapTy = llvm::SmallDenseMap<mlir::Block*, llvm::detail::DenseSetEmpty, 8, llvm::DenseMapInfo<mlir::Block*, void>, llvm::detail::DenseSetPair<mlir::Block*> >; ValueInfoT = llvm::DenseMapInfo<mlir::Block*, void>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseSet.h:208:30,
    inlined from ‘bool llvm::SetVector<T, Vector, Set>::insert(const value_type&) [with T = mlir::Block*; Vector = llvm::SmallVector<mlir::Block*, 8>; Set = llvm::SmallDenseSet<mlir::Block*, 8, llvm::DenseMapInfo<mlir::Block*, void> >]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/SetVector.h:142:30,
    inlined from ‘llvm::SmallVector<mlir::Block*, 8> mlir::iree_compiler::sortBlocksInDominanceOrder(IREE::VM::FuncOp)’ at /scratch1/akarande/moe-pim-iree/compiler/src/iree/compiler/Dialect/VM/Analysis/RegisterAllocation.cpp:187:26:
/scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:1170:18: warning: ‘*(const llvm::SmallDenseMap<mlir::Block*, llvm::detail::DenseSetEmpty, 8, llvm::DenseMapInfo<mlir::Block*, void>, llvm::detail::DenseSetPair<mlir::Block*> >::LargeRep*)((char*)&unmarkedBlocks + offsetof(llvm::SmallSetVector<mlir::Block*, 8>,llvm::SmallSetVector<mlir::Block*, 8>::<unnamed>.llvm::SetVector<mlir::Block*, llvm::SmallVector<mlir::Block*, 8>, llvm::SmallDenseSet<mlir::Block*, 8, llvm::DenseMapInfo<mlir::Block*, void> > >::set_.llvm::SmallDenseSet<mlir::Block*, 8, llvm::DenseMapInfo<mlir::Block*, void> >::<unnamed>.llvm::detail::DenseSetImpl<mlir::Block*, llvm::SmallDenseMap<mlir::Block*, llvm::detail::DenseSetEmpty, 8, llvm::DenseMapInfo<mlir::Block*, void>, llvm::detail::DenseSetPair<mlir::Block*> >, llvm::DenseMapInfo<mlir::Block*, void> >::TheMap.llvm::SmallDenseMap<mlir::Block*, llvm::detail::DenseSetEmpty, 8, llvm::DenseMapInfo<mlir::Block*, void>, llvm::detail::DenseSetPair<mlir::Block*> >::storage.llvm::AlignedCharArrayUnion<llvm::detail::DenseSetPair<mlir::Block*>[8], llvm::SmallDenseMap<mlir::Block*, llvm::detail::DenseSetEmpty, 8, llvm::DenseMapInfo<mlir::Block*, void>, llvm::detail::DenseSetPair<mlir::Block*> >::LargeRep>::buffer[0])).llvm::SmallDenseMap<mlir::Block*, llvm::detail::DenseSetEmpty, 8, llvm::DenseMapInfo<mlir::Block*, void>, llvm::detail::DenseSetPair<mlir::Block*> >::LargeRep::NumBuckets’ may be used uninitialized [-Wmaybe-uninitialized]
 1170 |     return Small ? InlineBuckets : getLargeRep()->NumBuckets;
      |            ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/scratch1/akarande/moe-pim-iree/compiler/src/iree/compiler/Dialect/VM/Analysis/RegisterAllocation.cpp: In function ‘llvm::SmallVector<mlir::Block*, 8> mlir::iree_compiler::sortBlocksInDominanceOrder(IREE::VM::FuncOp)’:
/scratch1/akarande/moe-pim-iree/compiler/src/iree/compiler/Dialect/VM/Analysis/RegisterAllocation.cpp:185:36: note: ‘unmarkedBlocks’ declared here
  185 |   llvm::SmallSetVector<Block *, 8> unmarkedBlocks;
      |                                    ^~~~~~~~~~~~~~
In member function ‘const BucketT* llvm::SmallDenseMap<KeyT, ValueT, InlineBuckets, KeyInfoT, BucketT>::getBuckets() const [with KeyT = mlir::Block*; ValueT = llvm::detail::DenseSetEmpty; unsigned int InlineBuckets = 8; KeyInfoT = llvm::DenseMapInfo<mlir::Block*, void>; BucketT = llvm::detail::DenseSetPair<mlir::Block*>]’,
    inlined from ‘const BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::getBuckets() const [with DerivedT = llvm::SmallDenseMap<mlir::Block*, llvm::detail::DenseSetEmpty, 8, llvm::DenseMapInfo<mlir::Block*, void>, llvm::detail::DenseSetPair<mlir::Block*> >; KeyT = mlir::Block*; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<mlir::Block*, void>; BucketT = llvm::detail::DenseSetPair<mlir::Block*>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:517:59,
    inlined from ‘bool llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::LookupBucketFor(const LookupKeyT&, const BucketT*&) const [with LookupKeyT = mlir::Block*; DerivedT = llvm::SmallDenseMap<mlir::Block*, llvm::detail::DenseSetEmpty, 8, llvm::DenseMapInfo<mlir::Block*, void>, llvm::detail::DenseSetPair<mlir::Block*> >; KeyT = mlir::Block*; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<mlir::Block*, void>; BucketT = llvm::detail::DenseSetPair<mlir::Block*>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:610:43,
    inlined from ‘bool llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::LookupBucketFor(const LookupKeyT&, BucketT*&) [with LookupKeyT = mlir::Block*; DerivedT = llvm::SmallDenseMap<mlir::Block*, llvm::detail::DenseSetEmpty, 8, llvm::DenseMapInfo<mlir::Block*, void>, llvm::detail::DenseSetPair<mlir::Block*> >; KeyT = mlir::Block*; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<mlir::Block*, void>; BucketT = llvm::detail::DenseSetPair<mlir::Block*>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:662:24,
    inlined from ‘void llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::moveFromOldBuckets(BucketT*, BucketT*) [with DerivedT = llvm::SmallDenseMap<mlir::Block*, llvm::detail::DenseSetEmpty, 8, llvm::DenseMapInfo<mlir::Block*, void>, llvm::detail::DenseSetPair<mlir::Block*> >; KeyT = mlir::Block*; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<mlir::Block*, void>; BucketT = llvm::detail::DenseSetPair<mlir::Block*>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:406:40,
    inlined from ‘void llvm::SmallDenseMap<KeyT, ValueT, InlineBuckets, KeyInfoT, BucketT>::grow(unsigned int) [with KeyT = mlir::Block*; ValueT = llvm::detail::DenseSetEmpty; unsigned int InlineBuckets = 8; KeyInfoT = llvm::DenseMapInfo<mlir::Block*, void>; BucketT = llvm::detail::DenseSetPair<mlir::Block*>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:1077:31,
    inlined from ‘void llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::grow(unsigned int) [with DerivedT = llvm::SmallDenseMap<mlir::Block*, llvm::detail::DenseSetEmpty, 8, llvm::DenseMapInfo<mlir::Block*, void>, llvm::detail::DenseSetPair<mlir::Block*> >; KeyT = mlir::Block*; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<mlir::Block*, void>; BucketT = llvm::detail::DenseSetPair<mlir::Block*>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:537:40,
    inlined from ‘BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = mlir::Block*; DerivedT = llvm::SmallDenseMap<mlir::Block*, llvm::detail::DenseSetEmpty, 8, llvm::DenseMapInfo<mlir::Block*, void>, llvm::detail::DenseSetPair<mlir::Block*> >; KeyT = mlir::Block*; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<mlir::Block*, void>; BucketT = llvm::detail::DenseSetPair<mlir::Block*>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:586:17,
    inlined from ‘BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = mlir::Block* const&; ValueArgs = {llvm::detail::DenseSetEmpty&}; DerivedT = llvm::SmallDenseMap<mlir::Block*, llvm::detail::DenseSetEmpty, 8, llvm::DenseMapInfo<mlir::Block*, void>, llvm::detail::DenseSetPair<mlir::Block*> >; KeyT = mlir::Block*; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<mlir::Block*, void>; BucketT = llvm::detail::DenseSetPair<mlir::Block*>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:37,
    inlined from ‘std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::try_emplace(const KeyT&, Ts&& ...) [with Ts = {llvm::detail::DenseSetEmpty&}; DerivedT = llvm::SmallDenseMap<mlir::Block*, llvm::detail::DenseSetEmpty, 8, llvm::DenseMapInfo<mlir::Block*, void>, llvm::detail::DenseSetPair<mlir::Block*> >; KeyT = mlir::Block*; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<mlir::Block*, void>; BucketT = llvm::detail::DenseSetPair<mlir::Block*>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:258:33,
    inlined from ‘std::pair<llvm::detail::DenseSetImpl<ValueT, MapTy, ValueInfoT>::Iterator, bool> llvm::detail::DenseSetImpl<ValueT, MapTy, ValueInfoT>::insert(const ValueT&) [with ValueT = mlir::Block*; MapTy = llvm::SmallDenseMap<mlir::Block*, llvm::detail::DenseSetEmpty, 8, llvm::DenseMapInfo<mlir::Block*, void>, llvm::detail::DenseSetPair<mlir::Block*> >; ValueInfoT = llvm::DenseMapInfo<mlir::Block*, void>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseSet.h:208:30,
    inlined from ‘bool llvm::SetVector<T, Vector, Set>::insert(const value_type&) [with T = mlir::Block*; Vector = llvm::SmallVector<mlir::Block*, 8>; Set = llvm::SmallDenseSet<mlir::Block*, 8, llvm::DenseMapInfo<mlir::Block*, void> >]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/SetVector.h:142:30,
    inlined from ‘llvm::SmallVector<mlir::Block*, 8> mlir::iree_compiler::sortBlocksInDominanceOrder(IREE::VM::FuncOp)’ at /scratch1/akarande/moe-pim-iree/compiler/src/iree/compiler/Dialect/VM/Analysis/RegisterAllocation.cpp:187:26:
/scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:1161:18: warning: ‘*(const llvm::SmallDenseMap<mlir::Block*, llvm::detail::DenseSetEmpty, 8, llvm::DenseMapInfo<mlir::Block*, void>, llvm::detail::DenseSetPair<mlir::Block*> >::LargeRep*)((char*)&unmarkedBlocks + offsetof(llvm::SmallSetVector<mlir::Block*, 8>,llvm::SmallSetVector<mlir::Block*, 8>::<unnamed>.llvm::SetVector<mlir::Block*, llvm::SmallVector<mlir::Block*, 8>, llvm::SmallDenseSet<mlir::Block*, 8, llvm::DenseMapInfo<mlir::Block*, void> > >::set_.llvm::SmallDenseSet<mlir::Block*, 8, llvm::DenseMapInfo<mlir::Block*, void> >::<unnamed>.llvm::detail::DenseSetImpl<mlir::Block*, llvm::SmallDenseMap<mlir::Block*, llvm::detail::DenseSetEmpty, 8, llvm::DenseMapInfo<mlir::Block*, void>, llvm::detail::DenseSetPair<mlir::Block*> >, llvm::DenseMapInfo<mlir::Block*, void> >::TheMap.llvm::SmallDenseMap<mlir::Block*, llvm::detail::DenseSetEmpty, 8, llvm::DenseMapInfo<mlir::Block*, void>, llvm::detail::DenseSetPair<mlir::Block*> >::storage.llvm::AlignedCharArrayUnion<llvm::detail::DenseSetPair<mlir::Block*>[8], llvm::SmallDenseMap<mlir::Block*, llvm::detail::DenseSetEmpty, 8, llvm::DenseMapInfo<mlir::Block*, void>, llvm::detail::DenseSetPair<mlir::Block*> >::LargeRep>::buffer[0])).llvm::SmallDenseMap<mlir::Block*, llvm::detail::DenseSetEmpty, 8, llvm::DenseMapInfo<mlir::Block*, void>, llvm::detail::DenseSetPair<mlir::Block*> >::LargeRep::Buckets’ may be used uninitialized [-Wmaybe-uninitialized]
 1161 |     return Small ? getInlineBuckets() : getLargeRep()->Buckets;
      |            ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/scratch1/akarande/moe-pim-iree/compiler/src/iree/compiler/Dialect/VM/Analysis/RegisterAllocation.cpp: In function ‘llvm::SmallVector<mlir::Block*, 8> mlir::iree_compiler::sortBlocksInDominanceOrder(IREE::VM::FuncOp)’:
/scratch1/akarande/moe-pim-iree/compiler/src/iree/compiler/Dialect/VM/Analysis/RegisterAllocation.cpp:185:36: note: ‘unmarkedBlocks’ declared here
  185 |   llvm::SmallSetVector<Block *, 8> unmarkedBlocks;
      |                                    ^~~~~~~~~~~~~~
In member function ‘unsigned int llvm::SmallDenseMap<KeyT, ValueT, InlineBuckets, KeyInfoT, BucketT>::getNumBuckets() const [with KeyT = mlir::Block*; ValueT = llvm::detail::DenseSetEmpty; unsigned int InlineBuckets = 8; KeyInfoT = llvm::DenseMapInfo<mlir::Block*, void>; BucketT = llvm::detail::DenseSetPair<mlir::Block*>]’,
    inlined from ‘unsigned int llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::getNumBuckets() const [with DerivedT = llvm::SmallDenseMap<mlir::Block*, llvm::detail::DenseSetEmpty, 8, llvm::DenseMapInfo<mlir::Block*, void>, llvm::detail::DenseSetPair<mlir::Block*> >; KeyT = mlir::Block*; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<mlir::Block*, void>; BucketT = llvm::detail::DenseSetPair<mlir::Block*>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:525:62,
    inlined from ‘bool llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::LookupBucketFor(const LookupKeyT&, const BucketT*&) const [with LookupKeyT = mlir::Block*; DerivedT = llvm::SmallDenseMap<mlir::Block*, llvm::detail::DenseSetEmpty, 8, llvm::DenseMapInfo<mlir::Block*, void>, llvm::detail::DenseSetPair<mlir::Block*> >; KeyT = mlir::Block*; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<mlir::Block*, void>; BucketT = llvm::detail::DenseSetPair<mlir::Block*>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:611:46,
    inlined from ‘bool llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::LookupBucketFor(const LookupKeyT&, BucketT*&) [with LookupKeyT = mlir::Block*; DerivedT = llvm::SmallDenseMap<mlir::Block*, llvm::detail::DenseSetEmpty, 8, llvm::DenseMapInfo<mlir::Block*, void>, llvm::detail::DenseSetPair<mlir::Block*> >; KeyT = mlir::Block*; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<mlir::Block*, void>; BucketT = llvm::detail::DenseSetPair<mlir::Block*>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:662:24,
    inlined from ‘void llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::moveFromOldBuckets(BucketT*, BucketT*) [with DerivedT = llvm::SmallDenseMap<mlir::Block*, llvm::detail::DenseSetEmpty, 8, llvm::DenseMapInfo<mlir::Block*, void>, llvm::detail::DenseSetPair<mlir::Block*> >; KeyT = mlir::Block*; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<mlir::Block*, void>; BucketT = llvm::detail::DenseSetPair<mlir::Block*>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:406:40,
    inlined from ‘void llvm::SmallDenseMap<KeyT, ValueT, InlineBuckets, KeyInfoT, BucketT>::grow(unsigned int) [with KeyT = mlir::Block*; ValueT = llvm::detail::DenseSetEmpty; unsigned int InlineBuckets = 8; KeyInfoT = llvm::DenseMapInfo<mlir::Block*, void>; BucketT = llvm::detail::DenseSetPair<mlir::Block*>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:1077:31,
    inlined from ‘void llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::grow(unsigned int) [with DerivedT = llvm::SmallDenseMap<mlir::Block*, llvm::detail::DenseSetEmpty, 8, llvm::DenseMapInfo<mlir::Block*, void>, llvm::detail::DenseSetPair<mlir::Block*> >; KeyT = mlir::Block*; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<mlir::Block*, void>; BucketT = llvm::detail::DenseSetPair<mlir::Block*>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:537:40,
    inlined from ‘BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = mlir::Block*; DerivedT = llvm::SmallDenseMap<mlir::Block*, llvm::detail::DenseSetEmpty, 8, llvm::DenseMapInfo<mlir::Block*, void>, llvm::detail::DenseSetPair<mlir::Block*> >; KeyT = mlir::Block*; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<mlir::Block*, void>; BucketT = llvm::detail::DenseSetPair<mlir::Block*>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:586:17,
    inlined from ‘BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = mlir::Block* const&; ValueArgs = {llvm::detail::DenseSetEmpty&}; DerivedT = llvm::SmallDenseMap<mlir::Block*, llvm::detail::DenseSetEmpty, 8, llvm::DenseMapInfo<mlir::Block*, void>, llvm::detail::DenseSetPair<mlir::Block*> >; KeyT = mlir::Block*; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<mlir::Block*, void>; BucketT = llvm::detail::DenseSetPair<mlir::Block*>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:37,
    inlined from ‘std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::try_emplace(const KeyT&, Ts&& ...) [with Ts = {llvm::detail::DenseSetEmpty&}; DerivedT = llvm::SmallDenseMap<mlir::Block*, llvm::detail::DenseSetEmpty, 8, llvm::DenseMapInfo<mlir::Block*, void>, llvm::detail::DenseSetPair<mlir::Block*> >; KeyT = mlir::Block*; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<mlir::Block*, void>; BucketT = llvm::detail::DenseSetPair<mlir::Block*>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:258:33,
    inlined from ‘std::pair<llvm::detail::DenseSetImpl<ValueT, MapTy, ValueInfoT>::Iterator, bool> llvm::detail::DenseSetImpl<ValueT, MapTy, ValueInfoT>::insert(const ValueT&) [with ValueT = mlir::Block*; MapTy = llvm::SmallDenseMap<mlir::Block*, llvm::detail::DenseSetEmpty, 8, llvm::DenseMapInfo<mlir::Block*, void>, llvm::detail::DenseSetPair<mlir::Block*> >; ValueInfoT = llvm::DenseMapInfo<mlir::Block*, void>]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseSet.h:208:30,
    inlined from ‘bool llvm::SetVector<T, Vector, Set>::insert(const value_type&) [with T = mlir::Block*; Vector = llvm::SmallVector<mlir::Block*, 8>; Set = llvm::SmallDenseSet<mlir::Block*, 8, llvm::DenseMapInfo<mlir::Block*, void> >]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/SetVector.h:142:30,
    inlined from ‘llvm::SmallVector<mlir::Block*, 8> mlir::iree_compiler::sortBlocksInDominanceOrder(IREE::VM::FuncOp)’ at /scratch1/akarande/moe-pim-iree/compiler/src/iree/compiler/Dialect/VM/Analysis/RegisterAllocation.cpp:187:26:
/scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/ADT/DenseMap.h:1170:18: warning: ‘*(const llvm::SmallDenseMap<mlir::Block*, llvm::detail::DenseSetEmpty, 8, llvm::DenseMapInfo<mlir::Block*, void>, llvm::detail::DenseSetPair<mlir::Block*> >::LargeRep*)((char*)&unmarkedBlocks + offsetof(llvm::SmallSetVector<mlir::Block*, 8>,llvm::SmallSetVector<mlir::Block*, 8>::<unnamed>.llvm::SetVector<mlir::Block*, llvm::SmallVector<mlir::Block*, 8>, llvm::SmallDenseSet<mlir::Block*, 8, llvm::DenseMapInfo<mlir::Block*, void> > >::set_.llvm::SmallDenseSet<mlir::Block*, 8, llvm::DenseMapInfo<mlir::Block*, void> >::<unnamed>.llvm::detail::DenseSetImpl<mlir::Block*, llvm::SmallDenseMap<mlir::Block*, llvm::detail::DenseSetEmpty, 8, llvm::DenseMapInfo<mlir::Block*, void>, llvm::detail::DenseSetPair<mlir::Block*> >, llvm::DenseMapInfo<mlir::Block*, void> >::TheMap.llvm::SmallDenseMap<mlir::Block*, llvm::detail::DenseSetEmpty, 8, llvm::DenseMapInfo<mlir::Block*, void>, llvm::detail::DenseSetPair<mlir::Block*> >::storage.llvm::AlignedCharArrayUnion<llvm::detail::DenseSetPair<mlir::Block*>[8], llvm::SmallDenseMap<mlir::Block*, llvm::detail::DenseSetEmpty, 8, llvm::DenseMapInfo<mlir::Block*, void>, llvm::detail::DenseSetPair<mlir::Block*> >::LargeRep>::buffer[0])).llvm::SmallDenseMap<mlir::Block*, llvm::detail::DenseSetEmpty, 8, llvm::DenseMapInfo<mlir::Block*, void>, llvm::detail::DenseSetPair<mlir::Block*> >::LargeRep::NumBuckets’ may be used uninitialized [-Wmaybe-uninitialized]
 1170 |     return Small ? InlineBuckets : getLargeRep()->NumBuckets;
      |            ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/scratch1/akarande/moe-pim-iree/compiler/src/iree/compiler/Dialect/VM/Analysis/RegisterAllocation.cpp: In function ‘llvm::SmallVector<mlir::Block*, 8> mlir::iree_compiler::sortBlocksInDominanceOrder(IREE::VM::FuncOp)’:
/scratch1/akarande/moe-pim-iree/compiler/src/iree/compiler/Dialect/VM/Analysis/RegisterAllocation.cpp:185:36: note: ‘unmarkedBlocks’ declared here
  185 |   llvm::SmallSetVector<Block *, 8> unmarkedBlocks;
      |                                    ^~~~~~~~~~~~~~
[744/1615] Building CXX object compiler/src/iree/...Analysis_Analysis.objects.dir/ValueLiveness.cpp.
In file included from /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/Support/FormatVariadic.h:34,
                 from /scratch1/akarande/moe-pim-iree/compiler/src/iree/compiler/Dialect/VM/Analysis/ValueLiveness.cpp:16:
In static member function ‘static size_t llvm::detail::HelperFunctions::consumeNumHexDigits(llvm::StringRef&, llvm::HexPrintStyle, size_t)’,
    inlined from ‘static void llvm::format_provider<T, typename std::enable_if<llvm::detail::use_integral_formatter<T>::value, void>::type>::format(const T&, llvm::raw_ostream&, llvm::StringRef) [with T = int]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/Support/FormatProviders.h:135:35,
    inlined from ‘void llvm::detail::provider_format_adapter<T>::format(llvm::raw_ostream&, llvm::StringRef) [with T = int&]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/Support/FormatVariadicDetails.h:40:45:
/scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/Support/FormatProviders.h:95:27: warning: ‘HS’ may be used uninitialized [-Wmaybe-uninitialized]
   95 |     if (isPrefixedHexStyle(Style))
      |         ~~~~~~~~~~~~~~~~~~^~~~~~~
/scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/Support/FormatProviders.h: In member function ‘void llvm::detail::provider_format_adapter<T>::format(llvm::raw_ostream&, llvm::StringRef) [with T = int&]’:
/scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/Support/FormatProviders.h:132:19: note: ‘HS’ was declared here
  132 |     HexPrintStyle HS;
      |                   ^~
In static member function ‘static size_t llvm::detail::HelperFunctions::consumeNumHexDigits(llvm::StringRef&, llvm::HexPrintStyle, size_t)’,
    inlined from ‘static void llvm::format_provider<T, typename std::enable_if<llvm::detail::use_integral_formatter<T>::value, void>::type>::format(const T&, llvm::raw_ostream&, llvm::StringRef) [with T = unsigned int]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/Support/FormatProviders.h:135:35,
    inlined from ‘void llvm::detail::provider_format_adapter<T>::format(llvm::raw_ostream&, llvm::StringRef) [with T = unsigned int]’ at /scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/Support/FormatVariadicDetails.h:40:45:
/scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/Support/FormatProviders.h:95:27: warning: ‘HS’ may be used uninitialized [-Wmaybe-uninitialized]
   95 |     if (isPrefixedHexStyle(Style))
      |         ~~~~~~~~~~~~~~~~~~^~~~~~~
/scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/Support/FormatProviders.h: In member function ‘void llvm::detail::provider_format_adapter<T>::format(llvm::raw_ostream&, llvm::StringRef) [with T = unsigned int]’:
/scratch1/akarande/moe-pim-iree/third_party/llvm-project/llvm/include/llvm/Support/FormatProviders.h:132:19: note: ‘HS’ was declared here
  132 |     HexPrintStyle HS;
      |                   ^~
[759/1615] Building CXX object compiler/src/iree/...mpiler_Dialect_VM_IR_IR.objects.dir/VMTypes.cpp.
In file included from /scratch1/akarande/moe-pim-iree/compiler/src/iree/compiler/Dialect/VM/IR/VMTypes.cpp:13:
/scratch1/akarande/moe-pim-iree/third_party/llvm-project/mlir/include/mlir/IR/DialectImplementation.h: In static member function ‘static mlir::FailureOr<T> mlir::FieldParser<IntT, typename std::enable_if<std::is_integral<_Tp>::value, IntT>::type>::parse(mlir::AsmParser&) [with IntT = int]’:
/scratch1/akarande/moe-pim-iree/third_party/llvm-project/mlir/include/mlir/IR/DialectImplementation.h:93:12: warning: ‘value’ may be used uninitialized [-Wmaybe-uninitialized]
   93 |     return value;
      |            ^~~~~
/scratch1/akarande/moe-pim-iree/third_party/llvm-project/mlir/include/mlir/IR/DialectImplementation.h:90:10: note: ‘value’ was declared here
   90 |     IntT value;
      |          ^~~~~
[998/1615] Building C object runtime/src/iree/hal...al_drivers_cuda_cuda.objects.dir/nccl_channel.c.
In file included from /scratch1/akarande/moe-pim-iree/runtime/src/iree/base/allocator.h:17,
                 from /scratch1/akarande/moe-pim-iree/runtime/src/iree/base/api.h:82,
                 from /scratch1/akarande/moe-pim-iree/runtime/src/iree/hal/drivers/cuda/nccl_channel.h:10,
                 from /scratch1/akarande/moe-pim-iree/runtime/src/iree/hal/drivers/cuda/nccl_channel.c:7:
In function ‘iree_hal_cuda_nccl_submit_batch_entry’,
    inlined from ‘iree_hal_cuda_nccl_submit_batch’ at /scratch1/akarande/moe-pim-iree/runtime/src/iree/hal/drivers/cuda/nccl_channel.c:395:5:
/scratch1/akarande/moe-pim-iree/runtime/src/iree/hal/drivers/cuda/nccl_channel.c:356:7: warning: ‘datatype’ may be used uninitialized [-Wmaybe-uninitialized]
  356 |       NCCL_RETURN_IF_ERROR(syms,
      |       ^
/scratch1/akarande/moe-pim-iree/runtime/src/iree/hal/drivers/cuda/nccl_channel.c: In function ‘iree_hal_cuda_nccl_submit_batch’:
/scratch1/akarande/moe-pim-iree/runtime/src/iree/hal/drivers/cuda/nccl_channel.c:233:18: note: ‘datatype’ was declared here
  233 |   ncclDataType_t datatype;
      |                  ^~~~~~~~
In function ‘iree_hal_cuda_nccl_submit_batch_entry’,
    inlined from ‘iree_hal_cuda_nccl_submit_batch’ at /scratch1/akarande/moe-pim-iree/runtime/src/iree/hal/drivers/cuda/nccl_channel.c:395:5:
/scratch1/akarande/moe-pim-iree/runtime/src/iree/hal/drivers/cuda/nccl_channel.c:330:7: warning: ‘redop’ may be used uninitialized [-Wmaybe-uninitialized]
  330 |       NCCL_RETURN_IF_ERROR(
      |       ^
/scratch1/akarande/moe-pim-iree/runtime/src/iree/hal/drivers/cuda/nccl_channel.c: In function ‘iree_hal_cuda_nccl_submit_batch’:
/scratch1/akarande/moe-pim-iree/runtime/src/iree/hal/drivers/cuda/nccl_channel.c:327:19: note: ‘redop’ was declared here
  327 |       ncclRedOp_t redop;
      |                   ^~~~~
In function ‘iree_hal_cuda_nccl_submit_batch_entry’,
    inlined from ‘iree_hal_cuda_nccl_submit_batch’ at /scratch1/akarande/moe-pim-iree/runtime/src/iree/hal/drivers/cuda/nccl_channel.c:395:5:
/scratch1/akarande/moe-pim-iree/runtime/src/iree/hal/drivers/cuda/nccl_channel.c:309:7: warning: ‘redop’ may be used uninitialized [-Wmaybe-uninitialized]
  309 |       NCCL_RETURN_IF_ERROR(syms,
      |       ^
/scratch1/akarande/moe-pim-iree/runtime/src/iree/hal/drivers/cuda/nccl_channel.c: In function ‘iree_hal_cuda_nccl_submit_batch’:
/scratch1/akarande/moe-pim-iree/runtime/src/iree/hal/drivers/cuda/nccl_channel.c:306:19: note: ‘redop’ was declared here
  306 |       ncclRedOp_t redop;
      |                   ^~~~~
In function ‘iree_hal_cuda_nccl_submit_batch_entry’,
    inlined from ‘iree_hal_cuda_nccl_submit_batch’ at /scratch1/akarande/moe-pim-iree/runtime/src/iree/hal/drivers/cuda/nccl_channel.c:395:5:
/scratch1/akarande/moe-pim-iree/runtime/src/iree/hal/drivers/cuda/nccl_channel.c:270:7: warning: ‘redop’ may be used uninitialized [-Wmaybe-uninitialized]
  270 |       NCCL_RETURN_IF_ERROR(
      |       ^
/scratch1/akarande/moe-pim-iree/runtime/src/iree/hal/drivers/cuda/nccl_channel.c: In function ‘iree_hal_cuda_nccl_submit_batch’:
/scratch1/akarande/moe-pim-iree/runtime/src/iree/hal/drivers/cuda/nccl_channel.c:267:19: note: ‘redop’ was declared here
  267 |       ncclRedOp_t redop;
      |                   ^~~~~
[1086/1615] Building C object runtime/src/iree/ta...MakeFiles/iree_task_task.objects.dir/topology.c.
/scratch1/akarande/moe-pim-iree/runtime/src/iree/task/topology.c: In function ‘iree_task_topology_group_initialize’:
/scratch1/akarande/moe-pim-iree/runtime/src/iree/task/topology.c:20:77: warning: ‘snprintf’ output may be truncated before the last format character [-Wformat-truncation=]
   20 |   snprintf(out_group->name, IREE_ARRAYSIZE(out_group->name), "iree-worker-%u",
      |                                                                             ^
/scratch1/akarande/moe-pim-iree/runtime/src/iree/task/topology.c:20:3: note: ‘snprintf’ output between 14 and 16 bytes into a destination of size 15
   20 |   snprintf(out_group->name, IREE_ARRAYSIZE(out_group->name), "iree-worker-%u",
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   21 |            group_index);
      |            ~~~~~~~~~~~~
/scratch1/akarande/moe-pim-iree/runtime/src/iree/task/topology.c: In function ‘iree_task_topology_initialize_from_group_count’:
/scratch1/akarande/moe-pim-iree/runtime/src/iree/task/topology.c:20:77: warning: ‘snprintf’ output may be truncated before the last format character [-Wformat-truncation=]
   20 |   snprintf(out_group->name, IREE_ARRAYSIZE(out_group->name), "iree-worker-%u",
      |                                                                             ^
In function ‘iree_task_topology_group_initialize’,
    inlined from ‘iree_task_topology_initialize_from_group_count’ at /scratch1/akarande/moe-pim-iree/runtime/src/iree/task/topology.c:89:5:
/scratch1/akarande/moe-pim-iree/runtime/src/iree/task/topology.c:20:3: note: ‘snprintf’ output between 14 and 16 bytes into a destination of size 15
   20 |   snprintf(out_group->name, IREE_ARRAYSIZE(out_group->name), "iree-worker-%u",
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   21 |            group_index);
      |            ~~~~~~~~~~~~
[1094/1615] Building CXX object runtime/src/iree/...es/iree_task_executor_demo.dir/executor_demo.cc.
/scratch1/akarande/moe-pim-iree/runtime/src/iree/task/executor_demo.cc:41:16: warning: second argument of ‘int {anonymous}::main(int, char*)’ should be ‘char **’ [-Wmain]
   41 | extern "C" int main(int argc, char* argv) {
      |                ^~~~
[1103/1615] Building CXX object runtime/src/iree/...akeFiles/iree_task_scope_test.dir/scope_test.cc.
/scratch1/akarande/moe-pim-iree/runtime/src/iree/task/scope_test.cc: In member function ‘virtual void {anonymous}::ScopeTest_FailEmpty_Test::TestBody()’:
/scratch1/akarande/moe-pim-iree/runtime/src/iree/task/scope_test.cc:65:15: warning: variable ‘failed_task’ set but not used [-Wunused-but-set-variable]
   65 |   iree_task_t failed_task = {0};
      |               ^~~~~~~~~~~
/scratch1/akarande/moe-pim-iree/runtime/src/iree/task/scope_test.cc: In member function ‘virtual void {anonymous}::ScopeTest_FailAgain_Test::TestBody()’:
/scratch1/akarande/moe-pim-iree/runtime/src/iree/task/scope_test.cc:90:15: warning: variable ‘failed_task_a’ set but not used [-Wunused-but-set-variable]
   90 |   iree_task_t failed_task_a = {0};
      |               ^~~~~~~~~~~~~
/scratch1/akarande/moe-pim-iree/runtime/src/iree/task/scope_test.cc:102:15: warning: variable ‘failed_task_b’ set but not used [-Wunused-but-set-variable]
  102 |   iree_task_t failed_task_b = {0};
      |               ^~~~~~~~~~~~~
[1193/1615] Building C object runtime/src/iree/vm/CMakeFiles/iree_vm_impl.objects.dir/buffer.c.o
/scratch1/akarande/moe-pim-iree/runtime/src/iree/vm/buffer.c: In function ‘iree_vm_buffer_clone’:
/scratch1/akarande/moe-pim-iree/runtime/src/iree/vm/buffer.c:171:3: warning: ‘*(uint8_t **)((char *)&source_span + offsetof(iree_const_byte_span_t, data))’ may be used uninitialized [-Wmaybe-uninitialized]
  171 |   memcpy(target_span.data, source_span.data, target_span.data_length);
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/scratch1/akarande/moe-pim-iree/runtime/src/iree/vm/buffer.c:144:26: note: ‘*(uint8_t **)((char *)&source_span + offsetof(iree_const_byte_span_t, data))’ was declared here
  144 |   iree_const_byte_span_t source_span;
      |                          ^~~~~~~~~~~
/scratch1/akarande/moe-pim-iree/runtime/src/iree/vm/buffer.c:153:20: warning: ‘source_span.data_length’ may be used uninitialized [-Wmaybe-uninitialized]
  153 |   iree_host_size_t total_size = prefix_size + source_span.data_length;
      |                    ^~~~~~~~~~
/scratch1/akarande/moe-pim-iree/runtime/src/iree/vm/buffer.c:144:26: note: ‘source_span.data_length’ was declared here
  144 |   iree_const_byte_span_t source_span;
      |                          ^~~~~~~~~~~
/scratch1/akarande/moe-pim-iree/runtime/src/iree/vm/buffer.c: In function ‘iree_vm_buffer_copy_bytes’:
/scratch1/akarande/moe-pim-iree/runtime/src/iree/vm/buffer.c:196:3: warning: ‘*(uint8_t **)((char *)&source_span + offsetof(iree_const_byte_span_t, data))’ may be used uninitialized [-Wmaybe-uninitialized]
  196 |   memcpy(target_span.data, source_span.data, length);
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/scratch1/akarande/moe-pim-iree/runtime/src/iree/vm/buffer.c:190:26: note: ‘*(uint8_t **)((char *)&source_span + offsetof(iree_const_byte_span_t, data))’ was declared here
  190 |   iree_const_byte_span_t source_span;
      |                          ^~~~~~~~~~~
/scratch1/akarande/moe-pim-iree/runtime/src/iree/vm/buffer.c:196:3: warning: ‘target_span.data’ may be used uninitialized [-Wmaybe-uninitialized]
  196 |   memcpy(target_span.data, source_span.data, length);
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/scratch1/akarande/moe-pim-iree/runtime/src/iree/vm/buffer.c:193:20: note: ‘target_span.data’ was declared here
  193 |   iree_byte_span_t target_span;
      |                    ^~~~~~~~~~~
/scratch1/akarande/moe-pim-iree/runtime/src/iree/vm/buffer.c: In function ‘iree_vm_buffer_compare_bytes’:
/scratch1/akarande/moe-pim-iree/runtime/src/iree/vm/buffer.c:212:17: warning: ‘*(uint8_t **)((char *)&lhs_span + offsetof(iree_const_byte_span_t, data))’ may be used uninitialized [-Wmaybe-uninitialized]
  212 |   *out_result = memcmp(lhs_span.data, rhs_span.data, length) == 0;
      |                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/scratch1/akarande/moe-pim-iree/runtime/src/iree/vm/buffer.c:206:26: note: ‘*(uint8_t **)((char *)&lhs_span + offsetof(iree_const_byte_span_t, data))’ was declared here
  206 |   iree_const_byte_span_t lhs_span;
      |                          ^~~~~~~~
/scratch1/akarande/moe-pim-iree/runtime/src/iree/vm/buffer.c:212:17: warning: ‘*(uint8_t **)((char *)&rhs_span + offsetof(iree_const_byte_span_t, data))’ may be used uninitialized [-Wmaybe-uninitialized]
  212 |   *out_result = memcmp(lhs_span.data, rhs_span.data, length) == 0;
      |                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/scratch1/akarande/moe-pim-iree/runtime/src/iree/vm/buffer.c:209:26: note: ‘*(uint8_t **)((char *)&rhs_span + offsetof(iree_const_byte_span_t, data))’ was declared here
  209 |   iree_const_byte_span_t rhs_span;
      |                          ^~~~~~~~
In function ‘iree_vm_buffer_fill_elements’,
    inlined from ‘iree_vm_buffer_fill_bytes’ at /scratch1/akarande/moe-pim-iree/runtime/src/iree/vm/buffer.c:219:10:
/scratch1/akarande/moe-pim-iree/runtime/src/iree/vm/buffer.c:235:7: warning: ‘span.data’ may be used uninitialized [-Wmaybe-uninitialized]
  235 |       memset(span.data, pattern_value, span.data_length);
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/scratch1/akarande/moe-pim-iree/runtime/src/iree/vm/buffer.c: In function ‘iree_vm_buffer_fill_bytes’:
/scratch1/akarande/moe-pim-iree/runtime/src/iree/vm/buffer.c:228:20: note: ‘span.data’ was declared here
  228 |   iree_byte_span_t span;
      |                    ^~~~
In function ‘iree_vm_buffer_fill_elements’,
    inlined from ‘iree_vm_buffer_fill_bytes’ at /scratch1/akarande/moe-pim-iree/runtime/src/iree/vm/buffer.c:219:10:
/scratch1/akarande/moe-pim-iree/runtime/src/iree/vm/buffer.c:235:7: warning: ‘span.data_length’ may be used uninitialized [-Wmaybe-uninitialized]
  235 |       memset(span.data, pattern_value, span.data_length);
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/scratch1/akarande/moe-pim-iree/runtime/src/iree/vm/buffer.c: In function ‘iree_vm_buffer_fill_bytes’:
/scratch1/akarande/moe-pim-iree/runtime/src/iree/vm/buffer.c:228:20: note: ‘span.data_length’ was declared here
  228 |   iree_byte_span_t span;
      |                    ^~~~
/scratch1/akarande/moe-pim-iree/runtime/src/iree/vm/buffer.c: In function ‘iree_vm_buffer_fill_elements’:
/scratch1/akarande/moe-pim-iree/runtime/src/iree/vm/buffer.c:228:20: warning: ‘span.data’ may be used uninitialized [-Wmaybe-uninitialized]
/scratch1/akarande/moe-pim-iree/runtime/src/iree/vm/buffer.c:235:7: warning: ‘span.data_length’ may be used uninitialized [-Wmaybe-uninitialized]
  235 |       memset(span.data, pattern_value, span.data_length);
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/scratch1/akarande/moe-pim-iree/runtime/src/iree/vm/buffer.c:228:20: note: ‘span.data_length’ was declared here
  228 |   iree_byte_span_t span;
      |                    ^~~~
/scratch1/akarande/moe-pim-iree/runtime/src/iree/vm/buffer.c: In function ‘iree_vm_buffer_read_elements’:
/scratch1/akarande/moe-pim-iree/runtime/src/iree/vm/buffer.c:276:3: warning: ‘*(uint8_t **)((char *)&source_span + offsetof(iree_const_byte_span_t, data))’ may be used uninitialized [-Wmaybe-uninitialized]
  276 |   memcpy(target_ptr, source_span.data, source_span.data_length);
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/scratch1/akarande/moe-pim-iree/runtime/src/iree/vm/buffer.c:272:26: note: ‘*(uint8_t **)((char *)&source_span + offsetof(iree_const_byte_span_t, data))’ was declared here
  272 |   iree_const_byte_span_t source_span;
      |                          ^~~~~~~~~~~
/scratch1/akarande/moe-pim-iree/runtime/src/iree/vm/buffer.c:276:3: warning: ‘source_span.data_length’ may be used uninitialized [-Wmaybe-uninitialized]
  276 |   memcpy(target_ptr, source_span.data, source_span.data_length);
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/scratch1/akarande/moe-pim-iree/runtime/src/iree/vm/buffer.c:272:26: note: ‘source_span.data_length’ was declared here
  272 |   iree_const_byte_span_t source_span;
      |                          ^~~~~~~~~~~
/scratch1/akarande/moe-pim-iree/runtime/src/iree/vm/buffer.c: In function ‘iree_vm_buffer_write_elements’:
/scratch1/akarande/moe-pim-iree/runtime/src/iree/vm/buffer.c:290:3: warning: ‘target_span.data’ may be used uninitialized [-Wmaybe-uninitialized]
  290 |   memcpy(target_span.data, source_ptr, target_span.data_length);
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/scratch1/akarande/moe-pim-iree/runtime/src/iree/vm/buffer.c:286:20: note: ‘target_span.data’ was declared here
  286 |   iree_byte_span_t target_span;
      |                    ^~~~~~~~~~~
/scratch1/akarande/moe-pim-iree/runtime/src/iree/vm/buffer.c:290:3: warning: ‘target_span.data_length’ may be used uninitialized [-Wmaybe-uninitialized]
  290 |   memcpy(target_span.data, source_ptr, target_span.data_length);
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/scratch1/akarande/moe-pim-iree/runtime/src/iree/vm/buffer.c:286:20: note: ‘target_span.data_length’ was declared here
  286 |   iree_byte_span_t target_span;
      |                    ^~~~~~~~~~~
[1194/1615] Building C object runtime/src/iree/to...tooling_trace_replay.objects.dir/trace_replay.c.
In function ‘iree_trace_replay_generate_fully_specified_pseudorandom_buffer’,
    inlined from ‘iree_trace_replay_generate_hal_buffer’ at /scratch1/akarande/moe-pim-iree/runtime/src/iree/tooling/trace_replay.c:674:7,
    inlined from ‘iree_trace_replay_generate_hal_buffer_callback’ at /scratch1/akarande/moe-pim-iree/runtime/src/iree/tooling/trace_replay.c:709:12,
    inlined from ‘iree_trace_replay_generate_hal_buffer_callback’ at /scratch1/akarande/moe-pim-iree/runtime/src/iree/tooling/trace_replay.c:700:22:
/scratch1/akarande/moe-pim-iree/runtime/src/iree/tooling/trace_replay.c:644:22: warning: ‘max’ may be used uninitialized [-Wmaybe-uninitialized]
  644 |   range = (max - min + 1);
      |           ~~~~~~~~~~~^~~~
/scratch1/akarande/moe-pim-iree/runtime/src/iree/tooling/trace_replay.c: In function ‘iree_trace_replay_generate_hal_buffer_callback’:
/scratch1/akarande/moe-pim-iree/runtime/src/iree/tooling/trace_replay.c:642:16: note: ‘max’ was declared here
  642 |   int32_t min, max;
      |                ^~~
In function ‘iree_trace_replay_generate_fully_specified_pseudorandom_buffer’,
    inlined from ‘iree_trace_replay_generate_hal_buffer’ at /scratch1/akarande/moe-pim-iree/runtime/src/iree/tooling/trace_replay.c:674:7,
    inlined from ‘iree_trace_replay_generate_hal_buffer_callback’ at /scratch1/akarande/moe-pim-iree/runtime/src/iree/tooling/trace_replay.c:709:12,
    inlined from ‘iree_trace_replay_generate_hal_buffer_callback’ at /scratch1/akarande/moe-pim-iree/runtime/src/iree/tooling/trace_replay.c:700:22:
/scratch1/akarande/moe-pim-iree/runtime/src/iree/tooling/trace_replay.c:644:16: warning: ‘min’ may be used uninitialized [-Wmaybe-uninitialized]
  644 |   range = (max - min + 1);
      |            ~~~~^~~~~
/scratch1/akarande/moe-pim-iree/runtime/src/iree/tooling/trace_replay.c: In function ‘iree_trace_replay_generate_hal_buffer_callback’:
/scratch1/akarande/moe-pim-iree/runtime/src/iree/tooling/trace_replay.c:642:11: note: ‘min’ was declared here
  642 |   int32_t min, max;
      |           ^~~
[1324/1615] Generating cuda_command_buffer_push_c....bin from command_buffer_push_constants_test.mli
LLVMGPULowerExecutableTargetPass::runOnOperation
module {
  func.func @write_push_constants() {
    %c3 = arith.constant 3 : index
    %c2 = arith.constant 2 : index
    %c1 = arith.constant 1 : index
    %c0 = arith.constant 0 : index
    %0 = hal.interface.constant.load[0] : i32
    %1 = hal.interface.constant.load[1] : i32
    %2 = hal.interface.constant.load[2] : i32
    %3 = hal.interface.constant.load[3] : i32
    %4 = hal.interface.binding.subspan set(0) binding(0) type(storage_buffer) : memref<4xi32>
    memref.store %0, %4[%c0] : memref<4xi32>
    memref.store %1, %4[%c1] : memref<4xi32>
    memref.store %2, %4[%c2] : memref<4xi32>
    memref.store %3, %4[%c3] : memref<4xi32>
    return
  }
}
module {
  func.func @write_push_constants() {
    %c3 = arith.constant 3 : index
    %c2 = arith.constant 2 : index
    %c1 = arith.constant 1 : index
    %c0 = arith.constant 0 : index
    %0 = hal.interface.constant.load[0] : i32
    %1 = hal.interface.constant.load[1] : i32
    %2 = hal.interface.constant.load[2] : i32
    %3 = hal.interface.constant.load[3] : i32
    %4 = hal.interface.binding.subspan set(0) binding(0) type(storage_buffer) : memref<4xi32>
    memref.store %0, %4[%c0] : memref<4xi32>
    memref.store %1, %4[%c1] : memref<4xi32>
    memref.store %2, %4[%c2] : memref<4xi32>
    memref.store %3, %4[%c3] : memref<4xi32>
    return
  }
}
[1325/1615] Generating cuda_command_buffer_dispatch_test.bin from command_buffer_dispatch_test.mlir
%4 = linalg.generic {indexing_maps = [affine_map<() -> ()>, affine_map<() -> ()>], iterator_types = []} ins(%2 : tensor<f32>) outs(%3 : tensor<f32>) attrs =  {lowering_config = #iree_codegen.lowering_config<tile_sizes = [[]]>} {
^bb0(%in: f32, %out: f32):
  %5 = math.absf %in : f32
  linalg.yield %5 : f32
} -> tensor<f32>
LLVMGPULowerExecutableTargetPass::runOnOperation
module {
  func.func @abs() {
    %c0 = arith.constant 0 : index
    %0 = hal.interface.binding.subspan set(0) binding(0) type(storage_buffer) alignment(32) offset(%c0) : !flow.dispatch.tensor<readonly:f32>
    %1 = hal.interface.binding.subspan set(0) binding(1) type(storage_buffer) alignment(32) offset(%c0) : !flow.dispatch.tensor<writeonly:f32>
    %2 = flow.dispatch.tensor.load %0, offsets = [], sizes = [], strides = [] : !flow.dispatch.tensor<readonly:f32> -> tensor<f32>
    %3 = tensor.empty() : tensor<f32>
    %4 = linalg.generic {indexing_maps = [affine_map<() -> ()>, affine_map<() -> ()>], iterator_types = []} ins(%2 : tensor<f32>) outs(%3 : tensor<f32>) {
    ^bb0(%in: f32, %out: f32):
      %5 = math.absf %in : f32
      linalg.yield %5 : f32
    } -> tensor<f32>
    flow.dispatch.tensor.store %4, %1, offsets = [], sizes = [], strides = [] : tensor<f32> -> !flow.dispatch.tensor<writeonly:f32>
    return
  }
}
Root operation: %4 = linalg.generic {indexing_maps = [affine_map<() -> ()>, affine_map<() -> ()>], iterator_types = []} ins(%2 : tensor<f32>) outs(%3 : tensor<f32>) {
^bb0(%in: f32, %out: f32):
  %5 = math.absf %in : f32
  linalg.yield %5 : f32
} -> tensor<f32>
setRootConfig
setRootDefaultConfig
Root operation(setRootConfig): %4 = linalg.generic {indexing_maps = [affine_map<() -> ()>, affine_map<() -> ()>], iterator_types = []} ins(%2 : tensor<f32>) outs(%3 : tensor<f32>) attrs =  {lowering_config = #iree_codegen.lowering_config<tile_sizes = [[]]>} {
^bb0(%in: f32, %out: f32):
  %5 = math.absf %in : f32
  linalg.yield %5 : f32
} -> tensor<f32>
module {
  func.func @abs() {
    %c0 = arith.constant 0 : index
    %0 = hal.interface.binding.subspan set(0) binding(0) type(storage_buffer) alignment(32) offset(%c0) : !flow.dispatch.tensor<readonly:f32>
    %1 = hal.interface.binding.subspan set(0) binding(1) type(storage_buffer) alignment(32) offset(%c0) : !flow.dispatch.tensor<writeonly:f32>
    %2 = flow.dispatch.tensor.load %0, offsets = [], sizes = [], strides = [] : !flow.dispatch.tensor<readonly:f32> -> tensor<f32>
    %3 = tensor.empty() : tensor<f32>
    %4 = linalg.generic {indexing_maps = [affine_map<() -> ()>, affine_map<() -> ()>], iterator_types = []} ins(%2 : tensor<f32>) outs(%3 : tensor<f32>) attrs =  {lowering_config = #iree_codegen.lowering_config<tile_sizes = [[]]>} {
    ^bb0(%in: f32, %out: f32):
      %5 = math.absf %in : f32
      linalg.yield %5 : f32
    } -> tensor<f32>
    flow.dispatch.tensor.store %4, %1, offsets = [], sizes = [], strides = [] : tensor<f32> -> !flow.dispatch.tensor<writeonly:f32>
    return
  }
}
Print computeOps: 
Print tiledLoops: 
Tile Sizes:

Static Loop Ranges:

Interchange:

Partitionable Loops:

Dispatch Root Op:
%4 = linalg.generic {indexing_maps = [affine_map<() -> ()>, affine_map<() -> ()>], iterator_types = []} ins(%2 : tensor<f32>) outs(%3 : tensor<f32>) attrs =  {lowering_config = #iree_codegen.lowering_config<tile_sizes = [[]]>} {
^bb0(%in: f32, %out: f32):
  %5 = math.absf %in : f32
  linalg.yield %5 : f32
} -> tensor<f32>
[1326/1615] Generating cuda_executable_cache_test.bin from executable_cache_test.mlir
%4 = linalg.generic {indexing_maps = [affine_map<() -> ()>, affine_map<() -> ()>], iterator_types = []} ins(%2 : tensor<f32>) outs(%3 : tensor<f32>) attrs =  {lowering_config = #iree_codegen.lowering_config<tile_sizes = [[]]>} {
^bb0(%in: f32, %out: f32):
  %5 = math.absf %in : f32
  linalg.yield %5 : f32
} -> tensor<f32>
LLVMGPULowerExecutableTargetPass::runOnOperation
module {
  func.func @abs() {
    %c0 = arith.constant 0 : index
    %0 = hal.interface.binding.subspan set(0) binding(0) type(storage_buffer) alignment(32) offset(%c0) : !flow.dispatch.tensor<readonly:f32>
    %1 = hal.interface.binding.subspan set(0) binding(1) type(storage_buffer) alignment(32) offset(%c0) : !flow.dispatch.tensor<writeonly:f32>
    %2 = flow.dispatch.tensor.load %0, offsets = [], sizes = [], strides = [] : !flow.dispatch.tensor<readonly:f32> -> tensor<f32>
    %3 = tensor.empty() : tensor<f32>
    %4 = linalg.generic {indexing_maps = [affine_map<() -> ()>, affine_map<() -> ()>], iterator_types = []} ins(%2 : tensor<f32>) outs(%3 : tensor<f32>) {
    ^bb0(%in: f32, %out: f32):
      %5 = math.absf %in : f32
      linalg.yield %5 : f32
    } -> tensor<f32>
    flow.dispatch.tensor.store %4, %1, offsets = [], sizes = [], strides = [] : tensor<f32> -> !flow.dispatch.tensor<writeonly:f32>
    return
  }
}
Root operation: %4 = linalg.generic {indexing_maps = [affine_map<() -> ()>, affine_map<() -> ()>], iterator_types = []} ins(%2 : tensor<f32>) outs(%3 : tensor<f32>) {
^bb0(%in: f32, %out: f32):
  %5 = math.absf %in : f32
  linalg.yield %5 : f32
} -> tensor<f32>
setRootConfig
setRootDefaultConfig
Root operation(setRootConfig): %4 = linalg.generic {indexing_maps = [affine_map<() -> ()>, affine_map<() -> ()>], iterator_types = []} ins(%2 : tensor<f32>) outs(%3 : tensor<f32>) attrs =  {lowering_config = #iree_codegen.lowering_config<tile_sizes = [[]]>} {
^bb0(%in: f32, %out: f32):
  %5 = math.absf %in : f32
  linalg.yield %5 : f32
} -> tensor<f32>
module {
  func.func @abs() {
    %c0 = arith.constant 0 : index
    %0 = hal.interface.binding.subspan set(0) binding(0) type(storage_buffer) alignment(32) offset(%c0) : !flow.dispatch.tensor<readonly:f32>
    %1 = hal.interface.binding.subspan set(0) binding(1) type(storage_buffer) alignment(32) offset(%c0) : !flow.dispatch.tensor<writeonly:f32>
    %2 = flow.dispatch.tensor.load %0, offsets = [], sizes = [], strides = [] : !flow.dispatch.tensor<readonly:f32> -> tensor<f32>
    %3 = tensor.empty() : tensor<f32>
    %4 = linalg.generic {indexing_maps = [affine_map<() -> ()>, affine_map<() -> ()>], iterator_types = []} ins(%2 : tensor<f32>) outs(%3 : tensor<f32>) attrs =  {lowering_config = #iree_codegen.lowering_config<tile_sizes = [[]]>} {
    ^bb0(%in: f32, %out: f32):
      %5 = math.absf %in : f32
      linalg.yield %5 : f32
    } -> tensor<f32>
    flow.dispatch.tensor.store %4, %1, offsets = [], sizes = [], strides = [] : tensor<f32> -> !flow.dispatch.tensor<writeonly:f32>
    return
  }
}
Print computeOps: 
Print tiledLoops: 
Tile Sizes:

Static Loop Ranges:

Interchange:

Partitionable Loops:

Dispatch Root Op:
%4 = linalg.generic {indexing_maps = [affine_map<() -> ()>, affine_map<() -> ()>], iterator_types = []} ins(%2 : tensor<f32>) outs(%3 : tensor<f32>) attrs =  {lowering_config = #iree_codegen.lowering_config<tile_sizes = [[]]>} {
^bb0(%in: f32, %out: f32):
  %5 = math.absf %in : f32
  linalg.yield %5 : f32
} -> tensor<f32>
[1329/1615] Generating iree_run_module_bytecode_module_vmvx.vmfb from iree-run-module.mlir
%4 = linalg.generic {indexing_maps = [affine_map<() -> ()>, affine_map<() -> ()>], iterator_types = []} ins(%2 : tensor<f32>) outs(%3 : tensor<f32>) attrs =  {lowering_config = #iree_codegen.lowering_config<tile_sizes = [[]]>} {
^bb0(%in: f32, %out: f32):
  %5 = math.absf %in : f32
  linalg.yield %5 : f32
} -> tensor<f32>
putGenericOps
linalg.generic is a root op
Normal graph pattern
Print computeOps: 
Print tiledLoops: 
Tile Sizes:

Static Loop Ranges:

Interchange:

Partitionable Loops:

Dispatch Root Op:
%4 = linalg.generic {indexing_maps = [affine_map<() -> ()>, affine_map<() -> ()>], iterator_types = []} ins(%2 : tensor<f32>) outs(%3 : tensor<f32>) attrs =  {lowering_config = #iree_codegen.lowering_config<tile_sizes = [[]]>} {
^bb0(%in: f32, %out: f32):
  %5 = math.absf %in : f32
  linalg.yield %5 : f32
} -> tensor<f32>
[1336/1615] Linking CXX executable runtime/src/ir...rivers/cuda/cts/cuda_command_buffer_dispatch_tes
FAILED: runtime/src/iree/hal/drivers/cuda/cts/cuda_command_buffer_dispatch_test 
: && /apps/generic/gcc/13.3.0/bin/g++ -O3 -DNDEBUG -lm -lpthread runtime/src/iree/hal/drivers/cuda/cts/CMakeFiles/iree_hal_drivers_cuda_cts_cuda_command_buffer_dispatch_test.dir/cuda_command_buffer_dispatch_test.cc.o -o runtime/src/iree/hal/drivers/cuda/cts/cuda_command_buffer_dispatch_test  runtime/src/iree/hal/drivers/cuda/registration/libiree_hal_drivers_cuda_registration_registration.a  runtime/src/iree/hal/drivers/cuda/cts/libiree_hal_drivers_cuda_cts_cuda_executables_c.a  runtime/src/iree/base/libiree_base_base.a  runtime/src/iree/hal/libiree_hal_hal.a  runtime/src/iree/testing/libiree_testing_gtest_main.a  runtime/src/iree/hal/drivers/cuda/libiree_hal_drivers_cuda_cuda.a  runtime/src/iree/hal/drivers/cuda/libiree_hal_drivers_cuda_dynamic_symbols.a  runtime/src/iree/base/internal/libiree_base_internal_dynamic_library.a  -ldl  build_tools/third_party/flatcc/libflatcc_parsing.a  runtime/src/iree/hal/utils/libiree_hal_utils_buffer_transfer.a  runtime/src/iree/hal/utils/libiree_hal_utils_collective_batch.a  runtime/src/iree/hal/utils/libiree_hal_utils_deferred_command_buffer.a  runtime/src/iree/hal/utils/libiree_hal_utils_resource_set.a  runtime/src/iree/base/internal/libiree_base_internal_arena.a  runtime/src/iree/base/internal/libiree_base_internal_atomic_slist.a  runtime/src/iree/hal/utils/libiree_hal_utils_semaphore_base.a  -lm  runtime/src/iree/hal/libiree_hal_hal.a  runtime/src/iree/base/internal/libiree_base_internal_path.a  runtime/src/iree/base/internal/libiree_base_internal_synchronization.a  runtime/src/iree/base/internal/libiree_base_internal_flags.a  runtime/src/iree/base/internal/libiree_base_internal_file_io.a  runtime/src/iree/base/libiree_base_base.a  runtime/src/iree/base/libiree_base_tracing.a  lib/libgmock.a  lib/libgtest.a  -lpthread && :
g++: fatal error: cannot execute ‘/apps/generic/gcc/13.3.0/libexec/gcc/x86_64-pc-linux-gnu/13.3.0/collect2’: vfork: Resource temporarily unavailable
compilation terminated.
[1337/1615] Linking CXX executable runtime/src/ir.../cuda/cts/cuda_command_buffer_push_constants_tes
FAILED: runtime/src/iree/hal/drivers/cuda/cts/cuda_command_buffer_push_constants_test 
: && /apps/generic/gcc/13.3.0/bin/g++ -O3 -DNDEBUG -lm -lpthread runtime/src/iree/hal/drivers/cuda/cts/CMakeFiles/iree_hal_drivers_cuda_cts_cuda_command_buffer_push_constants_test.dir/cuda_command_buffer_push_constants_test.cc.o -o runtime/src/iree/hal/drivers/cuda/cts/cuda_command_buffer_push_constants_test  runtime/src/iree/hal/drivers/cuda/registration/libiree_hal_drivers_cuda_registration_registration.a  runtime/src/iree/hal/drivers/cuda/cts/libiree_hal_drivers_cuda_cts_cuda_executables_c.a  runtime/src/iree/base/libiree_base_base.a  runtime/src/iree/hal/libiree_hal_hal.a  runtime/src/iree/testing/libiree_testing_gtest_main.a  runtime/src/iree/hal/drivers/cuda/libiree_hal_drivers_cuda_cuda.a  runtime/src/iree/hal/drivers/cuda/libiree_hal_drivers_cuda_dynamic_symbols.a  runtime/src/iree/base/internal/libiree_base_internal_dynamic_library.a  -ldl  build_tools/third_party/flatcc/libflatcc_parsing.a  runtime/src/iree/hal/utils/libiree_hal_utils_buffer_transfer.a  runtime/src/iree/hal/utils/libiree_hal_utils_collective_batch.a  runtime/src/iree/hal/utils/libiree_hal_utils_deferred_command_buffer.a  runtime/src/iree/hal/utils/libiree_hal_utils_resource_set.a  runtime/src/iree/base/internal/libiree_base_internal_arena.a  runtime/src/iree/base/internal/libiree_base_internal_atomic_slist.a  runtime/src/iree/hal/utils/libiree_hal_utils_semaphore_base.a  -lm  runtime/src/iree/hal/libiree_hal_hal.a  runtime/src/iree/base/internal/libiree_base_internal_path.a  runtime/src/iree/base/internal/libiree_base_internal_synchronization.a  runtime/src/iree/base/internal/libiree_base_internal_flags.a  runtime/src/iree/base/internal/libiree_base_internal_file_io.a  runtime/src/iree/base/libiree_base_base.a  runtime/src/iree/base/libiree_base_tracing.a  lib/libgmock.a  lib/libgtest.a  -lpthread && :
g++: fatal error: cannot execute ‘/apps/generic/gcc/13.3.0/libexec/gcc/x86_64-pc-linux-gnu/13.3.0/collect2’: vfork: Resource temporarily unavailable
compilation terminated.
[1339/1615] Generating llvm-cpu_executable_cache_test.bin from executable_cache_test.mlir
FAILED: runtime/src/iree/hal/drivers/local_sync/cts/llvm-cpu_executable_cache_test.bin /scratch1/akarande/moe-pim-iree/build/runtime/src/iree/hal/drivers/local_sync/cts/llvm-cpu_executable_cache_test.bin 
cd /scratch1/akarande/moe-pim-iree/build/runtime/src/iree/hal/drivers/local_sync/cts && /scratch1/akarande/moe-pim-iree/build/tools/iree-compile --output-format=vm-bytecode --compile-mode=hal-executable --iree-hal-target-backends=llvm-cpu /scratch1/akarande/moe-pim-iree/runtime/src/iree/hal/cts/testdata/executable_cache_test.mlir -o llvm-cpu_executable_cache_test.bin --iree-hal-executable-object-search-path=\"/scratch1/akarande/moe-pim-iree/build\" --iree-llvm-embedded-linker-path=\"/scratch1/akarande/moe-pim-iree/build/third_party/llvm-project/llvm/bin/lld\" --iree-llvm-wasm-linker-path=\"/scratch1/akarande/moe-pim-iree/build/third_party/llvm-project/llvm/bin/lld\"
%4 = linalg.generic {indexing_maps = [affine_map<() -> ()>, affine_map<() -> ()>], iterator_types = []} ins(%2 : tensor<f32>) outs(%3 : tensor<f32>) attrs =  {lowering_config = #iree_codegen.lowering_config<tile_sizes = [[]]>} {
^bb0(%in: f32, %out: f32):
  %5 = math.absf %in : f32
  linalg.yield %5 : f32
} -> tensor<f32>
terminate called after throwing an instance of 'std::system_error'
  what():  Resource temporarily unavailable
PLEASE submit a bug report to https://github.com/llvm/llvm-project/issues/ and include the crash backtrace.
Stack dump without symbol names (ensure you have llvm-symbolizer in your PATH or set the environment var `LLVM_SYMBOLIZER_PATH` to point to it):
0  lld             0x00000000008b0ceb llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) + 43
1  lld             0x00000000008ae5eb
2  libpthread.so.0 0x00007fbc2f1e8d10
3  libc.so.6       0x00007fbc2db7c52f gsignal + 271
4  libc.so.6       0x00007fbc2db4fe65 abort + 295
5  libstdc++.so.6  0x00007fbc2e556b37
6  libstdc++.so.6  0x00007fbc2e566f9a
7  libstdc++.so.6  0x00007fbc2e567005
8  libstdc++.so.6  0x00007fbc2e567257
9  libstdc++.so.6  0x00007fbc2e559bbd terminate called recursively
Linking failed; escaped command line returned exit code 134:

LLD_VERSION=IREE "/scratch1/akarande/moe-pim-iree/build/third_party/llvm-project/llvm/bin/lld" -flavor gnu -o /tmp/executable-81967c.so --build-id=none -nostdlib -static -shared --no-undefined --no-allow-shlib-undefined --allow-multiple-definition --gc-sections -z now -z relro --discard-all --icf=all --ignore-data-address-equality --ignore-function-address-equality --hash-style=sysv /tmp/executable-81967c.o

/scratch1/akarande/moe-pim-iree/runtime/src/iree/hal/cts/testdata/executable_cache_test.mlir:15:1: error: failed to link executable and generate target dylib (check above for more specific error messages)
hal.executable.source public @executable {
^
/scratch1/akarande/moe-pim-iree/runtime/src/iree/hal/cts/testdata/executable_cache_test.mlir:15:1: error: failed to serialize executable for target backend llvm-cpu
hal.executable.source public @executable {
^
/scratch1/akarande/moe-pim-iree/runtime/src/iree/hal/cts/testdata/executable_cache_test.mlir:15:1: note: see current operation: 
"hal.executable.variant"() ({
  "hal.executable.export"() ({
  ^bb0(%arg0: !hal.device):
    %0 = "arith.constant"() {value = 1 : index} : () -> index
    "hal.return"(%0, %0, %0) : (index, index, index) -> ()
  }) {layout = #hal.pipeline.layout<push_constants = 0, sets = [<0, bindings = [<0, storage_buffer>, <1, storage_buffer>]>]>, sym_name = "abs", translation_info = #iree_codegen.translation_info<CPUDefault>} : () -> ()
  "builtin.module"() ({
    "llvm.func"() ({
    ^bb0(%arg0: !llvm.ptr<struct<"iree_hal_executable_environment_v0_t", (ptr<i32>, ptr<func<i32 (ptr<func<i32 (ptr<i8>, ptr<i8>, ptr<i8>)>>, ptr<i8>, ptr<i8>, ptr<i8>)>>, ptr<ptr<func<i32 (ptr<i8>, ptr<i8>, ptr<i8>)>>>, ptr<ptr<i8>>, struct<"iree_hal_processor_v0_t", (array<8 x i64>)>)>>, %arg1: !llvm.ptr<struct<"iree_hal_executable_dispatch_state_v0_t", (i32, i32, i16, i16, i32, i32, i16, i8, i8, ptr<i32>, ptr<ptr<i8>>, ptr<i64>)>>, %arg2: !llvm.ptr<struct<"iree_hal_executable_workgroup_state_v0_t", (i32, i32, i16, i16, i32, ptr<ptr<i8>>, i32)>>):
      %0 = "llvm.mlir.constant"() {value = 0 : i32} : () -> i32
      %1 = "llvm.mlir.constant"() {value = 31 : index} : () -> i64
      %2 = "llvm.mlir.constant"() {value = 0 : index} : () -> i64
      %3 = "llvm.load"(%arg1) {ordering = 0 : i64} : (!llvm.ptr<struct<"iree_hal_executable_dispatch_state_v0_t", (i32, i32, i16, i16, i32, i32, i16, i8, i8, ptr<i32>, ptr<ptr<i8>>, ptr<i64>)>>) -> !llvm.struct<"iree_hal_executable_dispatch_state_v0_t", (i32, i32, i16, i16, i32, i32, i16, i8, i8, ptr<i32>, ptr<ptr<i8>>, ptr<i64>)>
      %4 = "llvm.extractvalue"(%3) {position = array<i64: 10>} : (!llvm.struct<"iree_hal_executable_dispatch_state_v0_t", (i32, i32, i16, i16, i32, i32, i16, i8, i8, ptr<i32>, ptr<ptr<i8>>, ptr<i64>)>) -> !llvm.ptr<ptr<i8>>
      %5 = "llvm.load"(%4) {ordering = 0 : i64} : (!llvm.ptr<ptr<i8>>) -> !llvm.ptr<i8>
      %6 = "llvm.bitcast"(%5) : (!llvm.ptr<i8>) -> !llvm.ptr<f32>
      %7 = "llvm.ptrtoint"(%6) : (!llvm.ptr<f32>) -> i64
      %8 = "llvm.and"(%7, %1) : (i64, i64) -> i64
      %9 = "llvm.icmp"(%8, %2) {predicate = 0 : i64} : (i64, i64) -> i1
      "llvm.intr.assume"(%9) : (i1) -> ()
      %10 = "llvm.load"(%arg1) {ordering = 0 : i64} : (!llvm.ptr<struct<"iree_hal_executable_dispatch_state_v0_t", (i32, i32, i16, i16, i32, i32, i16, i8, i8, ptr<i32>, ptr<ptr<i8>>, ptr<i64>)>>) -> !llvm.struct<"iree_hal_executable_dispatch_state_v0_t", (i32, i32, i16, i16, i32, i32, i16, i8, i8, ptr<i32>, ptr<ptr<i8>>, ptr<i64>)>
      %11 = "llvm.extractvalue"(%10) {position = array<i64: 10>} : (!llvm.struct<"iree_hal_executable_dispatch_state_v0_t", (i32, i32, i16, i16, i32, i32, i16, i8, i8, ptr<i32>, ptr<ptr<i8>>, ptr<i64>)>) -> !llvm.ptr<ptr<i8>>
      %12 = "llvm.getelementptr"(%11) {rawConstantIndices = array<i32: 1>} : (!llvm.ptr<ptr<i8>>) -> !llvm.ptr<ptr<i8>>
      %13 = "llvm.load"(%12) {ordering = 0 : i64} : (!llvm.ptr<ptr<i8>>) -> !llvm.ptr<i8>
      %14 = "llvm.bitcast"(%13) : (!llvm.ptr<i8>) -> !llvm.ptr<f32>
      %15 = "llvm.ptrtoint"(%14) : (!llvm.ptr<f32>) -> i64
      %16 = "llvm.and"(%15, %1) : (i64, i64) -> i64
      %17 = "llvm.icmp"(%16, %2) {predicate = 0 : i64} : (i64, i64) -> i1
      "llvm.intr.assume"(%17) : (i1) -> ()
      %18 = "llvm.load"(%6) {ordering = 0 : i64} : (!llvm.ptr<f32>) -> f32
      %19 = "llvm.intr.fabs"(%18) {fastmathFlags = #llvm.fastmath<none>} : (f32) -> f32
      "llvm.store"(%19, %14) : (f32, !llvm.ptr<f32>) -> ()
      "llvm.return"(%0) : (i32) -> ()
    }) {CConv = #llvm.cconv<ccc>, arg_attrs = [{llvm.align = 16 : i64, llvm.noalias}, {llvm.align = 16 : i64, llvm.noalias}, {llvm.align = 16 : i64, llvm.noalias}], function_type = !llvm.func<i32 (ptr<struct<"iree_hal_executable_environment_v0_t", (ptr<i32>, ptr<func<i32 (ptr<func<i32 (ptr<i8>, ptr<i8>, ptr<i8>)>>, ptr<i8>, ptr<i8>, ptr<i8>)>>, ptr<ptr<func<i32 (ptr<i8>, ptr<i8>, ptr<i8>)>>>, ptr<ptr<i8>>, struct<"iree_hal_processor_v0_t", (array<8 x i64>)>)>>, ptr<struct<"iree_hal_executable_dispatch_state_v0_t", (i32, i32, i16, i16, i32, i32, i16, i8, i8, ptr<i32>, ptr<ptr<i8>>, ptr<i64>)>>, ptr<struct<"iree_hal_executable_workgroup_state_v0_t", (i32, i32, i16, i16, i32, ptr<ptr<i8>>, i32)>>)>, linkage = #llvm.linkage<external>, sym_name = "abs"} : () -> ()
  }) {llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128", llvm.target_triple = "x86_64-unknown-unknown-eabi-elf"} : () -> ()
  "hal.executable.variant_end"() : () -> ()
}) {sym_name = "embedded_elf_x86_64", target = #hal.executable.target<"llvm-cpu", "embedded-elf-x86_64", {cpu = "generic", cpu_features = "", data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128", native_vector_size = 16 : index, target_triple = "x86_64-unknown-unknown-eabi-elf"}>} : () -> ()
/scratch1/akarande/moe-pim-iree/runtime/src/iree/hal/cts/testdata/executable_cache_test.mlir:15:1: error: failed to serialize executables
hal.executable.source public @executable {
^
/scratch1/akarande/moe-pim-iree/runtime/src/iree/hal/cts/testdata/executable_cache_test.mlir:15:1: note: see current operation: 
"hal.executable"() ({
  "hal.executable.variant"() ({
    "hal.executable.export"() ({
    ^bb0(%arg0: !hal.device):
      %0 = "arith.constant"() {value = 1 : index} : () -> index
      "hal.return"(%0, %0, %0) : (index, index, index) -> ()
    }) {layout = #hal.pipeline.layout<push_constants = 0, sets = [<0, bindings = [<0, storage_buffer>, <1, storage_buffer>]>]>, sym_name = "abs", translation_info = #iree_codegen.translation_info<CPUDefault>} : () -> ()
    "builtin.module"() ({
      "llvm.func"() ({
      ^bb0(%arg0: !llvm.ptr<struct<"iree_hal_executable_environment_v0_t", (ptr<i32>, ptr<func<i32 (ptr<func<i32 (ptr<i8>, ptr<i8>, ptr<i8>)>>, ptr<i8>, ptr<i8>, ptr<i8>)>>, ptr<ptr<func<i32 (ptr<i8>, ptr<i8>, ptr<i8>)>>>, ptr<ptr<i8>>, struct<"iree_hal_processor_v0_t", (array<8 x i64>)>)>>, %arg1: !llvm.ptr<struct<"iree_hal_executable_dispatch_state_v0_t", (i32, i32, i16, i16, i32, i32, i16, i8, i8, ptr<i32>, ptr<ptr<i8>>, ptr<i64>)>>, %arg2: !llvm.ptr<struct<"iree_hal_executable_workgroup_state_v0_t", (i32, i32, i16, i16, i32, ptr<ptr<i8>>, i32)>>):
        %0 = "llvm.mlir.constant"() {value = 0 : i32} : () -> i32
        %1 = "llvm.mlir.constant"() {value = 31 : index} : () -> i64
        %2 = "llvm.mlir.constant"() {value = 0 : index} : () -> i64
        %3 = "llvm.load"(%arg1) {ordering = 0 : i64} : (!llvm.ptr<struct<"iree_hal_executable_dispatch_state_v0_t", (i32, i32, i16, i16, i32, i32, i16, i8, i8, ptr<i32>, ptr<ptr<i8>>, ptr<i64>)>>) -> !llvm.struct<"iree_hal_executable_dispatch_state_v0_t", (i32, i32, i16, i16, i32, i32, i16, i8, i8, ptr<i32>, ptr<ptr<i8>>, ptr<i64>)>
        %4 = "llvm.extractvalue"(%3) {position = array<i64: 10>} : (!llvm.struct<"iree_hal_executable_dispatch_state_v0_t", (i32, i32, i16, i16, i32, i32, i16, i8, i8, ptr<i32>, ptr<ptr<i8>>, ptr<i64>)>) -> !llvm.ptr<ptr<i8>>
        %5 = "llvm.load"(%4) {ordering = 0 : i64} : (!llvm.ptr<ptr<i8>>) -> !llvm.ptr<i8>
        %6 = "llvm.bitcast"(%5) : (!llvm.ptr<i8>) -> !llvm.ptr<f32>
        %7 = "llvm.ptrtoint"(%6) : (!llvm.ptr<f32>) -> i64
        %8 = "llvm.and"(%7, %1) : (i64, i64) -> i64
        %9 = "llvm.icmp"(%8, %2) {predicate = 0 : i64} : (i64, i64) -> i1
        "llvm.intr.assume"(%9) : (i1) -> ()
        %10 = "llvm.load"(%arg1) {ordering = 0 : i64} : (!llvm.ptr<struct<"iree_hal_executable_dispatch_state_v0_t", (i32, i32, i16, i16, i32, i32, i16, i8, i8, ptr<i32>, ptr<ptr<i8>>, ptr<i64>)>>) -> !llvm.struct<"iree_hal_executable_dispatch_state_v0_t", (i32, i32, i16, i16, i32, i32, i16, i8, i8, ptr<i32>, ptr<ptr<i8>>, ptr<i64>)>
        %11 = "llvm.extractvalue"(%10) {position = array<i64: 10>} : (!llvm.struct<"iree_hal_executable_dispatch_state_v0_t", (i32, i32, i16, i16, i32, i32, i16, i8, i8, ptr<i32>, ptr<ptr<i8>>, ptr<i64>)>) -> !llvm.ptr<ptr<i8>>
        %12 = "llvm.getelementptr"(%11) {rawConstantIndices = array<i32: 1>} : (!llvm.ptr<ptr<i8>>) -> !llvm.ptr<ptr<i8>>
        %13 = "llvm.load"(%12) {ordering = 0 : i64} : (!llvm.ptr<ptr<i8>>) -> !llvm.ptr<i8>
        %14 = "llvm.bitcast"(%13) : (!llvm.ptr<i8>) -> !llvm.ptr<f32>
        %15 = "llvm.ptrtoint"(%14) : (!llvm.ptr<f32>) -> i64
        %16 = "llvm.and"(%15, %1) : (i64, i64) -> i64
        %17 = "llvm.icmp"(%16, %2) {predicate = 0 : i64} : (i64, i64) -> i1
        "llvm.intr.assume"(%17) : (i1) -> ()
        %18 = "llvm.load"(%6) {ordering = 0 : i64} : (!llvm.ptr<f32>) -> f32
        %19 = "llvm.intr.fabs"(%18) {fastmathFlags = #llvm.fastmath<none>} : (f32) -> f32
        "llvm.store"(%19, %14) : (f32, !llvm.ptr<f32>) -> ()
        "llvm.return"(%0) : (i32) -> ()
      }) {CConv = #llvm.cconv<ccc>, arg_attrs = [{llvm.align = 16 : i64, llvm.noalias}, {llvm.align = 16 : i64, llvm.noalias}, {llvm.align = 16 : i64, llvm.noalias}], function_type = !llvm.func<i32 (ptr<struct<"iree_hal_executable_environment_v0_t", (ptr<i32>, ptr<func<i32 (ptr<func<i32 (ptr<i8>, ptr<i8>, ptr<i8>)>>, ptr<i8>, ptr<i8>, ptr<i8>)>>, ptr<ptr<func<i32 (ptr<i8>, ptr<i8>, ptr<i8>)>>>, ptr<ptr<i8>>, struct<"iree_hal_processor_v0_t", (array<8 x i64>)>)>>, ptr<struct<"iree_hal_executable_dispatch_state_v0_t", (i32, i32, i16, i16, i32, i32, i16, i8, i8, ptr<i32>, ptr<ptr<i8>>, ptr<i64>)>>, ptr<struct<"iree_hal_executable_workgroup_state_v0_t", (i32, i32, i16, i16, i32, ptr<ptr<i8>>, i32)>>)>, linkage = #llvm.linkage<external>, sym_name = "abs"} : () -> ()
    }) {llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128", llvm.target_triple = "x86_64-unknown-unknown-eabi-elf"} : () -> ()
    "hal.executable.variant_end"() : () -> ()
  }) {sym_name = "embedded_elf_x86_64", target = #hal.executable.target<"llvm-cpu", "embedded-elf-x86_64", {cpu = "generic", cpu_features = "", data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128", native_vector_size = 16 : index, target_triple = "x86_64-unknown-unknown-eabi-elf"}>} : () -> ()
  "hal.executable_end"() : () -> ()
}) {sym_name = "executable"} : () -> ()
Print computeOps: 
Print tiledLoops: 
Tile Sizes:

Static Loop Ranges:

Interchange:

Partitionable Loops:

Dispatch Root Op:
%4 = linalg.generic {indexing_maps = [affine_map<() -> ()>, affine_map<() -> ()>], iterator_types = []} ins(%2 : tensor<f32>) outs(%3 : tensor<f32>) attrs =  {lowering_config = #iree_codegen.lowering_config<tile_sizes = [[]]>} {
^bb0(%in: f32, %out: f32):
  %5 = math.absf %in : f32
  linalg.yield %5 : f32
} -> tensor<f32>
[1340/1615] Generating llvm-cpu_command_buffer_pu....bin from command_buffer_push_constants_test.mli
FAILED: runtime/src/iree/hal/drivers/local_sync/cts/llvm-cpu_command_buffer_push_constants_test.bin /scratch1/akarande/moe-pim-iree/build/runtime/src/iree/hal/drivers/local_sync/cts/llvm-cpu_command_buffer_push_constants_test.bin 
cd /scratch1/akarande/moe-pim-iree/build/runtime/src/iree/hal/drivers/local_sync/cts && /scratch1/akarande/moe-pim-iree/build/tools/iree-compile --output-format=vm-bytecode --compile-mode=hal-executable --iree-hal-target-backends=llvm-cpu /scratch1/akarande/moe-pim-iree/runtime/src/iree/hal/cts/testdata/command_buffer_push_constants_test.mlir -o llvm-cpu_command_buffer_push_constants_test.bin --iree-hal-executable-object-search-path=\"/scratch1/akarande/moe-pim-iree/build\" --iree-llvm-embedded-linker-path=\"/scratch1/akarande/moe-pim-iree/build/third_party/llvm-project/llvm/bin/lld\" --iree-llvm-wasm-linker-path=\"/scratch1/akarande/moe-pim-iree/build/third_party/llvm-project/llvm/bin/lld\"
terminate called after throwing an instance of 'std::system_error'
  what():  Resource temporarily unavailable
PLEASE submit a bug report to https://github.com/llvm/llvm-project/issues/ and include the crash backtrace.
Stack dump without symbol names (ensure you have llvm-symbolizer in your PATH or set the environment var `LLVM_SYMBOLIZER_PATH` to point to it):
0  lld             0x00000000008b0ceb llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) + 43
1  lld             0x00000000008ae5eb
2  libpthread.so.0 0x00007f369184bd10
3  libc.so.6       0x00007f36901df52f gsignal + 271
4  libc.so.6       0x00007f36901b2e65 abort + 295
5  libstdc++.so.6  0x00007f3690bb9b37
6  libstdc++.so.6  0x00007f3690bc9f9a
7  libstdc++.so.6  0x00007f3690bca005
8  libstdc++.so.6  0x00007f3690bca257
9  libstdc++.so.6  0x00007f3690bbcbbd terminate called recursively
Linking failed; escaped command line returned exit code 134:

LLD_VERSION=IREE "/scratch1/akarande/moe-pim-iree/build/third_party/llvm-project/llvm/bin/lld" -flavor gnu -o /tmp/executable-94074e.so --build-id=none -nostdlib -static -shared --no-undefined --no-allow-shlib-undefined --allow-multiple-definition --gc-sections -z now -z relro --discard-all --icf=all --ignore-data-address-equality --ignore-function-address-equality --hash-style=sysv /tmp/executable-94074e.o

/scratch1/akarande/moe-pim-iree/runtime/src/iree/hal/cts/testdata/command_buffer_push_constants_test.mlir:9:1: error: failed to link executable and generate target dylib (check above for more specific error messages)
hal.executable.source public @executable {
^
/scratch1/akarande/moe-pim-iree/runtime/src/iree/hal/cts/testdata/command_buffer_push_constants_test.mlir:9:1: error: failed to serialize executable for target backend llvm-cpu
hal.executable.source public @executable {
^
/scratch1/akarande/moe-pim-iree/runtime/src/iree/hal/cts/testdata/command_buffer_push_constants_test.mlir:9:1: note: see current operation: 
"hal.executable.variant"() ({
  "hal.executable.export"() ({
  ^bb0(%arg0: !hal.device):
    %0 = "arith.constant"() {value = 1 : index} : () -> index
    "hal.return"(%0, %0, %0) : (index, index, index) -> ()
  }) {layout = #hal.pipeline.layout<push_constants = 4, sets = [<0, bindings = [<0, storage_buffer>]>]>, sym_name = "write_push_constants", translation_info = #iree_codegen.translation_info<CPUDefault>, workgroup_size = [1 : index, 1 : index, 1 : index]} : () -> ()
  "builtin.module"() ({
    "llvm.func"() ({
    ^bb0(%arg0: !llvm.ptr<struct<"iree_hal_executable_environment_v0_t", (ptr<i32>, ptr<func<i32 (ptr<func<i32 (ptr<i8>, ptr<i8>, ptr<i8>)>>, ptr<i8>, ptr<i8>, ptr<i8>)>>, ptr<ptr<func<i32 (ptr<i8>, ptr<i8>, ptr<i8>)>>>, ptr<ptr<i8>>, struct<"iree_hal_processor_v0_t", (array<8 x i64>)>)>>, %arg1: !llvm.ptr<struct<"iree_hal_executable_dispatch_state_v0_t", (i32, i32, i16, i16, i32, i32, i16, i8, i8, ptr<i32>, ptr<ptr<i8>>, ptr<i64>)>>, %arg2: !llvm.ptr<struct<"iree_hal_executable_workgroup_state_v0_t", (i32, i32, i16, i16, i32, ptr<ptr<i8>>, i32)>>):
      %0 = "llvm.mlir.constant"() {value = 0 : i32} : () -> i32
      %1 = "llvm.load"(%arg1) {ordering = 0 : i64} : (!llvm.ptr<struct<"iree_hal_executable_dispatch_state_v0_t", (i32, i32, i16, i16, i32, i32, i16, i8, i8, ptr<i32>, ptr<ptr<i8>>, ptr<i64>)>>) -> !llvm.struct<"iree_hal_executable_dispatch_state_v0_t", (i32, i32, i16, i16, i32, i32, i16, i8, i8, ptr<i32>, ptr<ptr<i8>>, ptr<i64>)>
      %2 = "llvm.extractvalue"(%1) {position = array<i64: 9>} : (!llvm.struct<"iree_hal_executable_dispatch_state_v0_t", (i32, i32, i16, i16, i32, i32, i16, i8, i8, ptr<i32>, ptr<ptr<i8>>, ptr<i64>)>) -> !llvm.ptr<i32>
      %3 = "llvm.load"(%2) {ordering = 0 : i64} : (!llvm.ptr<i32>) -> i32
      %4 = "llvm.getelementptr"(%2) {rawConstantIndices = array<i32: 1>} : (!llvm.ptr<i32>) -> !llvm.ptr<i32>
      %5 = "llvm.load"(%4) {ordering = 0 : i64} : (!llvm.ptr<i32>) -> i32
      %6 = "llvm.getelementptr"(%2) {rawConstantIndices = array<i32: 2>} : (!llvm.ptr<i32>) -> !llvm.ptr<i32>
      %7 = "llvm.load"(%6) {ordering = 0 : i64} : (!llvm.ptr<i32>) -> i32
      %8 = "llvm.getelementptr"(%2) {rawConstantIndices = array<i32: 3>} : (!llvm.ptr<i32>) -> !llvm.ptr<i32>
      %9 = "llvm.load"(%8) {ordering = 0 : i64} : (!llvm.ptr<i32>) -> i32
      %10 = "llvm.extractvalue"(%1) {position = array<i64: 10>} : (!llvm.struct<"iree_hal_executable_dispatch_state_v0_t", (i32, i32, i16, i16, i32, i32, i16, i8, i8, ptr<i32>, ptr<ptr<i8>>, ptr<i64>)>) -> !llvm.ptr<ptr<i8>>
      %11 = "llvm.load"(%10) {ordering = 0 : i64} : (!llvm.ptr<ptr<i8>>) -> !llvm.ptr<i8>
      %12 = "llvm.bitcast"(%11) : (!llvm.ptr<i8>) -> !llvm.ptr<i32>
      "llvm.store"(%3, %12) : (i32, !llvm.ptr<i32>) -> ()
      %13 = "llvm.getelementptr"(%12) {rawConstantIndices = array<i32: 1>} : (!llvm.ptr<i32>) -> !llvm.ptr<i32>
      "llvm.store"(%5, %13) : (i32, !llvm.ptr<i32>) -> ()
      %14 = "llvm.getelementptr"(%12) {rawConstantIndices = array<i32: 2>} : (!llvm.ptr<i32>) -> !llvm.ptr<i32>
      "llvm.store"(%7, %14) : (i32, !llvm.ptr<i32>) -> ()
      %15 = "llvm.getelementptr"(%12) {rawConstantIndices = array<i32: 3>} : (!llvm.ptr<i32>) -> !llvm.ptr<i32>
      "llvm.store"(%9, %15) : (i32, !llvm.ptr<i32>) -> ()
      "llvm.return"(%0) : (i32) -> ()
    }) {CConv = #llvm.cconv<ccc>, arg_attrs = [{llvm.align = 16 : i64, llvm.noalias}, {llvm.align = 16 : i64, llvm.noalias}, {llvm.align = 16 : i64, llvm.noalias}], function_type = !llvm.func<i32 (ptr<struct<"iree_hal_executable_environment_v0_t", (ptr<i32>, ptr<func<i32 (ptr<func<i32 (ptr<i8>, ptr<i8>, ptr<i8>)>>, ptr<i8>, ptr<i8>, ptr<i8>)>>, ptr<ptr<func<i32 (ptr<i8>, ptr<i8>, ptr<i8>)>>>, ptr<ptr<i8>>, struct<"iree_hal_processor_v0_t", (array<8 x i64>)>)>>, ptr<struct<"iree_hal_executable_dispatch_state_v0_t", (i32, i32, i16, i16, i32, i32, i16, i8, i8, ptr<i32>, ptr<ptr<i8>>, ptr<i64>)>>, ptr<struct<"iree_hal_executable_workgroup_state_v0_t", (i32, i32, i16, i16, i32, ptr<ptr<i8>>, i32)>>)>, linkage = #llvm.linkage<external>, sym_name = "write_push_constants"} : () -> ()
  }) {llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128", llvm.target_triple = "x86_64-unknown-unknown-eabi-elf"} : () -> ()
  "hal.executable.variant_end"() : () -> ()
}) {sym_name = "embedded_elf_x86_64", target = #hal.executable.target<"llvm-cpu", "embedded-elf-x86_64", {cpu = "generic", cpu_features = "", data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128", native_vector_size = 16 : index, target_triple = "x86_64-unknown-unknown-eabi-elf"}>} : () -> ()
/scratch1/akarande/moe-pim-iree/runtime/src/iree/hal/cts/testdata/command_buffer_push_constants_test.mlir:9:1: error: failed to serialize executables
hal.executable.source public @executable {
^
/scratch1/akarande/moe-pim-iree/runtime/src/iree/hal/cts/testdata/command_buffer_push_constants_test.mlir:9:1: note: see current operation: 
"hal.executable"() ({
  "hal.executable.variant"() ({
    "hal.executable.export"() ({
    ^bb0(%arg0: !hal.device):
      %0 = "arith.constant"() {value = 1 : index} : () -> index
      "hal.return"(%0, %0, %0) : (index, index, index) -> ()
    }) {layout = #hal.pipeline.layout<push_constants = 4, sets = [<0, bindings = [<0, storage_buffer>]>]>, sym_name = "write_push_constants", translation_info = #iree_codegen.translation_info<CPUDefault>, workgroup_size = [1 : index, 1 : index, 1 : index]} : () -> ()
    "builtin.module"() ({
      "llvm.func"() ({
      ^bb0(%arg0: !llvm.ptr<struct<"iree_hal_executable_environment_v0_t", (ptr<i32>, ptr<func<i32 (ptr<func<i32 (ptr<i8>, ptr<i8>, ptr<i8>)>>, ptr<i8>, ptr<i8>, ptr<i8>)>>, ptr<ptr<func<i32 (ptr<i8>, ptr<i8>, ptr<i8>)>>>, ptr<ptr<i8>>, struct<"iree_hal_processor_v0_t", (array<8 x i64>)>)>>, %arg1: !llvm.ptr<struct<"iree_hal_executable_dispatch_state_v0_t", (i32, i32, i16, i16, i32, i32, i16, i8, i8, ptr<i32>, ptr<ptr<i8>>, ptr<i64>)>>, %arg2: !llvm.ptr<struct<"iree_hal_executable_workgroup_state_v0_t", (i32, i32, i16, i16, i32, ptr<ptr<i8>>, i32)>>):
        %0 = "llvm.mlir.constant"() {value = 0 : i32} : () -> i32
        %1 = "llvm.load"(%arg1) {ordering = 0 : i64} : (!llvm.ptr<struct<"iree_hal_executable_dispatch_state_v0_t", (i32, i32, i16, i16, i32, i32, i16, i8, i8, ptr<i32>, ptr<ptr<i8>>, ptr<i64>)>>) -> !llvm.struct<"iree_hal_executable_dispatch_state_v0_t", (i32, i32, i16, i16, i32, i32, i16, i8, i8, ptr<i32>, ptr<ptr<i8>>, ptr<i64>)>
        %2 = "llvm.extractvalue"(%1) {position = array<i64: 9>} : (!llvm.struct<"iree_hal_executable_dispatch_state_v0_t", (i32, i32, i16, i16, i32, i32, i16, i8, i8, ptr<i32>, ptr<ptr<i8>>, ptr<i64>)>) -> !llvm.ptr<i32>
        %3 = "llvm.load"(%2) {ordering = 0 : i64} : (!llvm.ptr<i32>) -> i32
        %4 = "llvm.getelementptr"(%2) {rawConstantIndices = array<i32: 1>} : (!llvm.ptr<i32>) -> !llvm.ptr<i32>
        %5 = "llvm.load"(%4) {ordering = 0 : i64} : (!llvm.ptr<i32>) -> i32
        %6 = "llvm.getelementptr"(%2) {rawConstantIndices = array<i32: 2>} : (!llvm.ptr<i32>) -> !llvm.ptr<i32>
        %7 = "llvm.load"(%6) {ordering = 0 : i64} : (!llvm.ptr<i32>) -> i32
        %8 = "llvm.getelementptr"(%2) {rawConstantIndices = array<i32: 3>} : (!llvm.ptr<i32>) -> !llvm.ptr<i32>
        %9 = "llvm.load"(%8) {ordering = 0 : i64} : (!llvm.ptr<i32>) -> i32
        %10 = "llvm.extractvalue"(%1) {position = array<i64: 10>} : (!llvm.struct<"iree_hal_executable_dispatch_state_v0_t", (i32, i32, i16, i16, i32, i32, i16, i8, i8, ptr<i32>, ptr<ptr<i8>>, ptr<i64>)>) -> !llvm.ptr<ptr<i8>>
        %11 = "llvm.load"(%10) {ordering = 0 : i64} : (!llvm.ptr<ptr<i8>>) -> !llvm.ptr<i8>
        %12 = "llvm.bitcast"(%11) : (!llvm.ptr<i8>) -> !llvm.ptr<i32>
        "llvm.store"(%3, %12) : (i32, !llvm.ptr<i32>) -> ()
        %13 = "llvm.getelementptr"(%12) {rawConstantIndices = array<i32: 1>} : (!llvm.ptr<i32>) -> !llvm.ptr<i32>
        "llvm.store"(%5, %13) : (i32, !llvm.ptr<i32>) -> ()
        %14 = "llvm.getelementptr"(%12) {rawConstantIndices = array<i32: 2>} : (!llvm.ptr<i32>) -> !llvm.ptr<i32>
        "llvm.store"(%7, %14) : (i32, !llvm.ptr<i32>) -> ()
        %15 = "llvm.getelementptr"(%12) {rawConstantIndices = array<i32: 3>} : (!llvm.ptr<i32>) -> !llvm.ptr<i32>
        "llvm.store"(%9, %15) : (i32, !llvm.ptr<i32>) -> ()
        "llvm.return"(%0) : (i32) -> ()
      }) {CConv = #llvm.cconv<ccc>, arg_attrs = [{llvm.align = 16 : i64, llvm.noalias}, {llvm.align = 16 : i64, llvm.noalias}, {llvm.align = 16 : i64, llvm.noalias}], function_type = !llvm.func<i32 (ptr<struct<"iree_hal_executable_environment_v0_t", (ptr<i32>, ptr<func<i32 (ptr<func<i32 (ptr<i8>, ptr<i8>, ptr<i8>)>>, ptr<i8>, ptr<i8>, ptr<i8>)>>, ptr<ptr<func<i32 (ptr<i8>, ptr<i8>, ptr<i8>)>>>, ptr<ptr<i8>>, struct<"iree_hal_processor_v0_t", (array<8 x i64>)>)>>, ptr<struct<"iree_hal_executable_dispatch_state_v0_t", (i32, i32, i16, i16, i32, i32, i16, i8, i8, ptr<i32>, ptr<ptr<i8>>, ptr<i64>)>>, ptr<struct<"iree_hal_executable_workgroup_state_v0_t", (i32, i32, i16, i16, i32, ptr<ptr<i8>>, i32)>>)>, linkage = #llvm.linkage<external>, sym_name = "write_push_constants"} : () -> ()
    }) {llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128", llvm.target_triple = "x86_64-unknown-unknown-eabi-elf"} : () -> ()
    "hal.executable.variant_end"() : () -> ()
  }) {sym_name = "embedded_elf_x86_64", target = #hal.executable.target<"llvm-cpu", "embedded-elf-x86_64", {cpu = "generic", cpu_features = "", data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128", native_vector_size = 16 : index, target_triple = "x86_64-unknown-unknown-eabi-elf"}>} : () -> ()
  "hal.executable_end"() : () -> ()
}) {sym_name = "executable"} : () -> ()
Print computeOps: 
Print tiledLoops: 
Tile Sizes:

Static Loop Ranges:

Interchange:

Partitionable Loops:

Dispatch Root Op:
null
[1341/1615] Generating llvm-cpu_command_buffer_di...h_test.bin from command_buffer_dispatch_test.mli
FAILED: runtime/src/iree/hal/drivers/local_sync/cts/llvm-cpu_command_buffer_dispatch_test.bin /scratch1/akarande/moe-pim-iree/build/runtime/src/iree/hal/drivers/local_sync/cts/llvm-cpu_command_buffer_dispatch_test.bin 
cd /scratch1/akarande/moe-pim-iree/build/runtime/src/iree/hal/drivers/local_sync/cts && /scratch1/akarande/moe-pim-iree/build/tools/iree-compile --output-format=vm-bytecode --compile-mode=hal-executable --iree-hal-target-backends=llvm-cpu /scratch1/akarande/moe-pim-iree/runtime/src/iree/hal/cts/testdata/command_buffer_dispatch_test.mlir -o llvm-cpu_command_buffer_dispatch_test.bin --iree-hal-executable-object-search-path=\"/scratch1/akarande/moe-pim-iree/build\" --iree-llvm-embedded-linker-path=\"/scratch1/akarande/moe-pim-iree/build/third_party/llvm-project/llvm/bin/lld\" --iree-llvm-wasm-linker-path=\"/scratch1/akarande/moe-pim-iree/build/third_party/llvm-project/llvm/bin/lld\"
%4 = linalg.generic {indexing_maps = [affine_map<() -> ()>, affine_map<() -> ()>], iterator_types = []} ins(%2 : tensor<f32>) outs(%3 : tensor<f32>) attrs =  {lowering_config = #iree_codegen.lowering_config<tile_sizes = [[]]>} {
^bb0(%in: f32, %out: f32):
  %5 = math.absf %in : f32
  linalg.yield %5 : f32
} -> tensor<f32>
terminate called after throwing an instance of 'std::system_error'
  what():  Resource temporarily unavailable
PLEASE submit a bug report to https://github.com/llvm/llvm-project/issues/ and include the crash backtrace.
Stack dump without symbol names (ensure you have llvm-symbolizer in your PATH or set the environment var `LLVM_SYMBOLIZER_PATH` to point to it):
0  lld             0x00000000008b0ceb llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) + 43
1  lld             0x00000000008ae5eb
2  libpthread.so.0 0x00007fe620be3d10
3  libc.so.6       0x00007fe61f57752f gsignal + 271
4  libc.so.6       0x00007fe61f54ae65 abort + 295
5  libstdc++.so.6  0x00007fe61ff51b37
6  libstdc++.so.6  0x00007fe61ff61f9a
7  libstdc++.so.6  0x00007fe61ff62005
8  libstdc++.so.6  0x00007fe61ff62257
9  libstdc++.so.6  0x00007fe61ff54bbd terminate called recursively
Linking failed; escaped command line returned exit code 134:

LLD_VERSION=IREE "/scratch1/akarande/moe-pim-iree/build/third_party/llvm-project/llvm/bin/lld" -flavor gnu -o /tmp/executable-3dc11e.so --build-id=none -nostdlib -static -shared --no-undefined --no-allow-shlib-undefined --allow-multiple-definition --gc-sections -z now -z relro --discard-all --icf=all --ignore-data-address-equality --ignore-function-address-equality --hash-style=sysv /tmp/executable-3dc11e.o

/scratch1/akarande/moe-pim-iree/runtime/src/iree/hal/cts/testdata/command_buffer_dispatch_test.mlir:15:1: error: failed to link executable and generate target dylib (check above for more specific error messages)
hal.executable.source public @executable {
^
/scratch1/akarande/moe-pim-iree/runtime/src/iree/hal/cts/testdata/command_buffer_dispatch_test.mlir:15:1: error: failed to serialize executable for target backend llvm-cpu
hal.executable.source public @executable {
^
/scratch1/akarande/moe-pim-iree/runtime/src/iree/hal/cts/testdata/command_buffer_dispatch_test.mlir:15:1: note: see current operation: 
"hal.executable.variant"() ({
  "hal.executable.export"() ({
  ^bb0(%arg0: !hal.device):
    %0 = "arith.constant"() {value = 1 : index} : () -> index
    "hal.return"(%0, %0, %0) : (index, index, index) -> ()
  }) {layout = #hal.pipeline.layout<push_constants = 0, sets = [<0, bindings = [<0, storage_buffer>, <1, storage_buffer>]>]>, sym_name = "abs", translation_info = #iree_codegen.translation_info<CPUDefault>} : () -> ()
  "builtin.module"() ({
    "llvm.func"() ({
    ^bb0(%arg0: !llvm.ptr<struct<"iree_hal_executable_environment_v0_t", (ptr<i32>, ptr<func<i32 (ptr<func<i32 (ptr<i8>, ptr<i8>, ptr<i8>)>>, ptr<i8>, ptr<i8>, ptr<i8>)>>, ptr<ptr<func<i32 (ptr<i8>, ptr<i8>, ptr<i8>)>>>, ptr<ptr<i8>>, struct<"iree_hal_processor_v0_t", (array<8 x i64>)>)>>, %arg1: !llvm.ptr<struct<"iree_hal_executable_dispatch_state_v0_t", (i32, i32, i16, i16, i32, i32, i16, i8, i8, ptr<i32>, ptr<ptr<i8>>, ptr<i64>)>>, %arg2: !llvm.ptr<struct<"iree_hal_executable_workgroup_state_v0_t", (i32, i32, i16, i16, i32, ptr<ptr<i8>>, i32)>>):
      %0 = "llvm.mlir.constant"() {value = 0 : i32} : () -> i32
      %1 = "llvm.mlir.constant"() {value = 31 : index} : () -> i64
      %2 = "llvm.mlir.constant"() {value = 0 : index} : () -> i64
      %3 = "llvm.load"(%arg1) {ordering = 0 : i64} : (!llvm.ptr<struct<"iree_hal_executable_dispatch_state_v0_t", (i32, i32, i16, i16, i32, i32, i16, i8, i8, ptr<i32>, ptr<ptr<i8>>, ptr<i64>)>>) -> !llvm.struct<"iree_hal_executable_dispatch_state_v0_t", (i32, i32, i16, i16, i32, i32, i16, i8, i8, ptr<i32>, ptr<ptr<i8>>, ptr<i64>)>
      %4 = "llvm.extractvalue"(%3) {position = array<i64: 10>} : (!llvm.struct<"iree_hal_executable_dispatch_state_v0_t", (i32, i32, i16, i16, i32, i32, i16, i8, i8, ptr<i32>, ptr<ptr<i8>>, ptr<i64>)>) -> !llvm.ptr<ptr<i8>>
      %5 = "llvm.load"(%4) {ordering = 0 : i64} : (!llvm.ptr<ptr<i8>>) -> !llvm.ptr<i8>
      %6 = "llvm.bitcast"(%5) : (!llvm.ptr<i8>) -> !llvm.ptr<f32>
      %7 = "llvm.ptrtoint"(%6) : (!llvm.ptr<f32>) -> i64
      %8 = "llvm.and"(%7, %1) : (i64, i64) -> i64
      %9 = "llvm.icmp"(%8, %2) {predicate = 0 : i64} : (i64, i64) -> i1
      "llvm.intr.assume"(%9) : (i1) -> ()
      %10 = "llvm.load"(%arg1) {ordering = 0 : i64} : (!llvm.ptr<struct<"iree_hal_executable_dispatch_state_v0_t", (i32, i32, i16, i16, i32, i32, i16, i8, i8, ptr<i32>, ptr<ptr<i8>>, ptr<i64>)>>) -> !llvm.struct<"iree_hal_executable_dispatch_state_v0_t", (i32, i32, i16, i16, i32, i32, i16, i8, i8, ptr<i32>, ptr<ptr<i8>>, ptr<i64>)>
      %11 = "llvm.extractvalue"(%10) {position = array<i64: 10>} : (!llvm.struct<"iree_hal_executable_dispatch_state_v0_t", (i32, i32, i16, i16, i32, i32, i16, i8, i8, ptr<i32>, ptr<ptr<i8>>, ptr<i64>)>) -> !llvm.ptr<ptr<i8>>
      %12 = "llvm.getelementptr"(%11) {rawConstantIndices = array<i32: 1>} : (!llvm.ptr<ptr<i8>>) -> !llvm.ptr<ptr<i8>>
      %13 = "llvm.load"(%12) {ordering = 0 : i64} : (!llvm.ptr<ptr<i8>>) -> !llvm.ptr<i8>
      %14 = "llvm.bitcast"(%13) : (!llvm.ptr<i8>) -> !llvm.ptr<f32>
      %15 = "llvm.ptrtoint"(%14) : (!llvm.ptr<f32>) -> i64
      %16 = "llvm.and"(%15, %1) : (i64, i64) -> i64
      %17 = "llvm.icmp"(%16, %2) {predicate = 0 : i64} : (i64, i64) -> i1
      "llvm.intr.assume"(%17) : (i1) -> ()
      %18 = "llvm.load"(%6) {ordering = 0 : i64} : (!llvm.ptr<f32>) -> f32
      %19 = "llvm.intr.fabs"(%18) {fastmathFlags = #llvm.fastmath<none>} : (f32) -> f32
      "llvm.store"(%19, %14) : (f32, !llvm.ptr<f32>) -> ()
      "llvm.return"(%0) : (i32) -> ()
    }) {CConv = #llvm.cconv<ccc>, arg_attrs = [{llvm.align = 16 : i64, llvm.noalias}, {llvm.align = 16 : i64, llvm.noalias}, {llvm.align = 16 : i64, llvm.noalias}], function_type = !llvm.func<i32 (ptr<struct<"iree_hal_executable_environment_v0_t", (ptr<i32>, ptr<func<i32 (ptr<func<i32 (ptr<i8>, ptr<i8>, ptr<i8>)>>, ptr<i8>, ptr<i8>, ptr<i8>)>>, ptr<ptr<func<i32 (ptr<i8>, ptr<i8>, ptr<i8>)>>>, ptr<ptr<i8>>, struct<"iree_hal_processor_v0_t", (array<8 x i64>)>)>>, ptr<struct<"iree_hal_executable_dispatch_state_v0_t", (i32, i32, i16, i16, i32, i32, i16, i8, i8, ptr<i32>, ptr<ptr<i8>>, ptr<i64>)>>, ptr<struct<"iree_hal_executable_workgroup_state_v0_t", (i32, i32, i16, i16, i32, ptr<ptr<i8>>, i32)>>)>, linkage = #llvm.linkage<external>, sym_name = "abs"} : () -> ()
  }) {llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128", llvm.target_triple = "x86_64-unknown-unknown-eabi-elf"} : () -> ()
  "hal.executable.variant_end"() : () -> ()
}) {sym_name = "embedded_elf_x86_64", target = #hal.executable.target<"llvm-cpu", "embedded-elf-x86_64", {cpu = "generic", cpu_features = "", data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128", native_vector_size = 16 : index, target_triple = "x86_64-unknown-unknown-eabi-elf"}>} : () -> ()
/scratch1/akarande/moe-pim-iree/runtime/src/iree/hal/cts/testdata/command_buffer_dispatch_test.mlir:15:1: error: failed to serialize executables
hal.executable.source public @executable {
^
/scratch1/akarande/moe-pim-iree/runtime/src/iree/hal/cts/testdata/command_buffer_dispatch_test.mlir:15:1: note: see current operation: 
"hal.executable"() ({
  "hal.executable.variant"() ({
    "hal.executable.export"() ({
    ^bb0(%arg0: !hal.device):
      %0 = "arith.constant"() {value = 1 : index} : () -> index
      "hal.return"(%0, %0, %0) : (index, index, index) -> ()
    }) {layout = #hal.pipeline.layout<push_constants = 0, sets = [<0, bindings = [<0, storage_buffer>, <1, storage_buffer>]>]>, sym_name = "abs", translation_info = #iree_codegen.translation_info<CPUDefault>} : () -> ()
    "builtin.module"() ({
      "llvm.func"() ({
      ^bb0(%arg0: !llvm.ptr<struct<"iree_hal_executable_environment_v0_t", (ptr<i32>, ptr<func<i32 (ptr<func<i32 (ptr<i8>, ptr<i8>, ptr<i8>)>>, ptr<i8>, ptr<i8>, ptr<i8>)>>, ptr<ptr<func<i32 (ptr<i8>, ptr<i8>, ptr<i8>)>>>, ptr<ptr<i8>>, struct<"iree_hal_processor_v0_t", (array<8 x i64>)>)>>, %arg1: !llvm.ptr<struct<"iree_hal_executable_dispatch_state_v0_t", (i32, i32, i16, i16, i32, i32, i16, i8, i8, ptr<i32>, ptr<ptr<i8>>, ptr<i64>)>>, %arg2: !llvm.ptr<struct<"iree_hal_executable_workgroup_state_v0_t", (i32, i32, i16, i16, i32, ptr<ptr<i8>>, i32)>>):
        %0 = "llvm.mlir.constant"() {value = 0 : i32} : () -> i32
        %1 = "llvm.mlir.constant"() {value = 31 : index} : () -> i64
        %2 = "llvm.mlir.constant"() {value = 0 : index} : () -> i64
        %3 = "llvm.load"(%arg1) {ordering = 0 : i64} : (!llvm.ptr<struct<"iree_hal_executable_dispatch_state_v0_t", (i32, i32, i16, i16, i32, i32, i16, i8, i8, ptr<i32>, ptr<ptr<i8>>, ptr<i64>)>>) -> !llvm.struct<"iree_hal_executable_dispatch_state_v0_t", (i32, i32, i16, i16, i32, i32, i16, i8, i8, ptr<i32>, ptr<ptr<i8>>, ptr<i64>)>
        %4 = "llvm.extractvalue"(%3) {position = array<i64: 10>} : (!llvm.struct<"iree_hal_executable_dispatch_state_v0_t", (i32, i32, i16, i16, i32, i32, i16, i8, i8, ptr<i32>, ptr<ptr<i8>>, ptr<i64>)>) -> !llvm.ptr<ptr<i8>>
        %5 = "llvm.load"(%4) {ordering = 0 : i64} : (!llvm.ptr<ptr<i8>>) -> !llvm.ptr<i8>
        %6 = "llvm.bitcast"(%5) : (!llvm.ptr<i8>) -> !llvm.ptr<f32>
        %7 = "llvm.ptrtoint"(%6) : (!llvm.ptr<f32>) -> i64
        %8 = "llvm.and"(%7, %1) : (i64, i64) -> i64
        %9 = "llvm.icmp"(%8, %2) {predicate = 0 : i64} : (i64, i64) -> i1
        "llvm.intr.assume"(%9) : (i1) -> ()
        %10 = "llvm.load"(%arg1) {ordering = 0 : i64} : (!llvm.ptr<struct<"iree_hal_executable_dispatch_state_v0_t", (i32, i32, i16, i16, i32, i32, i16, i8, i8, ptr<i32>, ptr<ptr<i8>>, ptr<i64>)>>) -> !llvm.struct<"iree_hal_executable_dispatch_state_v0_t", (i32, i32, i16, i16, i32, i32, i16, i8, i8, ptr<i32>, ptr<ptr<i8>>, ptr<i64>)>
        %11 = "llvm.extractvalue"(%10) {position = array<i64: 10>} : (!llvm.struct<"iree_hal_executable_dispatch_state_v0_t", (i32, i32, i16, i16, i32, i32, i16, i8, i8, ptr<i32>, ptr<ptr<i8>>, ptr<i64>)>) -> !llvm.ptr<ptr<i8>>
        %12 = "llvm.getelementptr"(%11) {rawConstantIndices = array<i32: 1>} : (!llvm.ptr<ptr<i8>>) -> !llvm.ptr<ptr<i8>>
        %13 = "llvm.load"(%12) {ordering = 0 : i64} : (!llvm.ptr<ptr<i8>>) -> !llvm.ptr<i8>
        %14 = "llvm.bitcast"(%13) : (!llvm.ptr<i8>) -> !llvm.ptr<f32>
        %15 = "llvm.ptrtoint"(%14) : (!llvm.ptr<f32>) -> i64
        %16 = "llvm.and"(%15, %1) : (i64, i64) -> i64
        %17 = "llvm.icmp"(%16, %2) {predicate = 0 : i64} : (i64, i64) -> i1
        "llvm.intr.assume"(%17) : (i1) -> ()
        %18 = "llvm.load"(%6) {ordering = 0 : i64} : (!llvm.ptr<f32>) -> f32
        %19 = "llvm.intr.fabs"(%18) {fastmathFlags = #llvm.fastmath<none>} : (f32) -> f32
        "llvm.store"(%19, %14) : (f32, !llvm.ptr<f32>) -> ()
        "llvm.return"(%0) : (i32) -> ()
      }) {CConv = #llvm.cconv<ccc>, arg_attrs = [{llvm.align = 16 : i64, llvm.noalias}, {llvm.align = 16 : i64, llvm.noalias}, {llvm.align = 16 : i64, llvm.noalias}], function_type = !llvm.func<i32 (ptr<struct<"iree_hal_executable_environment_v0_t", (ptr<i32>, ptr<func<i32 (ptr<func<i32 (ptr<i8>, ptr<i8>, ptr<i8>)>>, ptr<i8>, ptr<i8>, ptr<i8>)>>, ptr<ptr<func<i32 (ptr<i8>, ptr<i8>, ptr<i8>)>>>, ptr<ptr<i8>>, struct<"iree_hal_processor_v0_t", (array<8 x i64>)>)>>, ptr<struct<"iree_hal_executable_dispatch_state_v0_t", (i32, i32, i16, i16, i32, i32, i16, i8, i8, ptr<i32>, ptr<ptr<i8>>, ptr<i64>)>>, ptr<struct<"iree_hal_executable_workgroup_state_v0_t", (i32, i32, i16, i16, i32, ptr<ptr<i8>>, i32)>>)>, linkage = #llvm.linkage<external>, sym_name = "abs"} : () -> ()
    }) {llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128", llvm.target_triple = "x86_64-unknown-unknown-eabi-elf"} : () -> ()
    "hal.executable.variant_end"() : () -> ()
  }) {sym_name = "embedded_elf_x86_64", target = #hal.executable.target<"llvm-cpu", "embedded-elf-x86_64", {cpu = "generic", cpu_features = "", data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128", native_vector_size = 16 : index, target_triple = "x86_64-unknown-unknown-eabi-elf"}>} : () -> ()
  "hal.executable_end"() : () -> ()
}) {sym_name = "executable"} : () -> ()
Print computeOps: 
Print tiledLoops: 
Tile Sizes:

Static Loop Ranges:

Interchange:

Partitionable Loops:

Dispatch Root Op:
%4 = linalg.generic {indexing_maps = [affine_map<() -> ()>, affine_map<() -> ()>], iterator_types = []} ins(%2 : tensor<f32>) outs(%3 : tensor<f32>) attrs =  {lowering_config = #iree_codegen.lowering_config<tile_sizes = [[]]>} {
^bb0(%in: f32, %out: f32):
  %5 = math.absf %in : f32
  linalg.yield %5 : f32
} -> tensor<f32>
ninja: build stopped: subcommand failed.
